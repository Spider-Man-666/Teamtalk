// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IM.Group.proto

#include "IM.Group.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace IM {
namespace Group {
class IMNormalGroupListReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IMNormalGroupListReq>
      _instance;
} _IMNormalGroupListReq_default_instance_;
class IMNormalGroupListRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IMNormalGroupListRsp>
      _instance;
} _IMNormalGroupListRsp_default_instance_;
class IMGroupInfoListReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IMGroupInfoListReq>
      _instance;
} _IMGroupInfoListReq_default_instance_;
class IMGroupInfoListRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IMGroupInfoListRsp>
      _instance;
} _IMGroupInfoListRsp_default_instance_;
class IMGroupCreateReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IMGroupCreateReq>
      _instance;
} _IMGroupCreateReq_default_instance_;
class IMGroupCreateRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IMGroupCreateRsp>
      _instance;
} _IMGroupCreateRsp_default_instance_;
class IMGroupChangeMemberReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IMGroupChangeMemberReq>
      _instance;
} _IMGroupChangeMemberReq_default_instance_;
class IMGroupChangeMemberRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IMGroupChangeMemberRsp>
      _instance;
} _IMGroupChangeMemberRsp_default_instance_;
class IMGroupShieldReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IMGroupShieldReq>
      _instance;
} _IMGroupShieldReq_default_instance_;
class IMGroupShieldRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IMGroupShieldRsp>
      _instance;
} _IMGroupShieldRsp_default_instance_;
class IMGroupChangeMemberNotifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IMGroupChangeMemberNotify>
      _instance;
} _IMGroupChangeMemberNotify_default_instance_;
}  // namespace Group
}  // namespace IM
namespace protobuf_IM_2eGroup_2eproto {
void InitDefaultsIMNormalGroupListReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::IM::Group::_IMNormalGroupListReq_default_instance_;
    new (ptr) ::IM::Group::IMNormalGroupListReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IM::Group::IMNormalGroupListReq::InitAsDefaultInstance();
}

void InitDefaultsIMNormalGroupListReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIMNormalGroupListReqImpl);
}

void InitDefaultsIMNormalGroupListRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_IM_2eBaseDefine_2eproto::InitDefaultsGroupVersionInfo();
  {
    void* ptr = &::IM::Group::_IMNormalGroupListRsp_default_instance_;
    new (ptr) ::IM::Group::IMNormalGroupListRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IM::Group::IMNormalGroupListRsp::InitAsDefaultInstance();
}

void InitDefaultsIMNormalGroupListRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIMNormalGroupListRspImpl);
}

void InitDefaultsIMGroupInfoListReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_IM_2eBaseDefine_2eproto::InitDefaultsGroupVersionInfo();
  {
    void* ptr = &::IM::Group::_IMGroupInfoListReq_default_instance_;
    new (ptr) ::IM::Group::IMGroupInfoListReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IM::Group::IMGroupInfoListReq::InitAsDefaultInstance();
}

void InitDefaultsIMGroupInfoListReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIMGroupInfoListReqImpl);
}

void InitDefaultsIMGroupInfoListRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_IM_2eBaseDefine_2eproto::InitDefaultsGroupInfo();
  {
    void* ptr = &::IM::Group::_IMGroupInfoListRsp_default_instance_;
    new (ptr) ::IM::Group::IMGroupInfoListRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IM::Group::IMGroupInfoListRsp::InitAsDefaultInstance();
}

void InitDefaultsIMGroupInfoListRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIMGroupInfoListRspImpl);
}

void InitDefaultsIMGroupCreateReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::IM::Group::_IMGroupCreateReq_default_instance_;
    new (ptr) ::IM::Group::IMGroupCreateReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IM::Group::IMGroupCreateReq::InitAsDefaultInstance();
}

void InitDefaultsIMGroupCreateReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIMGroupCreateReqImpl);
}

void InitDefaultsIMGroupCreateRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::IM::Group::_IMGroupCreateRsp_default_instance_;
    new (ptr) ::IM::Group::IMGroupCreateRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IM::Group::IMGroupCreateRsp::InitAsDefaultInstance();
}

void InitDefaultsIMGroupCreateRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIMGroupCreateRspImpl);
}

void InitDefaultsIMGroupChangeMemberReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::IM::Group::_IMGroupChangeMemberReq_default_instance_;
    new (ptr) ::IM::Group::IMGroupChangeMemberReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IM::Group::IMGroupChangeMemberReq::InitAsDefaultInstance();
}

void InitDefaultsIMGroupChangeMemberReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIMGroupChangeMemberReqImpl);
}

void InitDefaultsIMGroupChangeMemberRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::IM::Group::_IMGroupChangeMemberRsp_default_instance_;
    new (ptr) ::IM::Group::IMGroupChangeMemberRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IM::Group::IMGroupChangeMemberRsp::InitAsDefaultInstance();
}

void InitDefaultsIMGroupChangeMemberRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIMGroupChangeMemberRspImpl);
}

void InitDefaultsIMGroupShieldReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::IM::Group::_IMGroupShieldReq_default_instance_;
    new (ptr) ::IM::Group::IMGroupShieldReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IM::Group::IMGroupShieldReq::InitAsDefaultInstance();
}

void InitDefaultsIMGroupShieldReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIMGroupShieldReqImpl);
}

void InitDefaultsIMGroupShieldRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::IM::Group::_IMGroupShieldRsp_default_instance_;
    new (ptr) ::IM::Group::IMGroupShieldRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IM::Group::IMGroupShieldRsp::InitAsDefaultInstance();
}

void InitDefaultsIMGroupShieldRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIMGroupShieldRspImpl);
}

void InitDefaultsIMGroupChangeMemberNotifyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::IM::Group::_IMGroupChangeMemberNotify_default_instance_;
    new (ptr) ::IM::Group::IMGroupChangeMemberNotify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IM::Group::IMGroupChangeMemberNotify::InitAsDefaultInstance();
}

void InitDefaultsIMGroupChangeMemberNotify() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIMGroupChangeMemberNotifyImpl);
}

::google::protobuf::Metadata file_level_metadata[11];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMNormalGroupListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMNormalGroupListReq, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMNormalGroupListReq, attach_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMNormalGroupListRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMNormalGroupListRsp, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMNormalGroupListRsp, group_version_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMNormalGroupListRsp, attach_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupInfoListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupInfoListReq, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupInfoListReq, group_version_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupInfoListReq, attach_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupInfoListRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupInfoListRsp, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupInfoListRsp, group_info_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupInfoListRsp, attach_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupCreateReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupCreateReq, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupCreateReq, group_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupCreateReq, group_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupCreateReq, group_avatar_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupCreateReq, member_id_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupCreateReq, attach_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupCreateRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupCreateRsp, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupCreateRsp, result_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupCreateRsp, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupCreateRsp, group_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupCreateRsp, user_id_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupCreateRsp, attach_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupChangeMemberReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupChangeMemberReq, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupChangeMemberReq, change_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupChangeMemberReq, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupChangeMemberReq, member_id_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupChangeMemberReq, attach_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupChangeMemberRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupChangeMemberRsp, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupChangeMemberRsp, change_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupChangeMemberRsp, result_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupChangeMemberRsp, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupChangeMemberRsp, cur_user_id_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupChangeMemberRsp, chg_user_id_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupChangeMemberRsp, attach_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupShieldReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupShieldReq, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupShieldReq, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupShieldReq, shield_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupShieldReq, attach_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupShieldRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupShieldRsp, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupShieldRsp, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupShieldRsp, result_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupShieldRsp, attach_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupChangeMemberNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupChangeMemberNotify, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupChangeMemberNotify, change_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupChangeMemberNotify, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupChangeMemberNotify, cur_user_id_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::Group::IMGroupChangeMemberNotify, chg_user_id_list_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::IM::Group::IMNormalGroupListReq)},
  { 7, -1, sizeof(::IM::Group::IMNormalGroupListRsp)},
  { 15, -1, sizeof(::IM::Group::IMGroupInfoListReq)},
  { 23, -1, sizeof(::IM::Group::IMGroupInfoListRsp)},
  { 31, -1, sizeof(::IM::Group::IMGroupCreateReq)},
  { 42, -1, sizeof(::IM::Group::IMGroupCreateRsp)},
  { 53, -1, sizeof(::IM::Group::IMGroupChangeMemberReq)},
  { 63, -1, sizeof(::IM::Group::IMGroupChangeMemberRsp)},
  { 75, -1, sizeof(::IM::Group::IMGroupShieldReq)},
  { 84, -1, sizeof(::IM::Group::IMGroupShieldRsp)},
  { 93, -1, sizeof(::IM::Group::IMGroupChangeMemberNotify)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::IM::Group::_IMNormalGroupListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IM::Group::_IMNormalGroupListRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IM::Group::_IMGroupInfoListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IM::Group::_IMGroupInfoListRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IM::Group::_IMGroupCreateReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IM::Group::_IMGroupCreateRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IM::Group::_IMGroupChangeMemberReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IM::Group::_IMGroupChangeMemberRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IM::Group::_IMGroupShieldReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IM::Group::_IMGroupShieldRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IM::Group::_IMGroupChangeMemberNotify_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "IM.Group.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 11);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016IM.Group.proto\022\010IM.Group\032\023IM.BaseDefin"
      "e.proto\"<\n\024IMNormalGroupListReq\022\017\n\007user_"
      "id\030\001 \001(\r\022\023\n\013attach_data\030\024 \001(\014\"y\n\024IMNorma"
      "lGroupListRsp\022\017\n\007user_id\030\001 \001(\r\022;\n\022group_"
      "version_list\030\002 \003(\0132\037.IM.BaseDefine.Group"
      "VersionInfo\022\023\n\013attach_data\030\024 \001(\014\"w\n\022IMGr"
      "oupInfoListReq\022\017\n\007user_id\030\001 \001(\r\022;\n\022group"
      "_version_list\030\002 \003(\0132\037.IM.BaseDefine.Grou"
      "pVersionInfo\022\023\n\013attach_data\030\024 \001(\014\"m\n\022IMG"
      "roupInfoListRsp\022\017\n\007user_id\030\001 \001(\r\0221\n\017grou"
      "p_info_list\030\002 \003(\0132\030.IM.BaseDefine.GroupI"
      "nfo\022\023\n\013attach_data\030\024 \001(\014\"\250\001\n\020IMGroupCrea"
      "teReq\022\017\n\007user_id\030\001 \001(\r\022,\n\ngroup_type\030\002 \001"
      "(\0162\030.IM.BaseDefine.GroupType\022\022\n\ngroup_na"
      "me\030\003 \001(\t\022\024\n\014group_avatar\030\004 \001(\t\022\026\n\016member"
      "_id_list\030\005 \003(\r\022\023\n\013attach_data\030\024 \001(\014\"\211\001\n\020"
      "IMGroupCreateRsp\022\017\n\007user_id\030\001 \001(\r\022\023\n\013res"
      "ult_code\030\002 \001(\r\022\020\n\010group_id\030\003 \001(\r\022\022\n\ngrou"
      "p_name\030\004 \001(\t\022\024\n\014user_id_list\030\005 \003(\r\022\023\n\013at"
      "tach_data\030\024 \001(\014\"\235\001\n\026IMGroupChangeMemberR"
      "eq\022\017\n\007user_id\030\001 \001(\r\0223\n\013change_type\030\002 \001(\016"
      "2\036.IM.BaseDefine.GroupModifyType\022\020\n\010grou"
      "p_id\030\003 \001(\r\022\026\n\016member_id_list\030\004 \003(\r\022\023\n\013at"
      "tach_data\030\024 \001(\014\"\316\001\n\026IMGroupChangeMemberR"
      "sp\022\017\n\007user_id\030\001 \001(\r\0223\n\013change_type\030\002 \001(\016"
      "2\036.IM.BaseDefine.GroupModifyType\022\023\n\013resu"
      "lt_code\030\003 \001(\r\022\020\n\010group_id\030\004 \001(\r\022\030\n\020cur_u"
      "ser_id_list\030\005 \003(\r\022\030\n\020chg_user_id_list\030\006 "
      "\003(\r\022\023\n\013attach_data\030\024 \001(\014\"a\n\020IMGroupShiel"
      "dReq\022\017\n\007user_id\030\001 \001(\r\022\020\n\010group_id\030\002 \001(\r\022"
      "\025\n\rshield_status\030\003 \001(\r\022\023\n\013attach_data\030\024 "
      "\001(\014\"_\n\020IMGroupShieldRsp\022\017\n\007user_id\030\001 \001(\r"
      "\022\020\n\010group_id\030\002 \001(\r\022\023\n\013result_code\030\003 \001(\r\022"
      "\023\n\013attach_data\030\024 \001(\014\"\247\001\n\031IMGroupChangeMe"
      "mberNotify\022\017\n\007user_id\030\001 \001(\r\0223\n\013change_ty"
      "pe\030\002 \001(\0162\036.IM.BaseDefine.GroupModifyType"
      "\022\020\n\010group_id\030\003 \001(\r\022\030\n\020cur_user_id_list\030\004"
      " \003(\r\022\030\n\020chg_user_id_list\030\005 \003(\rB\031\n\027com.mo"
      "gujie.tt.protobufb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1545);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "IM.Group.proto", &protobuf_RegisterTypes);
  ::protobuf_IM_2eBaseDefine_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_IM_2eGroup_2eproto
namespace IM {
namespace Group {

// ===================================================================

void IMNormalGroupListReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IMNormalGroupListReq::kUserIdFieldNumber;
const int IMNormalGroupListReq::kAttachDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IMNormalGroupListReq::IMNormalGroupListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_IM_2eGroup_2eproto::InitDefaultsIMNormalGroupListReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.Group.IMNormalGroupListReq)
}
IMNormalGroupListReq::IMNormalGroupListReq(const IMNormalGroupListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.attach_data().size() > 0) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:IM.Group.IMNormalGroupListReq)
}

void IMNormalGroupListReq::SharedCtor() {
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0u;
  _cached_size_ = 0;
}

IMNormalGroupListReq::~IMNormalGroupListReq() {
  // @@protoc_insertion_point(destructor:IM.Group.IMNormalGroupListReq)
  SharedDtor();
}

void IMNormalGroupListReq::SharedDtor() {
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IMNormalGroupListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IMNormalGroupListReq::descriptor() {
  ::protobuf_IM_2eGroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eGroup_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IMNormalGroupListReq& IMNormalGroupListReq::default_instance() {
  ::protobuf_IM_2eGroup_2eproto::InitDefaultsIMNormalGroupListReq();
  return *internal_default_instance();
}

IMNormalGroupListReq* IMNormalGroupListReq::New(::google::protobuf::Arena* arena) const {
  IMNormalGroupListReq* n = new IMNormalGroupListReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IMNormalGroupListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.Group.IMNormalGroupListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0u;
  _internal_metadata_.Clear();
}

bool IMNormalGroupListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IM.Group.IMNormalGroupListReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IM.Group.IMNormalGroupListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.Group.IMNormalGroupListReq)
  return false;
#undef DO_
}

void IMNormalGroupListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.Group.IMNormalGroupListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IM.Group.IMNormalGroupListReq)
}

::google::protobuf::uint8* IMNormalGroupListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IM.Group.IMNormalGroupListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        20, this->attach_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IM.Group.IMNormalGroupListReq)
  return target;
}

size_t IMNormalGroupListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IM.Group.IMNormalGroupListReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IMNormalGroupListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IM.Group.IMNormalGroupListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const IMNormalGroupListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IMNormalGroupListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IM.Group.IMNormalGroupListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IM.Group.IMNormalGroupListReq)
    MergeFrom(*source);
  }
}

void IMNormalGroupListReq::MergeFrom(const IMNormalGroupListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.Group.IMNormalGroupListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.attach_data().size() > 0) {

    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void IMNormalGroupListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IM.Group.IMNormalGroupListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IMNormalGroupListReq::CopyFrom(const IMNormalGroupListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.Group.IMNormalGroupListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IMNormalGroupListReq::IsInitialized() const {
  return true;
}

void IMNormalGroupListReq::Swap(IMNormalGroupListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IMNormalGroupListReq::InternalSwap(IMNormalGroupListReq* other) {
  using std::swap;
  attach_data_.Swap(&other->attach_data_);
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IMNormalGroupListReq::GetMetadata() const {
  protobuf_IM_2eGroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eGroup_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IMNormalGroupListRsp::InitAsDefaultInstance() {
}
void IMNormalGroupListRsp::clear_group_version_list() {
  group_version_list_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IMNormalGroupListRsp::kUserIdFieldNumber;
const int IMNormalGroupListRsp::kGroupVersionListFieldNumber;
const int IMNormalGroupListRsp::kAttachDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IMNormalGroupListRsp::IMNormalGroupListRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_IM_2eGroup_2eproto::InitDefaultsIMNormalGroupListRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.Group.IMNormalGroupListRsp)
}
IMNormalGroupListRsp::IMNormalGroupListRsp(const IMNormalGroupListRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      group_version_list_(from.group_version_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.attach_data().size() > 0) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:IM.Group.IMNormalGroupListRsp)
}

void IMNormalGroupListRsp::SharedCtor() {
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0u;
  _cached_size_ = 0;
}

IMNormalGroupListRsp::~IMNormalGroupListRsp() {
  // @@protoc_insertion_point(destructor:IM.Group.IMNormalGroupListRsp)
  SharedDtor();
}

void IMNormalGroupListRsp::SharedDtor() {
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IMNormalGroupListRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IMNormalGroupListRsp::descriptor() {
  ::protobuf_IM_2eGroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eGroup_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IMNormalGroupListRsp& IMNormalGroupListRsp::default_instance() {
  ::protobuf_IM_2eGroup_2eproto::InitDefaultsIMNormalGroupListRsp();
  return *internal_default_instance();
}

IMNormalGroupListRsp* IMNormalGroupListRsp::New(::google::protobuf::Arena* arena) const {
  IMNormalGroupListRsp* n = new IMNormalGroupListRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IMNormalGroupListRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.Group.IMNormalGroupListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  group_version_list_.Clear();
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0u;
  _internal_metadata_.Clear();
}

bool IMNormalGroupListRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IM.Group.IMNormalGroupListRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .IM.BaseDefine.GroupVersionInfo group_version_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_group_version_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IM.Group.IMNormalGroupListRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.Group.IMNormalGroupListRsp)
  return false;
#undef DO_
}

void IMNormalGroupListRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.Group.IMNormalGroupListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // repeated .IM.BaseDefine.GroupVersionInfo group_version_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->group_version_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->group_version_list(static_cast<int>(i)), output);
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IM.Group.IMNormalGroupListRsp)
}

::google::protobuf::uint8* IMNormalGroupListRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IM.Group.IMNormalGroupListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // repeated .IM.BaseDefine.GroupVersionInfo group_version_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->group_version_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->group_version_list(static_cast<int>(i)), deterministic, target);
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        20, this->attach_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IM.Group.IMNormalGroupListRsp)
  return target;
}

size_t IMNormalGroupListRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IM.Group.IMNormalGroupListRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .IM.BaseDefine.GroupVersionInfo group_version_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->group_version_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->group_version_list(static_cast<int>(i)));
    }
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IMNormalGroupListRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IM.Group.IMNormalGroupListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const IMNormalGroupListRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IMNormalGroupListRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IM.Group.IMNormalGroupListRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IM.Group.IMNormalGroupListRsp)
    MergeFrom(*source);
  }
}

void IMNormalGroupListRsp::MergeFrom(const IMNormalGroupListRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.Group.IMNormalGroupListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  group_version_list_.MergeFrom(from.group_version_list_);
  if (from.attach_data().size() > 0) {

    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void IMNormalGroupListRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IM.Group.IMNormalGroupListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IMNormalGroupListRsp::CopyFrom(const IMNormalGroupListRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.Group.IMNormalGroupListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IMNormalGroupListRsp::IsInitialized() const {
  return true;
}

void IMNormalGroupListRsp::Swap(IMNormalGroupListRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IMNormalGroupListRsp::InternalSwap(IMNormalGroupListRsp* other) {
  using std::swap;
  group_version_list_.InternalSwap(&other->group_version_list_);
  attach_data_.Swap(&other->attach_data_);
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IMNormalGroupListRsp::GetMetadata() const {
  protobuf_IM_2eGroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eGroup_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IMGroupInfoListReq::InitAsDefaultInstance() {
}
void IMGroupInfoListReq::clear_group_version_list() {
  group_version_list_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IMGroupInfoListReq::kUserIdFieldNumber;
const int IMGroupInfoListReq::kGroupVersionListFieldNumber;
const int IMGroupInfoListReq::kAttachDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IMGroupInfoListReq::IMGroupInfoListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_IM_2eGroup_2eproto::InitDefaultsIMGroupInfoListReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.Group.IMGroupInfoListReq)
}
IMGroupInfoListReq::IMGroupInfoListReq(const IMGroupInfoListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      group_version_list_(from.group_version_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.attach_data().size() > 0) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:IM.Group.IMGroupInfoListReq)
}

void IMGroupInfoListReq::SharedCtor() {
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0u;
  _cached_size_ = 0;
}

IMGroupInfoListReq::~IMGroupInfoListReq() {
  // @@protoc_insertion_point(destructor:IM.Group.IMGroupInfoListReq)
  SharedDtor();
}

void IMGroupInfoListReq::SharedDtor() {
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IMGroupInfoListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IMGroupInfoListReq::descriptor() {
  ::protobuf_IM_2eGroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eGroup_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IMGroupInfoListReq& IMGroupInfoListReq::default_instance() {
  ::protobuf_IM_2eGroup_2eproto::InitDefaultsIMGroupInfoListReq();
  return *internal_default_instance();
}

IMGroupInfoListReq* IMGroupInfoListReq::New(::google::protobuf::Arena* arena) const {
  IMGroupInfoListReq* n = new IMGroupInfoListReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IMGroupInfoListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.Group.IMGroupInfoListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  group_version_list_.Clear();
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0u;
  _internal_metadata_.Clear();
}

bool IMGroupInfoListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IM.Group.IMGroupInfoListReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .IM.BaseDefine.GroupVersionInfo group_version_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_group_version_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IM.Group.IMGroupInfoListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.Group.IMGroupInfoListReq)
  return false;
#undef DO_
}

void IMGroupInfoListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.Group.IMGroupInfoListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // repeated .IM.BaseDefine.GroupVersionInfo group_version_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->group_version_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->group_version_list(static_cast<int>(i)), output);
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IM.Group.IMGroupInfoListReq)
}

::google::protobuf::uint8* IMGroupInfoListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IM.Group.IMGroupInfoListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // repeated .IM.BaseDefine.GroupVersionInfo group_version_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->group_version_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->group_version_list(static_cast<int>(i)), deterministic, target);
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        20, this->attach_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IM.Group.IMGroupInfoListReq)
  return target;
}

size_t IMGroupInfoListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IM.Group.IMGroupInfoListReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .IM.BaseDefine.GroupVersionInfo group_version_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->group_version_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->group_version_list(static_cast<int>(i)));
    }
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IMGroupInfoListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IM.Group.IMGroupInfoListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const IMGroupInfoListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IMGroupInfoListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IM.Group.IMGroupInfoListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IM.Group.IMGroupInfoListReq)
    MergeFrom(*source);
  }
}

void IMGroupInfoListReq::MergeFrom(const IMGroupInfoListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.Group.IMGroupInfoListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  group_version_list_.MergeFrom(from.group_version_list_);
  if (from.attach_data().size() > 0) {

    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void IMGroupInfoListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IM.Group.IMGroupInfoListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IMGroupInfoListReq::CopyFrom(const IMGroupInfoListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.Group.IMGroupInfoListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IMGroupInfoListReq::IsInitialized() const {
  return true;
}

void IMGroupInfoListReq::Swap(IMGroupInfoListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IMGroupInfoListReq::InternalSwap(IMGroupInfoListReq* other) {
  using std::swap;
  group_version_list_.InternalSwap(&other->group_version_list_);
  attach_data_.Swap(&other->attach_data_);
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IMGroupInfoListReq::GetMetadata() const {
  protobuf_IM_2eGroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eGroup_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IMGroupInfoListRsp::InitAsDefaultInstance() {
}
void IMGroupInfoListRsp::clear_group_info_list() {
  group_info_list_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IMGroupInfoListRsp::kUserIdFieldNumber;
const int IMGroupInfoListRsp::kGroupInfoListFieldNumber;
const int IMGroupInfoListRsp::kAttachDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IMGroupInfoListRsp::IMGroupInfoListRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_IM_2eGroup_2eproto::InitDefaultsIMGroupInfoListRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.Group.IMGroupInfoListRsp)
}
IMGroupInfoListRsp::IMGroupInfoListRsp(const IMGroupInfoListRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      group_info_list_(from.group_info_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.attach_data().size() > 0) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:IM.Group.IMGroupInfoListRsp)
}

void IMGroupInfoListRsp::SharedCtor() {
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0u;
  _cached_size_ = 0;
}

IMGroupInfoListRsp::~IMGroupInfoListRsp() {
  // @@protoc_insertion_point(destructor:IM.Group.IMGroupInfoListRsp)
  SharedDtor();
}

void IMGroupInfoListRsp::SharedDtor() {
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IMGroupInfoListRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IMGroupInfoListRsp::descriptor() {
  ::protobuf_IM_2eGroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eGroup_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IMGroupInfoListRsp& IMGroupInfoListRsp::default_instance() {
  ::protobuf_IM_2eGroup_2eproto::InitDefaultsIMGroupInfoListRsp();
  return *internal_default_instance();
}

IMGroupInfoListRsp* IMGroupInfoListRsp::New(::google::protobuf::Arena* arena) const {
  IMGroupInfoListRsp* n = new IMGroupInfoListRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IMGroupInfoListRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.Group.IMGroupInfoListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  group_info_list_.Clear();
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0u;
  _internal_metadata_.Clear();
}

bool IMGroupInfoListRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IM.Group.IMGroupInfoListRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .IM.BaseDefine.GroupInfo group_info_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_group_info_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IM.Group.IMGroupInfoListRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.Group.IMGroupInfoListRsp)
  return false;
#undef DO_
}

void IMGroupInfoListRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.Group.IMGroupInfoListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // repeated .IM.BaseDefine.GroupInfo group_info_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->group_info_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->group_info_list(static_cast<int>(i)), output);
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IM.Group.IMGroupInfoListRsp)
}

::google::protobuf::uint8* IMGroupInfoListRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IM.Group.IMGroupInfoListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // repeated .IM.BaseDefine.GroupInfo group_info_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->group_info_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->group_info_list(static_cast<int>(i)), deterministic, target);
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        20, this->attach_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IM.Group.IMGroupInfoListRsp)
  return target;
}

size_t IMGroupInfoListRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IM.Group.IMGroupInfoListRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .IM.BaseDefine.GroupInfo group_info_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->group_info_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->group_info_list(static_cast<int>(i)));
    }
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IMGroupInfoListRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IM.Group.IMGroupInfoListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const IMGroupInfoListRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IMGroupInfoListRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IM.Group.IMGroupInfoListRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IM.Group.IMGroupInfoListRsp)
    MergeFrom(*source);
  }
}

void IMGroupInfoListRsp::MergeFrom(const IMGroupInfoListRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.Group.IMGroupInfoListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  group_info_list_.MergeFrom(from.group_info_list_);
  if (from.attach_data().size() > 0) {

    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void IMGroupInfoListRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IM.Group.IMGroupInfoListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IMGroupInfoListRsp::CopyFrom(const IMGroupInfoListRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.Group.IMGroupInfoListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IMGroupInfoListRsp::IsInitialized() const {
  return true;
}

void IMGroupInfoListRsp::Swap(IMGroupInfoListRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IMGroupInfoListRsp::InternalSwap(IMGroupInfoListRsp* other) {
  using std::swap;
  group_info_list_.InternalSwap(&other->group_info_list_);
  attach_data_.Swap(&other->attach_data_);
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IMGroupInfoListRsp::GetMetadata() const {
  protobuf_IM_2eGroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eGroup_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IMGroupCreateReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IMGroupCreateReq::kUserIdFieldNumber;
const int IMGroupCreateReq::kGroupTypeFieldNumber;
const int IMGroupCreateReq::kGroupNameFieldNumber;
const int IMGroupCreateReq::kGroupAvatarFieldNumber;
const int IMGroupCreateReq::kMemberIdListFieldNumber;
const int IMGroupCreateReq::kAttachDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IMGroupCreateReq::IMGroupCreateReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_IM_2eGroup_2eproto::InitDefaultsIMGroupCreateReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.Group.IMGroupCreateReq)
}
IMGroupCreateReq::IMGroupCreateReq(const IMGroupCreateReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      member_id_list_(from.member_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  group_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.group_name().size() > 0) {
    group_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_name_);
  }
  group_avatar_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.group_avatar().size() > 0) {
    group_avatar_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_avatar_);
  }
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.attach_data().size() > 0) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&group_type_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(group_type_));
  // @@protoc_insertion_point(copy_constructor:IM.Group.IMGroupCreateReq)
}

void IMGroupCreateReq::SharedCtor() {
  group_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_avatar_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_type_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(group_type_));
  _cached_size_ = 0;
}

IMGroupCreateReq::~IMGroupCreateReq() {
  // @@protoc_insertion_point(destructor:IM.Group.IMGroupCreateReq)
  SharedDtor();
}

void IMGroupCreateReq::SharedDtor() {
  group_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_avatar_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IMGroupCreateReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IMGroupCreateReq::descriptor() {
  ::protobuf_IM_2eGroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eGroup_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IMGroupCreateReq& IMGroupCreateReq::default_instance() {
  ::protobuf_IM_2eGroup_2eproto::InitDefaultsIMGroupCreateReq();
  return *internal_default_instance();
}

IMGroupCreateReq* IMGroupCreateReq::New(::google::protobuf::Arena* arena) const {
  IMGroupCreateReq* n = new IMGroupCreateReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IMGroupCreateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.Group.IMGroupCreateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  member_id_list_.Clear();
  group_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_avatar_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_type_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(group_type_));
  _internal_metadata_.Clear();
}

bool IMGroupCreateReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IM.Group.IMGroupCreateReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IM.BaseDefine.GroupType group_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_group_type(static_cast< ::IM::BaseDefine::GroupType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string group_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->group_name().data(), static_cast<int>(this->group_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "IM.Group.IMGroupCreateReq.group_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string group_avatar = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_avatar()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->group_avatar().data(), static_cast<int>(this->group_avatar().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "IM.Group.IMGroupCreateReq.group_avatar"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 member_id_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_member_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 42u, input, this->mutable_member_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IM.Group.IMGroupCreateReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.Group.IMGroupCreateReq)
  return false;
#undef DO_
}

void IMGroupCreateReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.Group.IMGroupCreateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // .IM.BaseDefine.GroupType group_type = 2;
  if (this->group_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->group_type(), output);
  }

  // string group_name = 3;
  if (this->group_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_name().data(), static_cast<int>(this->group_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.Group.IMGroupCreateReq.group_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->group_name(), output);
  }

  // string group_avatar = 4;
  if (this->group_avatar().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_avatar().data(), static_cast<int>(this->group_avatar().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.Group.IMGroupCreateReq.group_avatar");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->group_avatar(), output);
  }

  // repeated uint32 member_id_list = 5;
  if (this->member_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _member_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->member_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->member_id_list(i), output);
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IM.Group.IMGroupCreateReq)
}

::google::protobuf::uint8* IMGroupCreateReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IM.Group.IMGroupCreateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // .IM.BaseDefine.GroupType group_type = 2;
  if (this->group_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->group_type(), target);
  }

  // string group_name = 3;
  if (this->group_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_name().data(), static_cast<int>(this->group_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.Group.IMGroupCreateReq.group_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->group_name(), target);
  }

  // string group_avatar = 4;
  if (this->group_avatar().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_avatar().data(), static_cast<int>(this->group_avatar().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.Group.IMGroupCreateReq.group_avatar");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->group_avatar(), target);
  }

  // repeated uint32 member_id_list = 5;
  if (this->member_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _member_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->member_id_list_, target);
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        20, this->attach_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IM.Group.IMGroupCreateReq)
  return target;
}

size_t IMGroupCreateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IM.Group.IMGroupCreateReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 member_id_list = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->member_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _member_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string group_name = 3;
  if (this->group_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_name());
  }

  // string group_avatar = 4;
  if (this->group_avatar().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_avatar());
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // .IM.BaseDefine.GroupType group_type = 2;
  if (this->group_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->group_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IMGroupCreateReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IM.Group.IMGroupCreateReq)
  GOOGLE_DCHECK_NE(&from, this);
  const IMGroupCreateReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IMGroupCreateReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IM.Group.IMGroupCreateReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IM.Group.IMGroupCreateReq)
    MergeFrom(*source);
  }
}

void IMGroupCreateReq::MergeFrom(const IMGroupCreateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.Group.IMGroupCreateReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  member_id_list_.MergeFrom(from.member_id_list_);
  if (from.group_name().size() > 0) {

    group_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_name_);
  }
  if (from.group_avatar().size() > 0) {

    group_avatar_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_avatar_);
  }
  if (from.attach_data().size() > 0) {

    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.group_type() != 0) {
    set_group_type(from.group_type());
  }
}

void IMGroupCreateReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IM.Group.IMGroupCreateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IMGroupCreateReq::CopyFrom(const IMGroupCreateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.Group.IMGroupCreateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IMGroupCreateReq::IsInitialized() const {
  return true;
}

void IMGroupCreateReq::Swap(IMGroupCreateReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IMGroupCreateReq::InternalSwap(IMGroupCreateReq* other) {
  using std::swap;
  member_id_list_.InternalSwap(&other->member_id_list_);
  group_name_.Swap(&other->group_name_);
  group_avatar_.Swap(&other->group_avatar_);
  attach_data_.Swap(&other->attach_data_);
  swap(user_id_, other->user_id_);
  swap(group_type_, other->group_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IMGroupCreateReq::GetMetadata() const {
  protobuf_IM_2eGroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eGroup_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IMGroupCreateRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IMGroupCreateRsp::kUserIdFieldNumber;
const int IMGroupCreateRsp::kResultCodeFieldNumber;
const int IMGroupCreateRsp::kGroupIdFieldNumber;
const int IMGroupCreateRsp::kGroupNameFieldNumber;
const int IMGroupCreateRsp::kUserIdListFieldNumber;
const int IMGroupCreateRsp::kAttachDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IMGroupCreateRsp::IMGroupCreateRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_IM_2eGroup_2eproto::InitDefaultsIMGroupCreateRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.Group.IMGroupCreateRsp)
}
IMGroupCreateRsp::IMGroupCreateRsp(const IMGroupCreateRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      user_id_list_(from.user_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  group_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.group_name().size() > 0) {
    group_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_name_);
  }
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.attach_data().size() > 0) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&group_id_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(group_id_));
  // @@protoc_insertion_point(copy_constructor:IM.Group.IMGroupCreateRsp)
}

void IMGroupCreateRsp::SharedCtor() {
  group_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(group_id_));
  _cached_size_ = 0;
}

IMGroupCreateRsp::~IMGroupCreateRsp() {
  // @@protoc_insertion_point(destructor:IM.Group.IMGroupCreateRsp)
  SharedDtor();
}

void IMGroupCreateRsp::SharedDtor() {
  group_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IMGroupCreateRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IMGroupCreateRsp::descriptor() {
  ::protobuf_IM_2eGroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eGroup_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IMGroupCreateRsp& IMGroupCreateRsp::default_instance() {
  ::protobuf_IM_2eGroup_2eproto::InitDefaultsIMGroupCreateRsp();
  return *internal_default_instance();
}

IMGroupCreateRsp* IMGroupCreateRsp::New(::google::protobuf::Arena* arena) const {
  IMGroupCreateRsp* n = new IMGroupCreateRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IMGroupCreateRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.Group.IMGroupCreateRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_id_list_.Clear();
  group_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(group_id_));
  _internal_metadata_.Clear();
}

bool IMGroupCreateRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IM.Group.IMGroupCreateRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 result_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string group_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->group_name().data(), static_cast<int>(this->group_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "IM.Group.IMGroupCreateRsp.group_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 user_id_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_user_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 42u, input, this->mutable_user_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IM.Group.IMGroupCreateRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.Group.IMGroupCreateRsp)
  return false;
#undef DO_
}

void IMGroupCreateRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.Group.IMGroupCreateRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // uint32 result_code = 2;
  if (this->result_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->result_code(), output);
  }

  // uint32 group_id = 3;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->group_id(), output);
  }

  // string group_name = 4;
  if (this->group_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_name().data(), static_cast<int>(this->group_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.Group.IMGroupCreateRsp.group_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->group_name(), output);
  }

  // repeated uint32 user_id_list = 5;
  if (this->user_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _user_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->user_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->user_id_list(i), output);
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IM.Group.IMGroupCreateRsp)
}

::google::protobuf::uint8* IMGroupCreateRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IM.Group.IMGroupCreateRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // uint32 result_code = 2;
  if (this->result_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->result_code(), target);
  }

  // uint32 group_id = 3;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->group_id(), target);
  }

  // string group_name = 4;
  if (this->group_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_name().data(), static_cast<int>(this->group_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.Group.IMGroupCreateRsp.group_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->group_name(), target);
  }

  // repeated uint32 user_id_list = 5;
  if (this->user_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _user_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->user_id_list_, target);
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        20, this->attach_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IM.Group.IMGroupCreateRsp)
  return target;
}

size_t IMGroupCreateRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IM.Group.IMGroupCreateRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 user_id_list = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->user_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _user_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string group_name = 4;
  if (this->group_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_name());
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // uint32 result_code = 2;
  if (this->result_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result_code());
  }

  // uint32 group_id = 3;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IMGroupCreateRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IM.Group.IMGroupCreateRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const IMGroupCreateRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IMGroupCreateRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IM.Group.IMGroupCreateRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IM.Group.IMGroupCreateRsp)
    MergeFrom(*source);
  }
}

void IMGroupCreateRsp::MergeFrom(const IMGroupCreateRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.Group.IMGroupCreateRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  user_id_list_.MergeFrom(from.user_id_list_);
  if (from.group_name().size() > 0) {

    group_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_name_);
  }
  if (from.attach_data().size() > 0) {

    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.result_code() != 0) {
    set_result_code(from.result_code());
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
}

void IMGroupCreateRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IM.Group.IMGroupCreateRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IMGroupCreateRsp::CopyFrom(const IMGroupCreateRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.Group.IMGroupCreateRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IMGroupCreateRsp::IsInitialized() const {
  return true;
}

void IMGroupCreateRsp::Swap(IMGroupCreateRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IMGroupCreateRsp::InternalSwap(IMGroupCreateRsp* other) {
  using std::swap;
  user_id_list_.InternalSwap(&other->user_id_list_);
  group_name_.Swap(&other->group_name_);
  attach_data_.Swap(&other->attach_data_);
  swap(user_id_, other->user_id_);
  swap(result_code_, other->result_code_);
  swap(group_id_, other->group_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IMGroupCreateRsp::GetMetadata() const {
  protobuf_IM_2eGroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eGroup_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IMGroupChangeMemberReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IMGroupChangeMemberReq::kUserIdFieldNumber;
const int IMGroupChangeMemberReq::kChangeTypeFieldNumber;
const int IMGroupChangeMemberReq::kGroupIdFieldNumber;
const int IMGroupChangeMemberReq::kMemberIdListFieldNumber;
const int IMGroupChangeMemberReq::kAttachDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IMGroupChangeMemberReq::IMGroupChangeMemberReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_IM_2eGroup_2eproto::InitDefaultsIMGroupChangeMemberReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.Group.IMGroupChangeMemberReq)
}
IMGroupChangeMemberReq::IMGroupChangeMemberReq(const IMGroupChangeMemberReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      member_id_list_(from.member_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.attach_data().size() > 0) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&group_id_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(group_id_));
  // @@protoc_insertion_point(copy_constructor:IM.Group.IMGroupChangeMemberReq)
}

void IMGroupChangeMemberReq::SharedCtor() {
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(group_id_));
  _cached_size_ = 0;
}

IMGroupChangeMemberReq::~IMGroupChangeMemberReq() {
  // @@protoc_insertion_point(destructor:IM.Group.IMGroupChangeMemberReq)
  SharedDtor();
}

void IMGroupChangeMemberReq::SharedDtor() {
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IMGroupChangeMemberReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IMGroupChangeMemberReq::descriptor() {
  ::protobuf_IM_2eGroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eGroup_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IMGroupChangeMemberReq& IMGroupChangeMemberReq::default_instance() {
  ::protobuf_IM_2eGroup_2eproto::InitDefaultsIMGroupChangeMemberReq();
  return *internal_default_instance();
}

IMGroupChangeMemberReq* IMGroupChangeMemberReq::New(::google::protobuf::Arena* arena) const {
  IMGroupChangeMemberReq* n = new IMGroupChangeMemberReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IMGroupChangeMemberReq::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.Group.IMGroupChangeMemberReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  member_id_list_.Clear();
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(group_id_));
  _internal_metadata_.Clear();
}

bool IMGroupChangeMemberReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IM.Group.IMGroupChangeMemberReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IM.BaseDefine.GroupModifyType change_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_change_type(static_cast< ::IM::BaseDefine::GroupModifyType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 member_id_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_member_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34u, input, this->mutable_member_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IM.Group.IMGroupChangeMemberReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.Group.IMGroupChangeMemberReq)
  return false;
#undef DO_
}

void IMGroupChangeMemberReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.Group.IMGroupChangeMemberReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // .IM.BaseDefine.GroupModifyType change_type = 2;
  if (this->change_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->change_type(), output);
  }

  // uint32 group_id = 3;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->group_id(), output);
  }

  // repeated uint32 member_id_list = 4;
  if (this->member_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _member_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->member_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->member_id_list(i), output);
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IM.Group.IMGroupChangeMemberReq)
}

::google::protobuf::uint8* IMGroupChangeMemberReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IM.Group.IMGroupChangeMemberReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // .IM.BaseDefine.GroupModifyType change_type = 2;
  if (this->change_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->change_type(), target);
  }

  // uint32 group_id = 3;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->group_id(), target);
  }

  // repeated uint32 member_id_list = 4;
  if (this->member_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _member_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->member_id_list_, target);
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        20, this->attach_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IM.Group.IMGroupChangeMemberReq)
  return target;
}

size_t IMGroupChangeMemberReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IM.Group.IMGroupChangeMemberReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 member_id_list = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->member_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _member_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // .IM.BaseDefine.GroupModifyType change_type = 2;
  if (this->change_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->change_type());
  }

  // uint32 group_id = 3;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IMGroupChangeMemberReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IM.Group.IMGroupChangeMemberReq)
  GOOGLE_DCHECK_NE(&from, this);
  const IMGroupChangeMemberReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IMGroupChangeMemberReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IM.Group.IMGroupChangeMemberReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IM.Group.IMGroupChangeMemberReq)
    MergeFrom(*source);
  }
}

void IMGroupChangeMemberReq::MergeFrom(const IMGroupChangeMemberReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.Group.IMGroupChangeMemberReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  member_id_list_.MergeFrom(from.member_id_list_);
  if (from.attach_data().size() > 0) {

    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.change_type() != 0) {
    set_change_type(from.change_type());
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
}

void IMGroupChangeMemberReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IM.Group.IMGroupChangeMemberReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IMGroupChangeMemberReq::CopyFrom(const IMGroupChangeMemberReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.Group.IMGroupChangeMemberReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IMGroupChangeMemberReq::IsInitialized() const {
  return true;
}

void IMGroupChangeMemberReq::Swap(IMGroupChangeMemberReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IMGroupChangeMemberReq::InternalSwap(IMGroupChangeMemberReq* other) {
  using std::swap;
  member_id_list_.InternalSwap(&other->member_id_list_);
  attach_data_.Swap(&other->attach_data_);
  swap(user_id_, other->user_id_);
  swap(change_type_, other->change_type_);
  swap(group_id_, other->group_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IMGroupChangeMemberReq::GetMetadata() const {
  protobuf_IM_2eGroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eGroup_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IMGroupChangeMemberRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IMGroupChangeMemberRsp::kUserIdFieldNumber;
const int IMGroupChangeMemberRsp::kChangeTypeFieldNumber;
const int IMGroupChangeMemberRsp::kResultCodeFieldNumber;
const int IMGroupChangeMemberRsp::kGroupIdFieldNumber;
const int IMGroupChangeMemberRsp::kCurUserIdListFieldNumber;
const int IMGroupChangeMemberRsp::kChgUserIdListFieldNumber;
const int IMGroupChangeMemberRsp::kAttachDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IMGroupChangeMemberRsp::IMGroupChangeMemberRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_IM_2eGroup_2eproto::InitDefaultsIMGroupChangeMemberRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.Group.IMGroupChangeMemberRsp)
}
IMGroupChangeMemberRsp::IMGroupChangeMemberRsp(const IMGroupChangeMemberRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      cur_user_id_list_(from.cur_user_id_list_),
      chg_user_id_list_(from.chg_user_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.attach_data().size() > 0) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&group_id_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(group_id_));
  // @@protoc_insertion_point(copy_constructor:IM.Group.IMGroupChangeMemberRsp)
}

void IMGroupChangeMemberRsp::SharedCtor() {
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(group_id_));
  _cached_size_ = 0;
}

IMGroupChangeMemberRsp::~IMGroupChangeMemberRsp() {
  // @@protoc_insertion_point(destructor:IM.Group.IMGroupChangeMemberRsp)
  SharedDtor();
}

void IMGroupChangeMemberRsp::SharedDtor() {
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IMGroupChangeMemberRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IMGroupChangeMemberRsp::descriptor() {
  ::protobuf_IM_2eGroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eGroup_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IMGroupChangeMemberRsp& IMGroupChangeMemberRsp::default_instance() {
  ::protobuf_IM_2eGroup_2eproto::InitDefaultsIMGroupChangeMemberRsp();
  return *internal_default_instance();
}

IMGroupChangeMemberRsp* IMGroupChangeMemberRsp::New(::google::protobuf::Arena* arena) const {
  IMGroupChangeMemberRsp* n = new IMGroupChangeMemberRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IMGroupChangeMemberRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.Group.IMGroupChangeMemberRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cur_user_id_list_.Clear();
  chg_user_id_list_.Clear();
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(group_id_));
  _internal_metadata_.Clear();
}

bool IMGroupChangeMemberRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IM.Group.IMGroupChangeMemberRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IM.BaseDefine.GroupModifyType change_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_change_type(static_cast< ::IM::BaseDefine::GroupModifyType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 result_code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 cur_user_id_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_cur_user_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 42u, input, this->mutable_cur_user_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 chg_user_id_list = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_chg_user_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 50u, input, this->mutable_chg_user_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IM.Group.IMGroupChangeMemberRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.Group.IMGroupChangeMemberRsp)
  return false;
#undef DO_
}

void IMGroupChangeMemberRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.Group.IMGroupChangeMemberRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // .IM.BaseDefine.GroupModifyType change_type = 2;
  if (this->change_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->change_type(), output);
  }

  // uint32 result_code = 3;
  if (this->result_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->result_code(), output);
  }

  // uint32 group_id = 4;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->group_id(), output);
  }

  // repeated uint32 cur_user_id_list = 5;
  if (this->cur_user_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _cur_user_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->cur_user_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->cur_user_id_list(i), output);
  }

  // repeated uint32 chg_user_id_list = 6;
  if (this->chg_user_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _chg_user_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->chg_user_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->chg_user_id_list(i), output);
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IM.Group.IMGroupChangeMemberRsp)
}

::google::protobuf::uint8* IMGroupChangeMemberRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IM.Group.IMGroupChangeMemberRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // .IM.BaseDefine.GroupModifyType change_type = 2;
  if (this->change_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->change_type(), target);
  }

  // uint32 result_code = 3;
  if (this->result_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->result_code(), target);
  }

  // uint32 group_id = 4;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->group_id(), target);
  }

  // repeated uint32 cur_user_id_list = 5;
  if (this->cur_user_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _cur_user_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->cur_user_id_list_, target);
  }

  // repeated uint32 chg_user_id_list = 6;
  if (this->chg_user_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _chg_user_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->chg_user_id_list_, target);
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        20, this->attach_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IM.Group.IMGroupChangeMemberRsp)
  return target;
}

size_t IMGroupChangeMemberRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IM.Group.IMGroupChangeMemberRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 cur_user_id_list = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->cur_user_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cur_user_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 chg_user_id_list = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->chg_user_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _chg_user_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // .IM.BaseDefine.GroupModifyType change_type = 2;
  if (this->change_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->change_type());
  }

  // uint32 result_code = 3;
  if (this->result_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result_code());
  }

  // uint32 group_id = 4;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IMGroupChangeMemberRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IM.Group.IMGroupChangeMemberRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const IMGroupChangeMemberRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IMGroupChangeMemberRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IM.Group.IMGroupChangeMemberRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IM.Group.IMGroupChangeMemberRsp)
    MergeFrom(*source);
  }
}

void IMGroupChangeMemberRsp::MergeFrom(const IMGroupChangeMemberRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.Group.IMGroupChangeMemberRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cur_user_id_list_.MergeFrom(from.cur_user_id_list_);
  chg_user_id_list_.MergeFrom(from.chg_user_id_list_);
  if (from.attach_data().size() > 0) {

    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.change_type() != 0) {
    set_change_type(from.change_type());
  }
  if (from.result_code() != 0) {
    set_result_code(from.result_code());
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
}

void IMGroupChangeMemberRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IM.Group.IMGroupChangeMemberRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IMGroupChangeMemberRsp::CopyFrom(const IMGroupChangeMemberRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.Group.IMGroupChangeMemberRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IMGroupChangeMemberRsp::IsInitialized() const {
  return true;
}

void IMGroupChangeMemberRsp::Swap(IMGroupChangeMemberRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IMGroupChangeMemberRsp::InternalSwap(IMGroupChangeMemberRsp* other) {
  using std::swap;
  cur_user_id_list_.InternalSwap(&other->cur_user_id_list_);
  chg_user_id_list_.InternalSwap(&other->chg_user_id_list_);
  attach_data_.Swap(&other->attach_data_);
  swap(user_id_, other->user_id_);
  swap(change_type_, other->change_type_);
  swap(result_code_, other->result_code_);
  swap(group_id_, other->group_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IMGroupChangeMemberRsp::GetMetadata() const {
  protobuf_IM_2eGroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eGroup_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IMGroupShieldReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IMGroupShieldReq::kUserIdFieldNumber;
const int IMGroupShieldReq::kGroupIdFieldNumber;
const int IMGroupShieldReq::kShieldStatusFieldNumber;
const int IMGroupShieldReq::kAttachDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IMGroupShieldReq::IMGroupShieldReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_IM_2eGroup_2eproto::InitDefaultsIMGroupShieldReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.Group.IMGroupShieldReq)
}
IMGroupShieldReq::IMGroupShieldReq(const IMGroupShieldReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.attach_data().size() > 0) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&shield_status_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(shield_status_));
  // @@protoc_insertion_point(copy_constructor:IM.Group.IMGroupShieldReq)
}

void IMGroupShieldReq::SharedCtor() {
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shield_status_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(shield_status_));
  _cached_size_ = 0;
}

IMGroupShieldReq::~IMGroupShieldReq() {
  // @@protoc_insertion_point(destructor:IM.Group.IMGroupShieldReq)
  SharedDtor();
}

void IMGroupShieldReq::SharedDtor() {
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IMGroupShieldReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IMGroupShieldReq::descriptor() {
  ::protobuf_IM_2eGroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eGroup_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IMGroupShieldReq& IMGroupShieldReq::default_instance() {
  ::protobuf_IM_2eGroup_2eproto::InitDefaultsIMGroupShieldReq();
  return *internal_default_instance();
}

IMGroupShieldReq* IMGroupShieldReq::New(::google::protobuf::Arena* arena) const {
  IMGroupShieldReq* n = new IMGroupShieldReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IMGroupShieldReq::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.Group.IMGroupShieldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shield_status_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(shield_status_));
  _internal_metadata_.Clear();
}

bool IMGroupShieldReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IM.Group.IMGroupShieldReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 shield_status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shield_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IM.Group.IMGroupShieldReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.Group.IMGroupShieldReq)
  return false;
#undef DO_
}

void IMGroupShieldReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.Group.IMGroupShieldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->group_id(), output);
  }

  // uint32 shield_status = 3;
  if (this->shield_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->shield_status(), output);
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IM.Group.IMGroupShieldReq)
}

::google::protobuf::uint8* IMGroupShieldReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IM.Group.IMGroupShieldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->group_id(), target);
  }

  // uint32 shield_status = 3;
  if (this->shield_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->shield_status(), target);
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        20, this->attach_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IM.Group.IMGroupShieldReq)
  return target;
}

size_t IMGroupShieldReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IM.Group.IMGroupShieldReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  // uint32 shield_status = 3;
  if (this->shield_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->shield_status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IMGroupShieldReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IM.Group.IMGroupShieldReq)
  GOOGLE_DCHECK_NE(&from, this);
  const IMGroupShieldReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IMGroupShieldReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IM.Group.IMGroupShieldReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IM.Group.IMGroupShieldReq)
    MergeFrom(*source);
  }
}

void IMGroupShieldReq::MergeFrom(const IMGroupShieldReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.Group.IMGroupShieldReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.attach_data().size() > 0) {

    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
  if (from.shield_status() != 0) {
    set_shield_status(from.shield_status());
  }
}

void IMGroupShieldReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IM.Group.IMGroupShieldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IMGroupShieldReq::CopyFrom(const IMGroupShieldReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.Group.IMGroupShieldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IMGroupShieldReq::IsInitialized() const {
  return true;
}

void IMGroupShieldReq::Swap(IMGroupShieldReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IMGroupShieldReq::InternalSwap(IMGroupShieldReq* other) {
  using std::swap;
  attach_data_.Swap(&other->attach_data_);
  swap(user_id_, other->user_id_);
  swap(group_id_, other->group_id_);
  swap(shield_status_, other->shield_status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IMGroupShieldReq::GetMetadata() const {
  protobuf_IM_2eGroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eGroup_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IMGroupShieldRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IMGroupShieldRsp::kUserIdFieldNumber;
const int IMGroupShieldRsp::kGroupIdFieldNumber;
const int IMGroupShieldRsp::kResultCodeFieldNumber;
const int IMGroupShieldRsp::kAttachDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IMGroupShieldRsp::IMGroupShieldRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_IM_2eGroup_2eproto::InitDefaultsIMGroupShieldRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.Group.IMGroupShieldRsp)
}
IMGroupShieldRsp::IMGroupShieldRsp(const IMGroupShieldRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.attach_data().size() > 0) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_code_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(result_code_));
  // @@protoc_insertion_point(copy_constructor:IM.Group.IMGroupShieldRsp)
}

void IMGroupShieldRsp::SharedCtor() {
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_code_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(result_code_));
  _cached_size_ = 0;
}

IMGroupShieldRsp::~IMGroupShieldRsp() {
  // @@protoc_insertion_point(destructor:IM.Group.IMGroupShieldRsp)
  SharedDtor();
}

void IMGroupShieldRsp::SharedDtor() {
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IMGroupShieldRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IMGroupShieldRsp::descriptor() {
  ::protobuf_IM_2eGroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eGroup_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IMGroupShieldRsp& IMGroupShieldRsp::default_instance() {
  ::protobuf_IM_2eGroup_2eproto::InitDefaultsIMGroupShieldRsp();
  return *internal_default_instance();
}

IMGroupShieldRsp* IMGroupShieldRsp::New(::google::protobuf::Arena* arena) const {
  IMGroupShieldRsp* n = new IMGroupShieldRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IMGroupShieldRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.Group.IMGroupShieldRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_code_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(result_code_));
  _internal_metadata_.Clear();
}

bool IMGroupShieldRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IM.Group.IMGroupShieldRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 result_code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IM.Group.IMGroupShieldRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.Group.IMGroupShieldRsp)
  return false;
#undef DO_
}

void IMGroupShieldRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.Group.IMGroupShieldRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->group_id(), output);
  }

  // uint32 result_code = 3;
  if (this->result_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->result_code(), output);
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IM.Group.IMGroupShieldRsp)
}

::google::protobuf::uint8* IMGroupShieldRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IM.Group.IMGroupShieldRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->group_id(), target);
  }

  // uint32 result_code = 3;
  if (this->result_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->result_code(), target);
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        20, this->attach_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IM.Group.IMGroupShieldRsp)
  return target;
}

size_t IMGroupShieldRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IM.Group.IMGroupShieldRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  // uint32 result_code = 3;
  if (this->result_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IMGroupShieldRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IM.Group.IMGroupShieldRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const IMGroupShieldRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IMGroupShieldRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IM.Group.IMGroupShieldRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IM.Group.IMGroupShieldRsp)
    MergeFrom(*source);
  }
}

void IMGroupShieldRsp::MergeFrom(const IMGroupShieldRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.Group.IMGroupShieldRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.attach_data().size() > 0) {

    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
  if (from.result_code() != 0) {
    set_result_code(from.result_code());
  }
}

void IMGroupShieldRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IM.Group.IMGroupShieldRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IMGroupShieldRsp::CopyFrom(const IMGroupShieldRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.Group.IMGroupShieldRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IMGroupShieldRsp::IsInitialized() const {
  return true;
}

void IMGroupShieldRsp::Swap(IMGroupShieldRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IMGroupShieldRsp::InternalSwap(IMGroupShieldRsp* other) {
  using std::swap;
  attach_data_.Swap(&other->attach_data_);
  swap(user_id_, other->user_id_);
  swap(group_id_, other->group_id_);
  swap(result_code_, other->result_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IMGroupShieldRsp::GetMetadata() const {
  protobuf_IM_2eGroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eGroup_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IMGroupChangeMemberNotify::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IMGroupChangeMemberNotify::kUserIdFieldNumber;
const int IMGroupChangeMemberNotify::kChangeTypeFieldNumber;
const int IMGroupChangeMemberNotify::kGroupIdFieldNumber;
const int IMGroupChangeMemberNotify::kCurUserIdListFieldNumber;
const int IMGroupChangeMemberNotify::kChgUserIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IMGroupChangeMemberNotify::IMGroupChangeMemberNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_IM_2eGroup_2eproto::InitDefaultsIMGroupChangeMemberNotify();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.Group.IMGroupChangeMemberNotify)
}
IMGroupChangeMemberNotify::IMGroupChangeMemberNotify(const IMGroupChangeMemberNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      cur_user_id_list_(from.cur_user_id_list_),
      chg_user_id_list_(from.chg_user_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&group_id_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(group_id_));
  // @@protoc_insertion_point(copy_constructor:IM.Group.IMGroupChangeMemberNotify)
}

void IMGroupChangeMemberNotify::SharedCtor() {
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(group_id_));
  _cached_size_ = 0;
}

IMGroupChangeMemberNotify::~IMGroupChangeMemberNotify() {
  // @@protoc_insertion_point(destructor:IM.Group.IMGroupChangeMemberNotify)
  SharedDtor();
}

void IMGroupChangeMemberNotify::SharedDtor() {
}

void IMGroupChangeMemberNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IMGroupChangeMemberNotify::descriptor() {
  ::protobuf_IM_2eGroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eGroup_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IMGroupChangeMemberNotify& IMGroupChangeMemberNotify::default_instance() {
  ::protobuf_IM_2eGroup_2eproto::InitDefaultsIMGroupChangeMemberNotify();
  return *internal_default_instance();
}

IMGroupChangeMemberNotify* IMGroupChangeMemberNotify::New(::google::protobuf::Arena* arena) const {
  IMGroupChangeMemberNotify* n = new IMGroupChangeMemberNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IMGroupChangeMemberNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.Group.IMGroupChangeMemberNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cur_user_id_list_.Clear();
  chg_user_id_list_.Clear();
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(group_id_));
  _internal_metadata_.Clear();
}

bool IMGroupChangeMemberNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IM.Group.IMGroupChangeMemberNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IM.BaseDefine.GroupModifyType change_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_change_type(static_cast< ::IM::BaseDefine::GroupModifyType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 cur_user_id_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_cur_user_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34u, input, this->mutable_cur_user_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 chg_user_id_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_chg_user_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 42u, input, this->mutable_chg_user_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IM.Group.IMGroupChangeMemberNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.Group.IMGroupChangeMemberNotify)
  return false;
#undef DO_
}

void IMGroupChangeMemberNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.Group.IMGroupChangeMemberNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // .IM.BaseDefine.GroupModifyType change_type = 2;
  if (this->change_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->change_type(), output);
  }

  // uint32 group_id = 3;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->group_id(), output);
  }

  // repeated uint32 cur_user_id_list = 4;
  if (this->cur_user_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _cur_user_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->cur_user_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->cur_user_id_list(i), output);
  }

  // repeated uint32 chg_user_id_list = 5;
  if (this->chg_user_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _chg_user_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->chg_user_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->chg_user_id_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IM.Group.IMGroupChangeMemberNotify)
}

::google::protobuf::uint8* IMGroupChangeMemberNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IM.Group.IMGroupChangeMemberNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // .IM.BaseDefine.GroupModifyType change_type = 2;
  if (this->change_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->change_type(), target);
  }

  // uint32 group_id = 3;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->group_id(), target);
  }

  // repeated uint32 cur_user_id_list = 4;
  if (this->cur_user_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _cur_user_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->cur_user_id_list_, target);
  }

  // repeated uint32 chg_user_id_list = 5;
  if (this->chg_user_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _chg_user_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->chg_user_id_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IM.Group.IMGroupChangeMemberNotify)
  return target;
}

size_t IMGroupChangeMemberNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IM.Group.IMGroupChangeMemberNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 cur_user_id_list = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->cur_user_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cur_user_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 chg_user_id_list = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->chg_user_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _chg_user_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // .IM.BaseDefine.GroupModifyType change_type = 2;
  if (this->change_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->change_type());
  }

  // uint32 group_id = 3;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IMGroupChangeMemberNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IM.Group.IMGroupChangeMemberNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const IMGroupChangeMemberNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IMGroupChangeMemberNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IM.Group.IMGroupChangeMemberNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IM.Group.IMGroupChangeMemberNotify)
    MergeFrom(*source);
  }
}

void IMGroupChangeMemberNotify::MergeFrom(const IMGroupChangeMemberNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.Group.IMGroupChangeMemberNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cur_user_id_list_.MergeFrom(from.cur_user_id_list_);
  chg_user_id_list_.MergeFrom(from.chg_user_id_list_);
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.change_type() != 0) {
    set_change_type(from.change_type());
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
}

void IMGroupChangeMemberNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IM.Group.IMGroupChangeMemberNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IMGroupChangeMemberNotify::CopyFrom(const IMGroupChangeMemberNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.Group.IMGroupChangeMemberNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IMGroupChangeMemberNotify::IsInitialized() const {
  return true;
}

void IMGroupChangeMemberNotify::Swap(IMGroupChangeMemberNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IMGroupChangeMemberNotify::InternalSwap(IMGroupChangeMemberNotify* other) {
  using std::swap;
  cur_user_id_list_.InternalSwap(&other->cur_user_id_list_);
  chg_user_id_list_.InternalSwap(&other->chg_user_id_list_);
  swap(user_id_, other->user_id_);
  swap(change_type_, other->change_type_);
  swap(group_id_, other->group_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IMGroupChangeMemberNotify::GetMetadata() const {
  protobuf_IM_2eGroup_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eGroup_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Group
}  // namespace IM

// @@protoc_insertion_point(global_scope)
