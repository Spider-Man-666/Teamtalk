// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IM.BaseDefine.proto

#include "IM.BaseDefine.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace IM {
namespace BaseDefine {
class IpAddrDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IpAddr>
      _instance;
} _IpAddr_default_instance_;
class UserInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserInfo>
      _instance;
} _UserInfo_default_instance_;
class ContactSessionInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContactSessionInfo>
      _instance;
} _ContactSessionInfo_default_instance_;
class UserStatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserStat>
      _instance;
} _UserStat_default_instance_;
class ServerUserStatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerUserStat>
      _instance;
} _ServerUserStat_default_instance_;
class UnreadInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnreadInfo>
      _instance;
} _UnreadInfo_default_instance_;
class MsgInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgInfo>
      _instance;
} _MsgInfo_default_instance_;
class GroupVersionInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupVersionInfo>
      _instance;
} _GroupVersionInfo_default_instance_;
class GroupInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GroupInfo>
      _instance;
} _GroupInfo_default_instance_;
class UserTokenInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserTokenInfo>
      _instance;
} _UserTokenInfo_default_instance_;
class PushResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PushResult>
      _instance;
} _PushResult_default_instance_;
class ShieldStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShieldStatus>
      _instance;
} _ShieldStatus_default_instance_;
class OfflineFileInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OfflineFileInfo>
      _instance;
} _OfflineFileInfo_default_instance_;
class DepartInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DepartInfo>
      _instance;
} _DepartInfo_default_instance_;
class PushShieldStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PushShieldStatus>
      _instance;
} _PushShieldStatus_default_instance_;
}  // namespace BaseDefine
}  // namespace IM
namespace protobuf_IM_2eBaseDefine_2eproto {
void InitDefaultsIpAddrImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::IM::BaseDefine::_IpAddr_default_instance_;
    new (ptr) ::IM::BaseDefine::IpAddr();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IM::BaseDefine::IpAddr::InitAsDefaultInstance();
}

void InitDefaultsIpAddr() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIpAddrImpl);
}

void InitDefaultsUserInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::IM::BaseDefine::_UserInfo_default_instance_;
    new (ptr) ::IM::BaseDefine::UserInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IM::BaseDefine::UserInfo::InitAsDefaultInstance();
}

void InitDefaultsUserInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserInfoImpl);
}

void InitDefaultsContactSessionInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::IM::BaseDefine::_ContactSessionInfo_default_instance_;
    new (ptr) ::IM::BaseDefine::ContactSessionInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IM::BaseDefine::ContactSessionInfo::InitAsDefaultInstance();
}

void InitDefaultsContactSessionInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsContactSessionInfoImpl);
}

void InitDefaultsUserStatImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::IM::BaseDefine::_UserStat_default_instance_;
    new (ptr) ::IM::BaseDefine::UserStat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IM::BaseDefine::UserStat::InitAsDefaultInstance();
}

void InitDefaultsUserStat() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserStatImpl);
}

void InitDefaultsServerUserStatImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::IM::BaseDefine::_ServerUserStat_default_instance_;
    new (ptr) ::IM::BaseDefine::ServerUserStat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IM::BaseDefine::ServerUserStat::InitAsDefaultInstance();
}

void InitDefaultsServerUserStat() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsServerUserStatImpl);
}

void InitDefaultsUnreadInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::IM::BaseDefine::_UnreadInfo_default_instance_;
    new (ptr) ::IM::BaseDefine::UnreadInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IM::BaseDefine::UnreadInfo::InitAsDefaultInstance();
}

void InitDefaultsUnreadInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUnreadInfoImpl);
}

void InitDefaultsMsgInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::IM::BaseDefine::_MsgInfo_default_instance_;
    new (ptr) ::IM::BaseDefine::MsgInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IM::BaseDefine::MsgInfo::InitAsDefaultInstance();
}

void InitDefaultsMsgInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMsgInfoImpl);
}

void InitDefaultsGroupVersionInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::IM::BaseDefine::_GroupVersionInfo_default_instance_;
    new (ptr) ::IM::BaseDefine::GroupVersionInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IM::BaseDefine::GroupVersionInfo::InitAsDefaultInstance();
}

void InitDefaultsGroupVersionInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGroupVersionInfoImpl);
}

void InitDefaultsGroupInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::IM::BaseDefine::_GroupInfo_default_instance_;
    new (ptr) ::IM::BaseDefine::GroupInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IM::BaseDefine::GroupInfo::InitAsDefaultInstance();
}

void InitDefaultsGroupInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGroupInfoImpl);
}

void InitDefaultsUserTokenInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::IM::BaseDefine::_UserTokenInfo_default_instance_;
    new (ptr) ::IM::BaseDefine::UserTokenInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IM::BaseDefine::UserTokenInfo::InitAsDefaultInstance();
}

void InitDefaultsUserTokenInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserTokenInfoImpl);
}

void InitDefaultsPushResultImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::IM::BaseDefine::_PushResult_default_instance_;
    new (ptr) ::IM::BaseDefine::PushResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IM::BaseDefine::PushResult::InitAsDefaultInstance();
}

void InitDefaultsPushResult() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPushResultImpl);
}

void InitDefaultsShieldStatusImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::IM::BaseDefine::_ShieldStatus_default_instance_;
    new (ptr) ::IM::BaseDefine::ShieldStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IM::BaseDefine::ShieldStatus::InitAsDefaultInstance();
}

void InitDefaultsShieldStatus() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsShieldStatusImpl);
}

void InitDefaultsOfflineFileInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::IM::BaseDefine::_OfflineFileInfo_default_instance_;
    new (ptr) ::IM::BaseDefine::OfflineFileInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IM::BaseDefine::OfflineFileInfo::InitAsDefaultInstance();
}

void InitDefaultsOfflineFileInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOfflineFileInfoImpl);
}

void InitDefaultsDepartInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::IM::BaseDefine::_DepartInfo_default_instance_;
    new (ptr) ::IM::BaseDefine::DepartInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IM::BaseDefine::DepartInfo::InitAsDefaultInstance();
}

void InitDefaultsDepartInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDepartInfoImpl);
}

void InitDefaultsPushShieldStatusImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::IM::BaseDefine::_PushShieldStatus_default_instance_;
    new (ptr) ::IM::BaseDefine::PushShieldStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IM::BaseDefine::PushShieldStatus::InitAsDefaultInstance();
}

void InitDefaultsPushShieldStatus() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPushShieldStatusImpl);
}

::google::protobuf::Metadata file_level_metadata[15];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[23];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::IpAddr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::IpAddr, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::IpAddr, port_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::UserInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::UserInfo, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::UserInfo, user_gender_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::UserInfo, user_nick_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::UserInfo, avatar_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::UserInfo, department_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::UserInfo, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::UserInfo, user_real_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::UserInfo, user_tel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::UserInfo, user_domain_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::UserInfo, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::UserInfo, sign_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::ContactSessionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::ContactSessionInfo, session_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::ContactSessionInfo, session_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::ContactSessionInfo, session_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::ContactSessionInfo, updated_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::ContactSessionInfo, latest_msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::ContactSessionInfo, latest_msg_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::ContactSessionInfo, latest_msg_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::ContactSessionInfo, latest_msg_from_user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::UserStat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::UserStat, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::UserStat, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::ServerUserStat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::ServerUserStat, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::ServerUserStat, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::ServerUserStat, client_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::UnreadInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::UnreadInfo, session_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::UnreadInfo, session_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::UnreadInfo, unread_cnt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::UnreadInfo, latest_msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::UnreadInfo, latest_msg_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::UnreadInfo, latest_msg_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::UnreadInfo, latest_msg_from_user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::MsgInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::MsgInfo, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::MsgInfo, from_session_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::MsgInfo, create_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::MsgInfo, msg_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::MsgInfo, msg_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::GroupVersionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::GroupVersionInfo, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::GroupVersionInfo, version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::GroupInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::GroupInfo, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::GroupInfo, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::GroupInfo, group_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::GroupInfo, group_avatar_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::GroupInfo, group_creator_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::GroupInfo, group_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::GroupInfo, shield_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::GroupInfo, group_member_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::UserTokenInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::UserTokenInfo, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::UserTokenInfo, user_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::UserTokenInfo, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::UserTokenInfo, push_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::UserTokenInfo, push_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::PushResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::PushResult, user_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::PushResult, result_code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::ShieldStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::ShieldStatus, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::ShieldStatus, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::ShieldStatus, shield_status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::OfflineFileInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::OfflineFileInfo, from_user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::OfflineFileInfo, task_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::OfflineFileInfo, file_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::OfflineFileInfo, file_size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::DepartInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::DepartInfo, dept_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::DepartInfo, priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::DepartInfo, dept_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::DepartInfo, parent_dept_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::DepartInfo, dept_status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::PushShieldStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::PushShieldStatus, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IM::BaseDefine::PushShieldStatus, shield_status_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::IM::BaseDefine::IpAddr)},
  { 7, -1, sizeof(::IM::BaseDefine::UserInfo)},
  { 23, -1, sizeof(::IM::BaseDefine::ContactSessionInfo)},
  { 36, -1, sizeof(::IM::BaseDefine::UserStat)},
  { 43, -1, sizeof(::IM::BaseDefine::ServerUserStat)},
  { 51, -1, sizeof(::IM::BaseDefine::UnreadInfo)},
  { 63, -1, sizeof(::IM::BaseDefine::MsgInfo)},
  { 73, -1, sizeof(::IM::BaseDefine::GroupVersionInfo)},
  { 80, -1, sizeof(::IM::BaseDefine::GroupInfo)},
  { 93, -1, sizeof(::IM::BaseDefine::UserTokenInfo)},
  { 103, -1, sizeof(::IM::BaseDefine::PushResult)},
  { 110, -1, sizeof(::IM::BaseDefine::ShieldStatus)},
  { 118, -1, sizeof(::IM::BaseDefine::OfflineFileInfo)},
  { 127, -1, sizeof(::IM::BaseDefine::DepartInfo)},
  { 137, -1, sizeof(::IM::BaseDefine::PushShieldStatus)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::IM::BaseDefine::_IpAddr_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IM::BaseDefine::_UserInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IM::BaseDefine::_ContactSessionInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IM::BaseDefine::_UserStat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IM::BaseDefine::_ServerUserStat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IM::BaseDefine::_UnreadInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IM::BaseDefine::_MsgInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IM::BaseDefine::_GroupVersionInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IM::BaseDefine::_GroupInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IM::BaseDefine::_UserTokenInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IM::BaseDefine::_PushResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IM::BaseDefine::_ShieldStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IM::BaseDefine::_OfflineFileInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IM::BaseDefine::_DepartInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IM::BaseDefine::_PushShieldStatus_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "IM.BaseDefine.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 15);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023IM.BaseDefine.proto\022\rIM.BaseDefine\"\"\n\006"
      "IpAddr\022\n\n\002ip\030\001 \001(\t\022\014\n\004port\030\002 \001(\r\"\344\001\n\010Use"
      "rInfo\022\017\n\007user_id\030\001 \001(\r\022\023\n\013user_gender\030\002 "
      "\001(\r\022\026\n\016user_nick_name\030\003 \001(\t\022\022\n\navatar_ur"
      "l\030\004 \001(\t\022\025\n\rdepartment_id\030\005 \001(\r\022\r\n\005email\030"
      "\006 \001(\t\022\026\n\016user_real_name\030\007 \001(\t\022\020\n\010user_te"
      "l\030\010 \001(\t\022\023\n\013user_domain\030\t \001(\t\022\016\n\006status\030\n"
      " \001(\r\022\021\n\tsign_info\030\013 \001(\t\"\254\002\n\022ContactSessi"
      "onInfo\022\022\n\nsession_id\030\001 \001(\r\0220\n\014session_ty"
      "pe\030\002 \001(\0162\032.IM.BaseDefine.SessionType\0228\n\016"
      "session_status\030\003 \001(\0162 .IM.BaseDefine.Ses"
      "sionStatusType\022\024\n\014updated_time\030\004 \001(\r\022\025\n\r"
      "latest_msg_id\030\005 \001(\r\022\027\n\017latest_msg_data\030\006"
      " \001(\014\022/\n\017latest_msg_type\030\007 \001(\0162\026.IM.BaseD"
      "efine.MsgType\022\037\n\027latest_msg_from_user_id"
      "\030\010 \001(\r\"H\n\010UserStat\022\017\n\007user_id\030\001 \001(\r\022+\n\006s"
      "tatus\030\002 \001(\0162\033.IM.BaseDefine.UserStatType"
      "\"~\n\016ServerUserStat\022\017\n\007user_id\030\001 \001(\r\022+\n\006s"
      "tatus\030\002 \001(\0162\033.IM.BaseDefine.UserStatType"
      "\022.\n\013client_type\030\003 \001(\0162\031.IM.BaseDefine.Cl"
      "ientType\"\350\001\n\nUnreadInfo\022\022\n\nsession_id\030\001 "
      "\001(\r\0220\n\014session_type\030\002 \001(\0162\032.IM.BaseDefin"
      "e.SessionType\022\022\n\nunread_cnt\030\003 \001(\r\022\025\n\rlat"
      "est_msg_id\030\004 \001(\r\022\027\n\017latest_msg_data\030\005 \001("
      "\014\022/\n\017latest_msg_type\030\006 \001(\0162\026.IM.BaseDefi"
      "ne.MsgType\022\037\n\027latest_msg_from_user_id\030\007 "
      "\001(\r\"\203\001\n\007MsgInfo\022\016\n\006msg_id\030\001 \001(\r\022\027\n\017from_"
      "session_id\030\002 \001(\r\022\023\n\013create_time\030\003 \001(\r\022(\n"
      "\010msg_type\030\004 \001(\0162\026.IM.BaseDefine.MsgType\022"
      "\020\n\010msg_data\030\005 \001(\014\"5\n\020GroupVersionInfo\022\020\n"
      "\010group_id\030\001 \001(\r\022\017\n\007version\030\002 \001(\r\"\322\001\n\tGro"
      "upInfo\022\020\n\010group_id\030\001 \001(\r\022\017\n\007version\030\002 \001("
      "\r\022\022\n\ngroup_name\030\003 \001(\t\022\024\n\014group_avatar\030\004 "
      "\001(\t\022\030\n\020group_creator_id\030\005 \001(\r\022,\n\ngroup_t"
      "ype\030\006 \001(\0162\030.IM.BaseDefine.GroupType\022\025\n\rs"
      "hield_status\030\007 \001(\r\022\031\n\021group_member_list\030"
      "\010 \003(\r\"\204\001\n\rUserTokenInfo\022\017\n\007user_id\030\001 \001(\r"
      "\022,\n\tuser_type\030\002 \001(\0162\031.IM.BaseDefine.Clie"
      "ntType\022\r\n\005token\030\003 \001(\t\022\022\n\npush_count\030\004 \001("
      "\r\022\021\n\tpush_type\030\005 \001(\r\"5\n\nPushResult\022\022\n\nus"
      "er_token\030\001 \001(\t\022\023\n\013result_code\030\002 \001(\r\"H\n\014S"
      "hieldStatus\022\017\n\007user_id\030\001 \001(\r\022\020\n\010group_id"
      "\030\002 \001(\r\022\025\n\rshield_status\030\003 \001(\r\"^\n\017Offline"
      "FileInfo\022\024\n\014from_user_id\030\001 \001(\r\022\017\n\007task_i"
      "d\030\002 \001(\t\022\021\n\tfile_name\030\003 \001(\t\022\021\n\tfile_size\030"
      "\004 \001(\r\"\224\001\n\nDepartInfo\022\017\n\007dept_id\030\001 \001(\r\022\020\n"
      "\010priority\030\002 \001(\r\022\021\n\tdept_name\030\003 \001(\t\022\026\n\016pa"
      "rent_dept_id\030\004 \001(\r\0228\n\013dept_status\030\005 \001(\0162"
      "#.IM.BaseDefine.DepartmentStatusType\":\n\020"
      "PushShieldStatus\022\017\n\007user_id\030\001 \001(\r\022\025\n\rshi"
      "eld_status\030\002 \001(\r*\244\001\n\tServiceID\022\021\n\rSID_UN"
      "IVERSAL\020\000\022\r\n\tSID_LOGIN\020\001\022\022\n\016SID_BUDDY_LI"
      "ST\020\002\022\013\n\007SID_MSG\020\003\022\r\n\tSID_GROUP\020\004\022\014\n\010SID_"
      "FILE\020\005\022\026\n\022SID_SWITCH_SERVICE\020\006\022\r\n\tSID_OT"
      "HER\020\007\022\020\n\014SID_INTERNAL\020\010*\377\003\n\nLoginCmdID\022\027"
      "\n\023CID_LOGIN_UNIVERSAL\020\000\022\034\n\027CID_LOGIN_REQ"
      "_MSGSERVER\020\201\002\022\034\n\027CID_LOGIN_RES_MSGSERVER"
      "\020\202\002\022\034\n\027CID_LOGIN_REQ_USERLOGIN\020\203\002\022\034\n\027CID"
      "_LOGIN_RES_USERLOGIN\020\204\002\022\033\n\026CID_LOGIN_REQ"
      "_LOGINOUT\020\205\002\022\033\n\026CID_LOGIN_RES_LOGINOUT\020\206"
      "\002\022\030\n\023CID_LOGIN_KICK_USER\020\207\002\022\036\n\031CID_LOGIN"
      "_REQ_DEVICETOKEN\020\210\002\022\036\n\031CID_LOGIN_RES_DEV"
      "ICETOKEN\020\211\002\022\037\n\032CID_LOGIN_REQ_KICKPCCLIEN"
      "T\020\212\002\022\037\n\032CID_LOGIN_RES_KICKPCCLIENT\020\213\002\022\036\n"
      "\031CID_LOGIN_REQ_PUSH_SHIELD\020\214\002\022\036\n\031CID_LOG"
      "IN_RES_PUSH_SHIELD\020\215\002\022$\n\037CID_LOGIN_REQ_Q"
      "UERY_PUSH_SHIELD\020\216\002\022$\n\037CID_LOGIN_RES_QUE"
      "RY_PUSH_SHIELD\020\217\002*\253\007\n\016BuddyListCmdID\022\027\n\023"
      "CID_BUDDY_UNIVERSAL\020\000\0222\n-CID_BUDDY_LIST_"
      "RECENT_CONTACT_SESSION_REQUEST\020\201\004\0223\n.CID"
      "_BUDDY_LIST_RECENT_CONTACT_SESSION_RESPO"
      "NSE\020\202\004\022!\n\034CID_BUDDY_LIST_STATUS_NOTIFY\020\203"
      "\004\022%\n CID_BUDDY_LIST_USER_INFO_REQUEST\020\204\004"
      "\022&\n!CID_BUDDY_LIST_USER_INFO_RESPONSE\020\205\004"
      "\022&\n!CID_BUDDY_LIST_REMOVE_SESSION_REQ\020\206\004"
      "\022&\n!CID_BUDDY_LIST_REMOVE_SESSION_RES\020\207\004"
      "\022$\n\037CID_BUDDY_LIST_ALL_USER_REQUEST\020\210\004\022%"
      "\n CID_BUDDY_LIST_ALL_USER_RESPONSE\020\211\004\022(\n"
      "#CID_BUDDY_LIST_USERS_STATUS_REQUEST\020\212\004\022"
      ")\n$CID_BUDDY_LIST_USERS_STATUS_RESPONSE\020"
      "\213\004\022)\n$CID_BUDDY_LIST_CHANGE_AVATAR_REQUE"
      "ST\020\214\004\022*\n%CID_BUDDY_LIST_CHANGE_AVATAR_RE"
      "SPONSE\020\215\004\022*\n%CID_BUDDY_LIST_PC_LOGIN_STA"
      "TUS_NOTIFY\020\216\004\022)\n$CID_BUDDY_LIST_REMOVE_S"
      "ESSION_NOTIFY\020\217\004\022&\n!CID_BUDDY_LIST_DEPAR"
      "TMENT_REQUEST\020\220\004\022\'\n\"CID_BUDDY_LIST_DEPAR"
      "TMENT_RESPONSE\020\221\004\022)\n$CID_BUDDY_LIST_AVAT"
      "AR_CHANGED_NOTIFY\020\222\004\022,\n\'CID_BUDDY_LIST_C"
      "HANGE_SIGN_INFO_REQUEST\020\223\004\022-\n(CID_BUDDY_"
      "LIST_CHANGE_SIGN_INFO_RESPONSE\020\224\004\022,\n\'CID"
      "_BUDDY_LIST_SIGN_INFO_CHANGED_NOTIFY\020\225\004*"
      "\271\003\n\014MessageCmdID\022\025\n\021CID_MSG_UNIVERSAL\020\000\022"
      "\021\n\014CID_MSG_DATA\020\201\006\022\025\n\020CID_MSG_DATA_ACK\020\202"
      "\006\022\025\n\020CID_MSG_READ_ACK\020\203\006\022\030\n\023CID_MSG_READ"
      "_NOTIFY\020\204\006\022\031\n\024CID_MSG_TIME_REQUEST\020\205\006\022\032\n"
      "\025CID_MSG_TIME_RESPONSE\020\206\006\022\037\n\032CID_MSG_UNR"
      "EAD_CNT_REQUEST\020\207\006\022 \n\033CID_MSG_UNREAD_CNT"
      "_RESPONSE\020\210\006\022\031\n\024CID_MSG_LIST_REQUEST\020\211\006\022"
      "\032\n\025CID_MSG_LIST_RESPONSE\020\212\006\022\"\n\035CID_MSG_G"
      "ET_LATEST_MSG_ID_REQ\020\213\006\022\"\n\035CID_MSG_GET_L"
      "ATEST_MSG_ID_RSP\020\214\006\022\036\n\031CID_MSG_GET_BY_MS"
      "G_ID_REQ\020\215\006\022\036\n\031CID_MSG_GET_BY_MSG_ID_RES"
      "\020\216\006*\245\003\n\nGroupCmdID\022\027\n\023CID_GROUP_UNIVERSA"
      "L\020\000\022\"\n\035CID_GROUP_NORMAL_LIST_REQUEST\020\201\010\022"
      "#\n\036CID_GROUP_NORMAL_LIST_RESPONSE\020\202\010\022\033\n\026"
      "CID_GROUP_INFO_REQUEST\020\203\010\022\034\n\027CID_GROUP_I"
      "NFO_RESPONSE\020\204\010\022\035\n\030CID_GROUP_CREATE_REQU"
      "EST\020\205\010\022\036\n\031CID_GROUP_CREATE_RESPONSE\020\206\010\022$"
      "\n\037CID_GROUP_CHANGE_MEMBER_REQUEST\020\207\010\022%\n "
      "CID_GROUP_CHANGE_MEMBER_RESPONSE\020\210\010\022#\n\036C"
      "ID_GROUP_SHIELD_GROUP_REQUEST\020\211\010\022$\n\037CID_"
      "GROUP_SHIELD_GROUP_RESPONSE\020\212\010\022#\n\036CID_GR"
      "OUP_CHANGE_MEMBER_NOTIFY\020\213\010*\345\002\n\tFileCmdI"
      "D\022\026\n\022CID_FILE_UNIVERSAL\020\000\022\027\n\022CID_FILE_LO"
      "GIN_REQ\020\201\n\022\027\n\022CID_FILE_LOGIN_RES\020\202\n\022\023\n\016C"
      "ID_FILE_STATE\020\203\n\022\033\n\026CID_FILE_PULL_DATA_R"
      "EQ\020\204\n\022\033\n\026CID_FILE_PULL_DATA_RSP\020\205\n\022\025\n\020CI"
      "D_FILE_REQUEST\020\206\n\022\026\n\021CID_FILE_RESPONSE\020\207"
      "\n\022\024\n\017CID_FILE_NOTIFY\020\210\n\022\035\n\030CID_FILE_HAS_"
      "OFFLINE_REQ\020\211\n\022\035\n\030CID_FILE_HAS_OFFLINE_R"
      "ES\020\212\n\022\035\n\030CID_FILE_ADD_OFFLINE_REQ\020\213\n\022\035\n\030"
      "CID_FILE_DEL_OFFLINE_REQ\020\214\n*K\n\022SwitchSer"
      "viceCmdID\022\034\n\030CID_SWITCH_P2P_UNIVERSAL\020\000\022"
      "\027\n\022CID_SWITCH_P2P_CMD\020\201\014*\316\005\n\nOtherCmdID\022"
      "\027\n\023CID_OTHER_UNIVERSAL\020\000\022\030\n\023CID_OTHER_HE"
      "ARTBEAT\020\201\016\022\037\n\032CID_OTHER_STOP_RECV_PACKET"
      "\020\202\016\022\033\n\026CID_OTHER_VALIDATE_REQ\020\203\016\022\033\n\026CID_"
      "OTHER_VALIDATE_RSP\020\204\016\022#\n\036CID_OTHER_GET_D"
      "EVICE_TOKEN_REQ\020\205\016\022#\n\036CID_OTHER_GET_DEVI"
      "CE_TOKEN_RSP\020\206\016\022\027\n\022CID_OTHER_ROLE_SET\020\207\016"
      "\022\037\n\032CID_OTHER_ONLINE_USER_INFO\020\210\016\022\034\n\027CID"
      "_OTHER_MSG_SERV_INFO\020\211\016\022!\n\034CID_OTHER_USE"
      "R_STATUS_UPDATE\020\212\016\022\036\n\031CID_OTHER_USER_CNT"
      "_UPDATE\020\213\016\022\037\n\032CID_OTHER_SERVER_KICK_USER"
      "\020\215\016\022\"\n\035CID_OTHER_LOGIN_STATUS_NOTIFY\020\216\016\022"
      "\037\n\032CID_OTHER_PUSH_TO_USER_REQ\020\217\016\022\037\n\032CID_"
      "OTHER_PUSH_TO_USER_RSP\020\220\016\022\035\n\030CID_OTHER_G"
      "ET_SHIELD_REQ\020\221\016\022\035\n\030CID_OTHER_GET_SHIELD"
      "_RSP\020\222\016\022 \n\033CID_OTHER_FILE_TRANSFER_REQ\020\261"
      "\016\022 \n\033CID_OTHER_FILE_TRANSFER_RSP\020\262\016\022!\n\034C"
      "ID_OTHER_FILE_SERVER_IP_REQ\020\263\016\022!\n\034CID_OT"
      "HER_FILE_SERVER_IP_RSP\020\264\016*\227\002\n\nResultType"
      "\022\026\n\022REFUSE_REASON_NONE\020\000\022\037\n\033REFUSE_REASO"
      "N_NO_MSG_SERVER\020\001\022!\n\035REFUSE_REASON_MSG_S"
      "ERVER_FULL\020\002\022\036\n\032REFUSE_REASON_NO_DB_SERV"
      "ER\020\003\022!\n\035REFUSE_REASON_NO_LOGIN_SERVER\020\004\022"
      "!\n\035REFUSE_REASON_NO_ROUTE_SERVER\020\005\022$\n RE"
      "FUSE_REASON_DB_VALIDATE_FAILED\020\006\022!\n\035REFU"
      "SE_REASON_VERSION_TOO_OLD\020\007*h\n\016KickReaso"
      "nType\022\031\n\025KICK_REASON_UNIVERSAL\020\000\022\036\n\032KICK"
      "_REASON_DUPLICATE_USER\020\001\022\033\n\027KICK_REASON_"
      "MOBILE_KICK\020\002*M\n\016OnlineListType\022\031\n\025ONLIN"
      "E_LIST_UNIVERSAL\020\000\022 \n\034ONLINE_LIST_TYPE_F"
      "RIEND_LIST\020\001*q\n\014UserStatType\022\031\n\025USER_STA"
      "TUS_UNIVERSAL\020\000\022\026\n\022USER_STATUS_ONLINE\020\001\022"
      "\027\n\023USER_STATUS_OFFLINE\020\002\022\025\n\021USER_STATUS_"
      "LEAVE\020\003*Z\n\013SessionType\022\032\n\026SESSION_TYPE_U"
      "NIVERSAL\020\000\022\027\n\023SESSION_TYPE_SINGLE\020\001\022\026\n\022S"
      "ESSION_TYPE_GROUP\020\002*\211\001\n\007MsgType\022\026\n\022MSG_T"
      "YPE_UNIVERSAL\020\000\022\030\n\024MSG_TYPE_SINGLE_TEXT\020"
      "\001\022\031\n\025MSG_TYPE_SINGLE_AUDIO\020\002\022\027\n\023MSG_TYPE"
      "_GROUP_TEXT\020\021\022\030\n\024MSG_TYPE_GROUP_AUDIO\020\022*"
      "\203\001\n\nClientType\022\031\n\025CLIENT_TYPE_UNIVERSAL\020"
      "\000\022\027\n\023CLIENT_TYPE_WINDOWS\020\001\022\023\n\017CLIENT_TYP"
      "E_MAC\020\002\022\023\n\017CLIENT_TYPE_IOS\020\021\022\027\n\023CLIENT_T"
      "YPE_ANDROID\020\022*O\n\tGroupType\022\027\n\023GROUP_TYPE"
      "UNIVERSAL\020\000\022\025\n\021GROUP_TYPE_NORMAL\020\001\022\022\n\016GR"
      "OUP_TYPE_TMP\020\002*\\\n\017GroupModifyType\022\023\n\017GRO"
      "UP_UNIVERSAL\020\000\022\031\n\025GROUP_MODIFY_TYPE_ADD\020"
      "\001\022\031\n\025GROUP_MODIFY_TYPE_DEL\020\002*X\n\020Transfer"
      "FileType\022\027\n\023FILE_TYPE_UNIVERSAL\020\000\022\024\n\020FIL"
      "E_TYPE_ONLINE\020\001\022\025\n\021FILE_TYPE_OFFLINE\020\002*s"
      "\n\017ClientFileState\022\032\n\026CLIENT_FILE_PEER_RE"
      "ADY\020\000\022\026\n\022CLIENT_FILE_CANCEL\020\001\022\026\n\022CLIENT_"
      "FILE_REFUSE\020\002\022\024\n\020CLIENT_FILE_DONE\020\003*\237\001\n\016"
      "ClientFileRole\022\035\n\031CLIENT_REALTIME_UNIVER"
      "SAL\020\000\022\032\n\026CLIENT_REALTIME_SENDER\020\001\022\032\n\026CLI"
      "ENT_REALTIME_RECVER\020\002\022\031\n\025CLIENT_OFFLINE_"
      "UPLOAD\020\003\022\033\n\027CLIENT_OFFLINE_DOWNLOAD\020\004*\341\004"
      "\n\017FileServerError\022\030\n\024FILE_SERVER_ERRNO_O"
      "K\020\000\022*\n&FILE_SERVER_ERRNO_CREATE_TASK_ID_"
      "ERROR\020\001\022\'\n#FILE_SERVER_ERRNO_CREATE_TASK"
      "_ERROR\020\002\022)\n%FILE_SERVER_ERRNO_LOGIN_INVA"
      "LID_TOKEN\020\003\022+\n\'FILE_SERVER_ERRNO_INVALID"
      "_USER_FOR_TASK\020\004\0224\n0FILE_SERVER_ERRNO_PU"
      "LL_DATA_WITH_INVALID_TASK_ID\020\005\022-\n)FILE_S"
      "ERVER_ERRNO_PULL_DATA_ILLIEAGE_USER\020\006\022+\n"
      "\'FILE_SERVER_ERRNO_PULL_DATA_MKDIR_ERROR"
      "\020\007\022/\n+FILE_SERVER_ERRNO_PULL_DATA_OPEN_F"
      "ILE_ERROR\020\010\0226\n2FILE_SERVER_ERRNO_PULL_DA"
      "TA_READ_FILE_HEADER_ERROR\020\t\022/\n+FILE_SERV"
      "ER_ERRNO_PULL_DATA_ALLOC_MEM_ERROR\020\n\0221\n-"
      "FILE_SERVER_ERRNO_PULL_DATA_SEEK_OFFSET_"
      "ERROR\020\013\022(\n$FILE_SERVER_ERRNO_PULL_DATA_F"
      "INISHED\020\014*E\n\021SessionStatusType\022\025\n\021SESSIO"
      "N_STATUS_OK\020\000\022\031\n\025SESSION_STATUS_DELETE\020\001"
      "*B\n\024DepartmentStatusType\022\022\n\016DEPT_STATUS_"
      "OK\020\000\022\026\n\022DEPT_STATUS_DELETE\020\001B\031\n\027com.mogu"
      "jie.tt.protobufb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 7943);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "IM.BaseDefine.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_IM_2eBaseDefine_2eproto
namespace IM {
namespace BaseDefine {
const ::google::protobuf::EnumDescriptor* ServiceID_descriptor() {
  protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_IM_2eBaseDefine_2eproto::file_level_enum_descriptors[0];
}
bool ServiceID_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* LoginCmdID_descriptor() {
  protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_IM_2eBaseDefine_2eproto::file_level_enum_descriptors[1];
}
bool LoginCmdID_IsValid(int value) {
  switch (value) {
    case 0:
    case 257:
    case 258:
    case 259:
    case 260:
    case 261:
    case 262:
    case 263:
    case 264:
    case 265:
    case 266:
    case 267:
    case 268:
    case 269:
    case 270:
    case 271:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* BuddyListCmdID_descriptor() {
  protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_IM_2eBaseDefine_2eproto::file_level_enum_descriptors[2];
}
bool BuddyListCmdID_IsValid(int value) {
  switch (value) {
    case 0:
    case 513:
    case 514:
    case 515:
    case 516:
    case 517:
    case 518:
    case 519:
    case 520:
    case 521:
    case 522:
    case 523:
    case 524:
    case 525:
    case 526:
    case 527:
    case 528:
    case 529:
    case 530:
    case 531:
    case 532:
    case 533:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MessageCmdID_descriptor() {
  protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_IM_2eBaseDefine_2eproto::file_level_enum_descriptors[3];
}
bool MessageCmdID_IsValid(int value) {
  switch (value) {
    case 0:
    case 769:
    case 770:
    case 771:
    case 772:
    case 773:
    case 774:
    case 775:
    case 776:
    case 777:
    case 778:
    case 779:
    case 780:
    case 781:
    case 782:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GroupCmdID_descriptor() {
  protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_IM_2eBaseDefine_2eproto::file_level_enum_descriptors[4];
}
bool GroupCmdID_IsValid(int value) {
  switch (value) {
    case 0:
    case 1025:
    case 1026:
    case 1027:
    case 1028:
    case 1029:
    case 1030:
    case 1031:
    case 1032:
    case 1033:
    case 1034:
    case 1035:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* FileCmdID_descriptor() {
  protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_IM_2eBaseDefine_2eproto::file_level_enum_descriptors[5];
}
bool FileCmdID_IsValid(int value) {
  switch (value) {
    case 0:
    case 1281:
    case 1282:
    case 1283:
    case 1284:
    case 1285:
    case 1286:
    case 1287:
    case 1288:
    case 1289:
    case 1290:
    case 1291:
    case 1292:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SwitchServiceCmdID_descriptor() {
  protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_IM_2eBaseDefine_2eproto::file_level_enum_descriptors[6];
}
bool SwitchServiceCmdID_IsValid(int value) {
  switch (value) {
    case 0:
    case 1537:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* OtherCmdID_descriptor() {
  protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_IM_2eBaseDefine_2eproto::file_level_enum_descriptors[7];
}
bool OtherCmdID_IsValid(int value) {
  switch (value) {
    case 0:
    case 1793:
    case 1794:
    case 1795:
    case 1796:
    case 1797:
    case 1798:
    case 1799:
    case 1800:
    case 1801:
    case 1802:
    case 1803:
    case 1805:
    case 1806:
    case 1807:
    case 1808:
    case 1809:
    case 1810:
    case 1841:
    case 1842:
    case 1843:
    case 1844:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ResultType_descriptor() {
  protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_IM_2eBaseDefine_2eproto::file_level_enum_descriptors[8];
}
bool ResultType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* KickReasonType_descriptor() {
  protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_IM_2eBaseDefine_2eproto::file_level_enum_descriptors[9];
}
bool KickReasonType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* OnlineListType_descriptor() {
  protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_IM_2eBaseDefine_2eproto::file_level_enum_descriptors[10];
}
bool OnlineListType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* UserStatType_descriptor() {
  protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_IM_2eBaseDefine_2eproto::file_level_enum_descriptors[11];
}
bool UserStatType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SessionType_descriptor() {
  protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_IM_2eBaseDefine_2eproto::file_level_enum_descriptors[12];
}
bool SessionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MsgType_descriptor() {
  protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_IM_2eBaseDefine_2eproto::file_level_enum_descriptors[13];
}
bool MsgType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 17:
    case 18:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ClientType_descriptor() {
  protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_IM_2eBaseDefine_2eproto::file_level_enum_descriptors[14];
}
bool ClientType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 17:
    case 18:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GroupType_descriptor() {
  protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_IM_2eBaseDefine_2eproto::file_level_enum_descriptors[15];
}
bool GroupType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GroupModifyType_descriptor() {
  protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_IM_2eBaseDefine_2eproto::file_level_enum_descriptors[16];
}
bool GroupModifyType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TransferFileType_descriptor() {
  protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_IM_2eBaseDefine_2eproto::file_level_enum_descriptors[17];
}
bool TransferFileType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ClientFileState_descriptor() {
  protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_IM_2eBaseDefine_2eproto::file_level_enum_descriptors[18];
}
bool ClientFileState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ClientFileRole_descriptor() {
  protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_IM_2eBaseDefine_2eproto::file_level_enum_descriptors[19];
}
bool ClientFileRole_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* FileServerError_descriptor() {
  protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_IM_2eBaseDefine_2eproto::file_level_enum_descriptors[20];
}
bool FileServerError_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SessionStatusType_descriptor() {
  protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_IM_2eBaseDefine_2eproto::file_level_enum_descriptors[21];
}
bool SessionStatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* DepartmentStatusType_descriptor() {
  protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_IM_2eBaseDefine_2eproto::file_level_enum_descriptors[22];
}
bool DepartmentStatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void IpAddr::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IpAddr::kIpFieldNumber;
const int IpAddr::kPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IpAddr::IpAddr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_IM_2eBaseDefine_2eproto::InitDefaultsIpAddr();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.BaseDefine.IpAddr)
}
IpAddr::IpAddr(const IpAddr& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  port_ = from.port_;
  // @@protoc_insertion_point(copy_constructor:IM.BaseDefine.IpAddr)
}

void IpAddr::SharedCtor() {
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0u;
  _cached_size_ = 0;
}

IpAddr::~IpAddr() {
  // @@protoc_insertion_point(destructor:IM.BaseDefine.IpAddr)
  SharedDtor();
}

void IpAddr::SharedDtor() {
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IpAddr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IpAddr::descriptor() {
  ::protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eBaseDefine_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IpAddr& IpAddr::default_instance() {
  ::protobuf_IM_2eBaseDefine_2eproto::InitDefaultsIpAddr();
  return *internal_default_instance();
}

IpAddr* IpAddr::New(::google::protobuf::Arena* arena) const {
  IpAddr* n = new IpAddr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IpAddr::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.BaseDefine.IpAddr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0u;
  _internal_metadata_.Clear();
}

bool IpAddr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IM.BaseDefine.IpAddr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip().data(), static_cast<int>(this->ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "IM.BaseDefine.IpAddr.ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 port = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IM.BaseDefine.IpAddr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.BaseDefine.IpAddr)
  return false;
#undef DO_
}

void IpAddr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.BaseDefine.IpAddr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.BaseDefine.IpAddr.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ip(), output);
  }

  // uint32 port = 2;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->port(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IM.BaseDefine.IpAddr)
}

::google::protobuf::uint8* IpAddr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IM.BaseDefine.IpAddr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.BaseDefine.IpAddr.ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ip(), target);
  }

  // uint32 port = 2;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->port(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IM.BaseDefine.IpAddr)
  return target;
}

size_t IpAddr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IM.BaseDefine.IpAddr)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ip = 1;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip());
  }

  // uint32 port = 2;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IpAddr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IM.BaseDefine.IpAddr)
  GOOGLE_DCHECK_NE(&from, this);
  const IpAddr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IpAddr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IM.BaseDefine.IpAddr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IM.BaseDefine.IpAddr)
    MergeFrom(*source);
  }
}

void IpAddr::MergeFrom(const IpAddr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.BaseDefine.IpAddr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
}

void IpAddr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IM.BaseDefine.IpAddr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IpAddr::CopyFrom(const IpAddr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.BaseDefine.IpAddr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IpAddr::IsInitialized() const {
  return true;
}

void IpAddr::Swap(IpAddr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IpAddr::InternalSwap(IpAddr* other) {
  using std::swap;
  ip_.Swap(&other->ip_);
  swap(port_, other->port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IpAddr::GetMetadata() const {
  protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eBaseDefine_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserInfo::kUserIdFieldNumber;
const int UserInfo::kUserGenderFieldNumber;
const int UserInfo::kUserNickNameFieldNumber;
const int UserInfo::kAvatarUrlFieldNumber;
const int UserInfo::kDepartmentIdFieldNumber;
const int UserInfo::kEmailFieldNumber;
const int UserInfo::kUserRealNameFieldNumber;
const int UserInfo::kUserTelFieldNumber;
const int UserInfo::kUserDomainFieldNumber;
const int UserInfo::kStatusFieldNumber;
const int UserInfo::kSignInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserInfo::UserInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_IM_2eBaseDefine_2eproto::InitDefaultsUserInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.BaseDefine.UserInfo)
}
UserInfo::UserInfo(const UserInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_nick_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_nick_name().size() > 0) {
    user_nick_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_nick_name_);
  }
  avatar_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.avatar_url().size() > 0) {
    avatar_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_url_);
  }
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.email().size() > 0) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  user_real_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_real_name().size() > 0) {
    user_real_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_real_name_);
  }
  user_tel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_tel().size() > 0) {
    user_tel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_tel_);
  }
  user_domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_domain().size() > 0) {
    user_domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_domain_);
  }
  sign_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sign_info().size() > 0) {
    sign_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_info_);
  }
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:IM.BaseDefine.UserInfo)
}

void UserInfo::SharedCtor() {
  user_nick_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_real_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_tel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(status_));
  _cached_size_ = 0;
}

UserInfo::~UserInfo() {
  // @@protoc_insertion_point(destructor:IM.BaseDefine.UserInfo)
  SharedDtor();
}

void UserInfo::SharedDtor() {
  user_nick_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_real_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_tel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_domain_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserInfo::descriptor() {
  ::protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eBaseDefine_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserInfo& UserInfo::default_instance() {
  ::protobuf_IM_2eBaseDefine_2eproto::InitDefaultsUserInfo();
  return *internal_default_instance();
}

UserInfo* UserInfo::New(::google::protobuf::Arena* arena) const {
  UserInfo* n = new UserInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.BaseDefine.UserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_real_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_tel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(status_));
  _internal_metadata_.Clear();
}

bool UserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IM.BaseDefine.UserInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 user_gender = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_gender_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_nick_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_nick_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_nick_name().data(), static_cast<int>(this->user_nick_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "IM.BaseDefine.UserInfo.user_nick_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string avatar_url = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_avatar_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->avatar_url().data(), static_cast<int>(this->avatar_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "IM.BaseDefine.UserInfo.avatar_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 department_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &department_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string email = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->email().data(), static_cast<int>(this->email().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "IM.BaseDefine.UserInfo.email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_real_name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_real_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_real_name().data(), static_cast<int>(this->user_real_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "IM.BaseDefine.UserInfo.user_real_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_tel = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_tel()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_tel().data(), static_cast<int>(this->user_tel().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "IM.BaseDefine.UserInfo.user_tel"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_domain = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_domain()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_domain().data(), static_cast<int>(this->user_domain().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "IM.BaseDefine.UserInfo.user_domain"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 status = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sign_info = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sign_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sign_info().data(), static_cast<int>(this->sign_info().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "IM.BaseDefine.UserInfo.sign_info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IM.BaseDefine.UserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.BaseDefine.UserInfo)
  return false;
#undef DO_
}

void UserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.BaseDefine.UserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // uint32 user_gender = 2;
  if (this->user_gender() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->user_gender(), output);
  }

  // string user_nick_name = 3;
  if (this->user_nick_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_nick_name().data(), static_cast<int>(this->user_nick_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.BaseDefine.UserInfo.user_nick_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->user_nick_name(), output);
  }

  // string avatar_url = 4;
  if (this->avatar_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->avatar_url().data(), static_cast<int>(this->avatar_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.BaseDefine.UserInfo.avatar_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->avatar_url(), output);
  }

  // uint32 department_id = 5;
  if (this->department_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->department_id(), output);
  }

  // string email = 6;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.BaseDefine.UserInfo.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->email(), output);
  }

  // string user_real_name = 7;
  if (this->user_real_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_real_name().data(), static_cast<int>(this->user_real_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.BaseDefine.UserInfo.user_real_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->user_real_name(), output);
  }

  // string user_tel = 8;
  if (this->user_tel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_tel().data(), static_cast<int>(this->user_tel().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.BaseDefine.UserInfo.user_tel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->user_tel(), output);
  }

  // string user_domain = 9;
  if (this->user_domain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_domain().data(), static_cast<int>(this->user_domain().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.BaseDefine.UserInfo.user_domain");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->user_domain(), output);
  }

  // uint32 status = 10;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->status(), output);
  }

  // string sign_info = 11;
  if (this->sign_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sign_info().data(), static_cast<int>(this->sign_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.BaseDefine.UserInfo.sign_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->sign_info(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IM.BaseDefine.UserInfo)
}

::google::protobuf::uint8* UserInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IM.BaseDefine.UserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // uint32 user_gender = 2;
  if (this->user_gender() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->user_gender(), target);
  }

  // string user_nick_name = 3;
  if (this->user_nick_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_nick_name().data(), static_cast<int>(this->user_nick_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.BaseDefine.UserInfo.user_nick_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->user_nick_name(), target);
  }

  // string avatar_url = 4;
  if (this->avatar_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->avatar_url().data(), static_cast<int>(this->avatar_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.BaseDefine.UserInfo.avatar_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->avatar_url(), target);
  }

  // uint32 department_id = 5;
  if (this->department_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->department_id(), target);
  }

  // string email = 6;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.BaseDefine.UserInfo.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->email(), target);
  }

  // string user_real_name = 7;
  if (this->user_real_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_real_name().data(), static_cast<int>(this->user_real_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.BaseDefine.UserInfo.user_real_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->user_real_name(), target);
  }

  // string user_tel = 8;
  if (this->user_tel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_tel().data(), static_cast<int>(this->user_tel().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.BaseDefine.UserInfo.user_tel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->user_tel(), target);
  }

  // string user_domain = 9;
  if (this->user_domain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_domain().data(), static_cast<int>(this->user_domain().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.BaseDefine.UserInfo.user_domain");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->user_domain(), target);
  }

  // uint32 status = 10;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->status(), target);
  }

  // string sign_info = 11;
  if (this->sign_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sign_info().data(), static_cast<int>(this->sign_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.BaseDefine.UserInfo.sign_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->sign_info(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IM.BaseDefine.UserInfo)
  return target;
}

size_t UserInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IM.BaseDefine.UserInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string user_nick_name = 3;
  if (this->user_nick_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_nick_name());
  }

  // string avatar_url = 4;
  if (this->avatar_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->avatar_url());
  }

  // string email = 6;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  // string user_real_name = 7;
  if (this->user_real_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_real_name());
  }

  // string user_tel = 8;
  if (this->user_tel().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_tel());
  }

  // string user_domain = 9;
  if (this->user_domain().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_domain());
  }

  // string sign_info = 11;
  if (this->sign_info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sign_info());
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // uint32 user_gender = 2;
  if (this->user_gender() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_gender());
  }

  // uint32 department_id = 5;
  if (this->department_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->department_id());
  }

  // uint32 status = 10;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IM.BaseDefine.UserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const UserInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IM.BaseDefine.UserInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IM.BaseDefine.UserInfo)
    MergeFrom(*source);
  }
}

void UserInfo::MergeFrom(const UserInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.BaseDefine.UserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_nick_name().size() > 0) {

    user_nick_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_nick_name_);
  }
  if (from.avatar_url().size() > 0) {

    avatar_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_url_);
  }
  if (from.email().size() > 0) {

    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  if (from.user_real_name().size() > 0) {

    user_real_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_real_name_);
  }
  if (from.user_tel().size() > 0) {

    user_tel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_tel_);
  }
  if (from.user_domain().size() > 0) {

    user_domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_domain_);
  }
  if (from.sign_info().size() > 0) {

    sign_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_info_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.user_gender() != 0) {
    set_user_gender(from.user_gender());
  }
  if (from.department_id() != 0) {
    set_department_id(from.department_id());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void UserInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IM.BaseDefine.UserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserInfo::CopyFrom(const UserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.BaseDefine.UserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserInfo::IsInitialized() const {
  return true;
}

void UserInfo::Swap(UserInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserInfo::InternalSwap(UserInfo* other) {
  using std::swap;
  user_nick_name_.Swap(&other->user_nick_name_);
  avatar_url_.Swap(&other->avatar_url_);
  email_.Swap(&other->email_);
  user_real_name_.Swap(&other->user_real_name_);
  user_tel_.Swap(&other->user_tel_);
  user_domain_.Swap(&other->user_domain_);
  sign_info_.Swap(&other->sign_info_);
  swap(user_id_, other->user_id_);
  swap(user_gender_, other->user_gender_);
  swap(department_id_, other->department_id_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserInfo::GetMetadata() const {
  protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eBaseDefine_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ContactSessionInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContactSessionInfo::kSessionIdFieldNumber;
const int ContactSessionInfo::kSessionTypeFieldNumber;
const int ContactSessionInfo::kSessionStatusFieldNumber;
const int ContactSessionInfo::kUpdatedTimeFieldNumber;
const int ContactSessionInfo::kLatestMsgIdFieldNumber;
const int ContactSessionInfo::kLatestMsgDataFieldNumber;
const int ContactSessionInfo::kLatestMsgTypeFieldNumber;
const int ContactSessionInfo::kLatestMsgFromUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContactSessionInfo::ContactSessionInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_IM_2eBaseDefine_2eproto::InitDefaultsContactSessionInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.BaseDefine.ContactSessionInfo)
}
ContactSessionInfo::ContactSessionInfo(const ContactSessionInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  latest_msg_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.latest_msg_data().size() > 0) {
    latest_msg_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.latest_msg_data_);
  }
  ::memcpy(&session_id_, &from.session_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&latest_msg_from_user_id_) -
    reinterpret_cast<char*>(&session_id_)) + sizeof(latest_msg_from_user_id_));
  // @@protoc_insertion_point(copy_constructor:IM.BaseDefine.ContactSessionInfo)
}

void ContactSessionInfo::SharedCtor() {
  latest_msg_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&session_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&latest_msg_from_user_id_) -
      reinterpret_cast<char*>(&session_id_)) + sizeof(latest_msg_from_user_id_));
  _cached_size_ = 0;
}

ContactSessionInfo::~ContactSessionInfo() {
  // @@protoc_insertion_point(destructor:IM.BaseDefine.ContactSessionInfo)
  SharedDtor();
}

void ContactSessionInfo::SharedDtor() {
  latest_msg_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ContactSessionInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ContactSessionInfo::descriptor() {
  ::protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eBaseDefine_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ContactSessionInfo& ContactSessionInfo::default_instance() {
  ::protobuf_IM_2eBaseDefine_2eproto::InitDefaultsContactSessionInfo();
  return *internal_default_instance();
}

ContactSessionInfo* ContactSessionInfo::New(::google::protobuf::Arena* arena) const {
  ContactSessionInfo* n = new ContactSessionInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ContactSessionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.BaseDefine.ContactSessionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  latest_msg_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&session_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&latest_msg_from_user_id_) -
      reinterpret_cast<char*>(&session_id_)) + sizeof(latest_msg_from_user_id_));
  _internal_metadata_.Clear();
}

bool ContactSessionInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IM.BaseDefine.ContactSessionInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 session_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &session_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IM.BaseDefine.SessionType session_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_session_type(static_cast< ::IM::BaseDefine::SessionType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IM.BaseDefine.SessionStatusType session_status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_session_status(static_cast< ::IM::BaseDefine::SessionStatusType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 updated_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &updated_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 latest_msg_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &latest_msg_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes latest_msg_data = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_latest_msg_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IM.BaseDefine.MsgType latest_msg_type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_latest_msg_type(static_cast< ::IM::BaseDefine::MsgType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 latest_msg_from_user_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &latest_msg_from_user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IM.BaseDefine.ContactSessionInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.BaseDefine.ContactSessionInfo)
  return false;
#undef DO_
}

void ContactSessionInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.BaseDefine.ContactSessionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 session_id = 1;
  if (this->session_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->session_id(), output);
  }

  // .IM.BaseDefine.SessionType session_type = 2;
  if (this->session_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->session_type(), output);
  }

  // .IM.BaseDefine.SessionStatusType session_status = 3;
  if (this->session_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->session_status(), output);
  }

  // uint32 updated_time = 4;
  if (this->updated_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->updated_time(), output);
  }

  // uint32 latest_msg_id = 5;
  if (this->latest_msg_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->latest_msg_id(), output);
  }

  // bytes latest_msg_data = 6;
  if (this->latest_msg_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->latest_msg_data(), output);
  }

  // .IM.BaseDefine.MsgType latest_msg_type = 7;
  if (this->latest_msg_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->latest_msg_type(), output);
  }

  // uint32 latest_msg_from_user_id = 8;
  if (this->latest_msg_from_user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->latest_msg_from_user_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IM.BaseDefine.ContactSessionInfo)
}

::google::protobuf::uint8* ContactSessionInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IM.BaseDefine.ContactSessionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 session_id = 1;
  if (this->session_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->session_id(), target);
  }

  // .IM.BaseDefine.SessionType session_type = 2;
  if (this->session_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->session_type(), target);
  }

  // .IM.BaseDefine.SessionStatusType session_status = 3;
  if (this->session_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->session_status(), target);
  }

  // uint32 updated_time = 4;
  if (this->updated_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->updated_time(), target);
  }

  // uint32 latest_msg_id = 5;
  if (this->latest_msg_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->latest_msg_id(), target);
  }

  // bytes latest_msg_data = 6;
  if (this->latest_msg_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->latest_msg_data(), target);
  }

  // .IM.BaseDefine.MsgType latest_msg_type = 7;
  if (this->latest_msg_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->latest_msg_type(), target);
  }

  // uint32 latest_msg_from_user_id = 8;
  if (this->latest_msg_from_user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->latest_msg_from_user_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IM.BaseDefine.ContactSessionInfo)
  return target;
}

size_t ContactSessionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IM.BaseDefine.ContactSessionInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes latest_msg_data = 6;
  if (this->latest_msg_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->latest_msg_data());
  }

  // uint32 session_id = 1;
  if (this->session_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->session_id());
  }

  // .IM.BaseDefine.SessionType session_type = 2;
  if (this->session_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->session_type());
  }

  // .IM.BaseDefine.SessionStatusType session_status = 3;
  if (this->session_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->session_status());
  }

  // uint32 updated_time = 4;
  if (this->updated_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->updated_time());
  }

  // uint32 latest_msg_id = 5;
  if (this->latest_msg_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->latest_msg_id());
  }

  // .IM.BaseDefine.MsgType latest_msg_type = 7;
  if (this->latest_msg_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->latest_msg_type());
  }

  // uint32 latest_msg_from_user_id = 8;
  if (this->latest_msg_from_user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->latest_msg_from_user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContactSessionInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IM.BaseDefine.ContactSessionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ContactSessionInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ContactSessionInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IM.BaseDefine.ContactSessionInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IM.BaseDefine.ContactSessionInfo)
    MergeFrom(*source);
  }
}

void ContactSessionInfo::MergeFrom(const ContactSessionInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.BaseDefine.ContactSessionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.latest_msg_data().size() > 0) {

    latest_msg_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.latest_msg_data_);
  }
  if (from.session_id() != 0) {
    set_session_id(from.session_id());
  }
  if (from.session_type() != 0) {
    set_session_type(from.session_type());
  }
  if (from.session_status() != 0) {
    set_session_status(from.session_status());
  }
  if (from.updated_time() != 0) {
    set_updated_time(from.updated_time());
  }
  if (from.latest_msg_id() != 0) {
    set_latest_msg_id(from.latest_msg_id());
  }
  if (from.latest_msg_type() != 0) {
    set_latest_msg_type(from.latest_msg_type());
  }
  if (from.latest_msg_from_user_id() != 0) {
    set_latest_msg_from_user_id(from.latest_msg_from_user_id());
  }
}

void ContactSessionInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IM.BaseDefine.ContactSessionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContactSessionInfo::CopyFrom(const ContactSessionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.BaseDefine.ContactSessionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContactSessionInfo::IsInitialized() const {
  return true;
}

void ContactSessionInfo::Swap(ContactSessionInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContactSessionInfo::InternalSwap(ContactSessionInfo* other) {
  using std::swap;
  latest_msg_data_.Swap(&other->latest_msg_data_);
  swap(session_id_, other->session_id_);
  swap(session_type_, other->session_type_);
  swap(session_status_, other->session_status_);
  swap(updated_time_, other->updated_time_);
  swap(latest_msg_id_, other->latest_msg_id_);
  swap(latest_msg_type_, other->latest_msg_type_);
  swap(latest_msg_from_user_id_, other->latest_msg_from_user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ContactSessionInfo::GetMetadata() const {
  protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eBaseDefine_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserStat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserStat::kUserIdFieldNumber;
const int UserStat::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserStat::UserStat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_IM_2eBaseDefine_2eproto::InitDefaultsUserStat();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.BaseDefine.UserStat)
}
UserStat::UserStat(const UserStat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:IM.BaseDefine.UserStat)
}

void UserStat::SharedCtor() {
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(status_));
  _cached_size_ = 0;
}

UserStat::~UserStat() {
  // @@protoc_insertion_point(destructor:IM.BaseDefine.UserStat)
  SharedDtor();
}

void UserStat::SharedDtor() {
}

void UserStat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserStat::descriptor() {
  ::protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eBaseDefine_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserStat& UserStat::default_instance() {
  ::protobuf_IM_2eBaseDefine_2eproto::InitDefaultsUserStat();
  return *internal_default_instance();
}

UserStat* UserStat::New(::google::protobuf::Arena* arena) const {
  UserStat* n = new UserStat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserStat::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.BaseDefine.UserStat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(status_));
  _internal_metadata_.Clear();
}

bool UserStat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IM.BaseDefine.UserStat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IM.BaseDefine.UserStatType status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::IM::BaseDefine::UserStatType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IM.BaseDefine.UserStat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.BaseDefine.UserStat)
  return false;
#undef DO_
}

void UserStat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.BaseDefine.UserStat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // .IM.BaseDefine.UserStatType status = 2;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IM.BaseDefine.UserStat)
}

::google::protobuf::uint8* UserStat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IM.BaseDefine.UserStat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // .IM.BaseDefine.UserStatType status = 2;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IM.BaseDefine.UserStat)
  return target;
}

size_t UserStat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IM.BaseDefine.UserStat)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // .IM.BaseDefine.UserStatType status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserStat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IM.BaseDefine.UserStat)
  GOOGLE_DCHECK_NE(&from, this);
  const UserStat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserStat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IM.BaseDefine.UserStat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IM.BaseDefine.UserStat)
    MergeFrom(*source);
  }
}

void UserStat::MergeFrom(const UserStat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.BaseDefine.UserStat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void UserStat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IM.BaseDefine.UserStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserStat::CopyFrom(const UserStat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.BaseDefine.UserStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserStat::IsInitialized() const {
  return true;
}

void UserStat::Swap(UserStat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserStat::InternalSwap(UserStat* other) {
  using std::swap;
  swap(user_id_, other->user_id_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserStat::GetMetadata() const {
  protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eBaseDefine_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerUserStat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerUserStat::kUserIdFieldNumber;
const int ServerUserStat::kStatusFieldNumber;
const int ServerUserStat::kClientTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerUserStat::ServerUserStat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_IM_2eBaseDefine_2eproto::InitDefaultsServerUserStat();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.BaseDefine.ServerUserStat)
}
ServerUserStat::ServerUserStat(const ServerUserStat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&client_type_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(client_type_));
  // @@protoc_insertion_point(copy_constructor:IM.BaseDefine.ServerUserStat)
}

void ServerUserStat::SharedCtor() {
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&client_type_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(client_type_));
  _cached_size_ = 0;
}

ServerUserStat::~ServerUserStat() {
  // @@protoc_insertion_point(destructor:IM.BaseDefine.ServerUserStat)
  SharedDtor();
}

void ServerUserStat::SharedDtor() {
}

void ServerUserStat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerUserStat::descriptor() {
  ::protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eBaseDefine_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerUserStat& ServerUserStat::default_instance() {
  ::protobuf_IM_2eBaseDefine_2eproto::InitDefaultsServerUserStat();
  return *internal_default_instance();
}

ServerUserStat* ServerUserStat::New(::google::protobuf::Arena* arena) const {
  ServerUserStat* n = new ServerUserStat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerUserStat::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.BaseDefine.ServerUserStat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&client_type_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(client_type_));
  _internal_metadata_.Clear();
}

bool ServerUserStat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IM.BaseDefine.ServerUserStat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IM.BaseDefine.UserStatType status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::IM::BaseDefine::UserStatType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IM.BaseDefine.ClientType client_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_client_type(static_cast< ::IM::BaseDefine::ClientType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IM.BaseDefine.ServerUserStat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.BaseDefine.ServerUserStat)
  return false;
#undef DO_
}

void ServerUserStat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.BaseDefine.ServerUserStat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // .IM.BaseDefine.UserStatType status = 2;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  // .IM.BaseDefine.ClientType client_type = 3;
  if (this->client_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->client_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IM.BaseDefine.ServerUserStat)
}

::google::protobuf::uint8* ServerUserStat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IM.BaseDefine.ServerUserStat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // .IM.BaseDefine.UserStatType status = 2;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->status(), target);
  }

  // .IM.BaseDefine.ClientType client_type = 3;
  if (this->client_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->client_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IM.BaseDefine.ServerUserStat)
  return target;
}

size_t ServerUserStat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IM.BaseDefine.ServerUserStat)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // .IM.BaseDefine.UserStatType status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  // .IM.BaseDefine.ClientType client_type = 3;
  if (this->client_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->client_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerUserStat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IM.BaseDefine.ServerUserStat)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerUserStat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerUserStat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IM.BaseDefine.ServerUserStat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IM.BaseDefine.ServerUserStat)
    MergeFrom(*source);
  }
}

void ServerUserStat::MergeFrom(const ServerUserStat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.BaseDefine.ServerUserStat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.client_type() != 0) {
    set_client_type(from.client_type());
  }
}

void ServerUserStat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IM.BaseDefine.ServerUserStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerUserStat::CopyFrom(const ServerUserStat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.BaseDefine.ServerUserStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerUserStat::IsInitialized() const {
  return true;
}

void ServerUserStat::Swap(ServerUserStat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerUserStat::InternalSwap(ServerUserStat* other) {
  using std::swap;
  swap(user_id_, other->user_id_);
  swap(status_, other->status_);
  swap(client_type_, other->client_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerUserStat::GetMetadata() const {
  protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eBaseDefine_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UnreadInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnreadInfo::kSessionIdFieldNumber;
const int UnreadInfo::kSessionTypeFieldNumber;
const int UnreadInfo::kUnreadCntFieldNumber;
const int UnreadInfo::kLatestMsgIdFieldNumber;
const int UnreadInfo::kLatestMsgDataFieldNumber;
const int UnreadInfo::kLatestMsgTypeFieldNumber;
const int UnreadInfo::kLatestMsgFromUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnreadInfo::UnreadInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_IM_2eBaseDefine_2eproto::InitDefaultsUnreadInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.BaseDefine.UnreadInfo)
}
UnreadInfo::UnreadInfo(const UnreadInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  latest_msg_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.latest_msg_data().size() > 0) {
    latest_msg_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.latest_msg_data_);
  }
  ::memcpy(&session_id_, &from.session_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&latest_msg_from_user_id_) -
    reinterpret_cast<char*>(&session_id_)) + sizeof(latest_msg_from_user_id_));
  // @@protoc_insertion_point(copy_constructor:IM.BaseDefine.UnreadInfo)
}

void UnreadInfo::SharedCtor() {
  latest_msg_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&session_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&latest_msg_from_user_id_) -
      reinterpret_cast<char*>(&session_id_)) + sizeof(latest_msg_from_user_id_));
  _cached_size_ = 0;
}

UnreadInfo::~UnreadInfo() {
  // @@protoc_insertion_point(destructor:IM.BaseDefine.UnreadInfo)
  SharedDtor();
}

void UnreadInfo::SharedDtor() {
  latest_msg_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UnreadInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnreadInfo::descriptor() {
  ::protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eBaseDefine_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnreadInfo& UnreadInfo::default_instance() {
  ::protobuf_IM_2eBaseDefine_2eproto::InitDefaultsUnreadInfo();
  return *internal_default_instance();
}

UnreadInfo* UnreadInfo::New(::google::protobuf::Arena* arena) const {
  UnreadInfo* n = new UnreadInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnreadInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.BaseDefine.UnreadInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  latest_msg_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&session_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&latest_msg_from_user_id_) -
      reinterpret_cast<char*>(&session_id_)) + sizeof(latest_msg_from_user_id_));
  _internal_metadata_.Clear();
}

bool UnreadInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IM.BaseDefine.UnreadInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 session_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &session_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IM.BaseDefine.SessionType session_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_session_type(static_cast< ::IM::BaseDefine::SessionType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 unread_cnt = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unread_cnt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 latest_msg_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &latest_msg_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes latest_msg_data = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_latest_msg_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IM.BaseDefine.MsgType latest_msg_type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_latest_msg_type(static_cast< ::IM::BaseDefine::MsgType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 latest_msg_from_user_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &latest_msg_from_user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IM.BaseDefine.UnreadInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.BaseDefine.UnreadInfo)
  return false;
#undef DO_
}

void UnreadInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.BaseDefine.UnreadInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 session_id = 1;
  if (this->session_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->session_id(), output);
  }

  // .IM.BaseDefine.SessionType session_type = 2;
  if (this->session_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->session_type(), output);
  }

  // uint32 unread_cnt = 3;
  if (this->unread_cnt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->unread_cnt(), output);
  }

  // uint32 latest_msg_id = 4;
  if (this->latest_msg_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->latest_msg_id(), output);
  }

  // bytes latest_msg_data = 5;
  if (this->latest_msg_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->latest_msg_data(), output);
  }

  // .IM.BaseDefine.MsgType latest_msg_type = 6;
  if (this->latest_msg_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->latest_msg_type(), output);
  }

  // uint32 latest_msg_from_user_id = 7;
  if (this->latest_msg_from_user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->latest_msg_from_user_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IM.BaseDefine.UnreadInfo)
}

::google::protobuf::uint8* UnreadInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IM.BaseDefine.UnreadInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 session_id = 1;
  if (this->session_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->session_id(), target);
  }

  // .IM.BaseDefine.SessionType session_type = 2;
  if (this->session_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->session_type(), target);
  }

  // uint32 unread_cnt = 3;
  if (this->unread_cnt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->unread_cnt(), target);
  }

  // uint32 latest_msg_id = 4;
  if (this->latest_msg_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->latest_msg_id(), target);
  }

  // bytes latest_msg_data = 5;
  if (this->latest_msg_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->latest_msg_data(), target);
  }

  // .IM.BaseDefine.MsgType latest_msg_type = 6;
  if (this->latest_msg_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->latest_msg_type(), target);
  }

  // uint32 latest_msg_from_user_id = 7;
  if (this->latest_msg_from_user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->latest_msg_from_user_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IM.BaseDefine.UnreadInfo)
  return target;
}

size_t UnreadInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IM.BaseDefine.UnreadInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes latest_msg_data = 5;
  if (this->latest_msg_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->latest_msg_data());
  }

  // uint32 session_id = 1;
  if (this->session_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->session_id());
  }

  // .IM.BaseDefine.SessionType session_type = 2;
  if (this->session_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->session_type());
  }

  // uint32 unread_cnt = 3;
  if (this->unread_cnt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unread_cnt());
  }

  // uint32 latest_msg_id = 4;
  if (this->latest_msg_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->latest_msg_id());
  }

  // .IM.BaseDefine.MsgType latest_msg_type = 6;
  if (this->latest_msg_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->latest_msg_type());
  }

  // uint32 latest_msg_from_user_id = 7;
  if (this->latest_msg_from_user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->latest_msg_from_user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnreadInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IM.BaseDefine.UnreadInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const UnreadInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnreadInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IM.BaseDefine.UnreadInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IM.BaseDefine.UnreadInfo)
    MergeFrom(*source);
  }
}

void UnreadInfo::MergeFrom(const UnreadInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.BaseDefine.UnreadInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.latest_msg_data().size() > 0) {

    latest_msg_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.latest_msg_data_);
  }
  if (from.session_id() != 0) {
    set_session_id(from.session_id());
  }
  if (from.session_type() != 0) {
    set_session_type(from.session_type());
  }
  if (from.unread_cnt() != 0) {
    set_unread_cnt(from.unread_cnt());
  }
  if (from.latest_msg_id() != 0) {
    set_latest_msg_id(from.latest_msg_id());
  }
  if (from.latest_msg_type() != 0) {
    set_latest_msg_type(from.latest_msg_type());
  }
  if (from.latest_msg_from_user_id() != 0) {
    set_latest_msg_from_user_id(from.latest_msg_from_user_id());
  }
}

void UnreadInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IM.BaseDefine.UnreadInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnreadInfo::CopyFrom(const UnreadInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.BaseDefine.UnreadInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnreadInfo::IsInitialized() const {
  return true;
}

void UnreadInfo::Swap(UnreadInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnreadInfo::InternalSwap(UnreadInfo* other) {
  using std::swap;
  latest_msg_data_.Swap(&other->latest_msg_data_);
  swap(session_id_, other->session_id_);
  swap(session_type_, other->session_type_);
  swap(unread_cnt_, other->unread_cnt_);
  swap(latest_msg_id_, other->latest_msg_id_);
  swap(latest_msg_type_, other->latest_msg_type_);
  swap(latest_msg_from_user_id_, other->latest_msg_from_user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnreadInfo::GetMetadata() const {
  protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eBaseDefine_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgInfo::kMsgIdFieldNumber;
const int MsgInfo::kFromSessionIdFieldNumber;
const int MsgInfo::kCreateTimeFieldNumber;
const int MsgInfo::kMsgTypeFieldNumber;
const int MsgInfo::kMsgDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgInfo::MsgInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_IM_2eBaseDefine_2eproto::InitDefaultsMsgInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.BaseDefine.MsgInfo)
}
MsgInfo::MsgInfo(const MsgInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_data().size() > 0) {
    msg_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_data_);
  }
  ::memcpy(&msg_id_, &from.msg_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&msg_type_) -
    reinterpret_cast<char*>(&msg_id_)) + sizeof(msg_type_));
  // @@protoc_insertion_point(copy_constructor:IM.BaseDefine.MsgInfo)
}

void MsgInfo::SharedCtor() {
  msg_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msg_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msg_type_) -
      reinterpret_cast<char*>(&msg_id_)) + sizeof(msg_type_));
  _cached_size_ = 0;
}

MsgInfo::~MsgInfo() {
  // @@protoc_insertion_point(destructor:IM.BaseDefine.MsgInfo)
  SharedDtor();
}

void MsgInfo::SharedDtor() {
  msg_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgInfo::descriptor() {
  ::protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eBaseDefine_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgInfo& MsgInfo::default_instance() {
  ::protobuf_IM_2eBaseDefine_2eproto::InitDefaultsMsgInfo();
  return *internal_default_instance();
}

MsgInfo* MsgInfo::New(::google::protobuf::Arena* arena) const {
  MsgInfo* n = new MsgInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.BaseDefine.MsgInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msg_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msg_type_) -
      reinterpret_cast<char*>(&msg_id_)) + sizeof(msg_type_));
  _internal_metadata_.Clear();
}

bool MsgInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IM.BaseDefine.MsgInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 msg_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msg_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 from_session_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &from_session_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 create_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &create_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IM.BaseDefine.MsgType msg_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_msg_type(static_cast< ::IM::BaseDefine::MsgType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msg_data = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msg_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IM.BaseDefine.MsgInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.BaseDefine.MsgInfo)
  return false;
#undef DO_
}

void MsgInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.BaseDefine.MsgInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msg_id = 1;
  if (this->msg_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msg_id(), output);
  }

  // uint32 from_session_id = 2;
  if (this->from_session_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->from_session_id(), output);
  }

  // uint32 create_time = 3;
  if (this->create_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->create_time(), output);
  }

  // .IM.BaseDefine.MsgType msg_type = 4;
  if (this->msg_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->msg_type(), output);
  }

  // bytes msg_data = 5;
  if (this->msg_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->msg_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IM.BaseDefine.MsgInfo)
}

::google::protobuf::uint8* MsgInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IM.BaseDefine.MsgInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msg_id = 1;
  if (this->msg_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msg_id(), target);
  }

  // uint32 from_session_id = 2;
  if (this->from_session_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->from_session_id(), target);
  }

  // uint32 create_time = 3;
  if (this->create_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->create_time(), target);
  }

  // .IM.BaseDefine.MsgType msg_type = 4;
  if (this->msg_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->msg_type(), target);
  }

  // bytes msg_data = 5;
  if (this->msg_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->msg_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IM.BaseDefine.MsgInfo)
  return target;
}

size_t MsgInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IM.BaseDefine.MsgInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes msg_data = 5;
  if (this->msg_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msg_data());
  }

  // uint32 msg_id = 1;
  if (this->msg_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msg_id());
  }

  // uint32 from_session_id = 2;
  if (this->from_session_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->from_session_id());
  }

  // uint32 create_time = 3;
  if (this->create_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->create_time());
  }

  // .IM.BaseDefine.MsgType msg_type = 4;
  if (this->msg_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msg_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IM.BaseDefine.MsgInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IM.BaseDefine.MsgInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IM.BaseDefine.MsgInfo)
    MergeFrom(*source);
  }
}

void MsgInfo::MergeFrom(const MsgInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.BaseDefine.MsgInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg_data().size() > 0) {

    msg_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_data_);
  }
  if (from.msg_id() != 0) {
    set_msg_id(from.msg_id());
  }
  if (from.from_session_id() != 0) {
    set_from_session_id(from.from_session_id());
  }
  if (from.create_time() != 0) {
    set_create_time(from.create_time());
  }
  if (from.msg_type() != 0) {
    set_msg_type(from.msg_type());
  }
}

void MsgInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IM.BaseDefine.MsgInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgInfo::CopyFrom(const MsgInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.BaseDefine.MsgInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgInfo::IsInitialized() const {
  return true;
}

void MsgInfo::Swap(MsgInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgInfo::InternalSwap(MsgInfo* other) {
  using std::swap;
  msg_data_.Swap(&other->msg_data_);
  swap(msg_id_, other->msg_id_);
  swap(from_session_id_, other->from_session_id_);
  swap(create_time_, other->create_time_);
  swap(msg_type_, other->msg_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgInfo::GetMetadata() const {
  protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eBaseDefine_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GroupVersionInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupVersionInfo::kGroupIdFieldNumber;
const int GroupVersionInfo::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupVersionInfo::GroupVersionInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_IM_2eBaseDefine_2eproto::InitDefaultsGroupVersionInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.BaseDefine.GroupVersionInfo)
}
GroupVersionInfo::GroupVersionInfo(const GroupVersionInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&group_id_, &from.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&group_id_)) + sizeof(version_));
  // @@protoc_insertion_point(copy_constructor:IM.BaseDefine.GroupVersionInfo)
}

void GroupVersionInfo::SharedCtor() {
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(version_));
  _cached_size_ = 0;
}

GroupVersionInfo::~GroupVersionInfo() {
  // @@protoc_insertion_point(destructor:IM.BaseDefine.GroupVersionInfo)
  SharedDtor();
}

void GroupVersionInfo::SharedDtor() {
}

void GroupVersionInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GroupVersionInfo::descriptor() {
  ::protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eBaseDefine_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GroupVersionInfo& GroupVersionInfo::default_instance() {
  ::protobuf_IM_2eBaseDefine_2eproto::InitDefaultsGroupVersionInfo();
  return *internal_default_instance();
}

GroupVersionInfo* GroupVersionInfo::New(::google::protobuf::Arena* arena) const {
  GroupVersionInfo* n = new GroupVersionInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GroupVersionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.BaseDefine.GroupVersionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(version_));
  _internal_metadata_.Clear();
}

bool GroupVersionInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IM.BaseDefine.GroupVersionInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IM.BaseDefine.GroupVersionInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.BaseDefine.GroupVersionInfo)
  return false;
#undef DO_
}

void GroupVersionInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.BaseDefine.GroupVersionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->group_id(), output);
  }

  // uint32 version = 2;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IM.BaseDefine.GroupVersionInfo)
}

::google::protobuf::uint8* GroupVersionInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IM.BaseDefine.GroupVersionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->group_id(), target);
  }

  // uint32 version = 2;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IM.BaseDefine.GroupVersionInfo)
  return target;
}

size_t GroupVersionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IM.BaseDefine.GroupVersionInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  // uint32 version = 2;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GroupVersionInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IM.BaseDefine.GroupVersionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const GroupVersionInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GroupVersionInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IM.BaseDefine.GroupVersionInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IM.BaseDefine.GroupVersionInfo)
    MergeFrom(*source);
  }
}

void GroupVersionInfo::MergeFrom(const GroupVersionInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.BaseDefine.GroupVersionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
}

void GroupVersionInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IM.BaseDefine.GroupVersionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GroupVersionInfo::CopyFrom(const GroupVersionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.BaseDefine.GroupVersionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupVersionInfo::IsInitialized() const {
  return true;
}

void GroupVersionInfo::Swap(GroupVersionInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupVersionInfo::InternalSwap(GroupVersionInfo* other) {
  using std::swap;
  swap(group_id_, other->group_id_);
  swap(version_, other->version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GroupVersionInfo::GetMetadata() const {
  protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eBaseDefine_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GroupInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupInfo::kGroupIdFieldNumber;
const int GroupInfo::kVersionFieldNumber;
const int GroupInfo::kGroupNameFieldNumber;
const int GroupInfo::kGroupAvatarFieldNumber;
const int GroupInfo::kGroupCreatorIdFieldNumber;
const int GroupInfo::kGroupTypeFieldNumber;
const int GroupInfo::kShieldStatusFieldNumber;
const int GroupInfo::kGroupMemberListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupInfo::GroupInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_IM_2eBaseDefine_2eproto::InitDefaultsGroupInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.BaseDefine.GroupInfo)
}
GroupInfo::GroupInfo(const GroupInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      group_member_list_(from.group_member_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  group_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.group_name().size() > 0) {
    group_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_name_);
  }
  group_avatar_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.group_avatar().size() > 0) {
    group_avatar_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_avatar_);
  }
  ::memcpy(&group_id_, &from.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&shield_status_) -
    reinterpret_cast<char*>(&group_id_)) + sizeof(shield_status_));
  // @@protoc_insertion_point(copy_constructor:IM.BaseDefine.GroupInfo)
}

void GroupInfo::SharedCtor() {
  group_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_avatar_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shield_status_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(shield_status_));
  _cached_size_ = 0;
}

GroupInfo::~GroupInfo() {
  // @@protoc_insertion_point(destructor:IM.BaseDefine.GroupInfo)
  SharedDtor();
}

void GroupInfo::SharedDtor() {
  group_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_avatar_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GroupInfo::descriptor() {
  ::protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eBaseDefine_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GroupInfo& GroupInfo::default_instance() {
  ::protobuf_IM_2eBaseDefine_2eproto::InitDefaultsGroupInfo();
  return *internal_default_instance();
}

GroupInfo* GroupInfo::New(::google::protobuf::Arena* arena) const {
  GroupInfo* n = new GroupInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GroupInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.BaseDefine.GroupInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  group_member_list_.Clear();
  group_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_avatar_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shield_status_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(shield_status_));
  _internal_metadata_.Clear();
}

bool GroupInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IM.BaseDefine.GroupInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string group_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->group_name().data(), static_cast<int>(this->group_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "IM.BaseDefine.GroupInfo.group_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string group_avatar = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_avatar()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->group_avatar().data(), static_cast<int>(this->group_avatar().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "IM.BaseDefine.GroupInfo.group_avatar"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group_creator_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_creator_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IM.BaseDefine.GroupType group_type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_group_type(static_cast< ::IM::BaseDefine::GroupType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 shield_status = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shield_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 group_member_list = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_group_member_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 66u, input, this->mutable_group_member_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IM.BaseDefine.GroupInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.BaseDefine.GroupInfo)
  return false;
#undef DO_
}

void GroupInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.BaseDefine.GroupInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->group_id(), output);
  }

  // uint32 version = 2;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->version(), output);
  }

  // string group_name = 3;
  if (this->group_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_name().data(), static_cast<int>(this->group_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.BaseDefine.GroupInfo.group_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->group_name(), output);
  }

  // string group_avatar = 4;
  if (this->group_avatar().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_avatar().data(), static_cast<int>(this->group_avatar().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.BaseDefine.GroupInfo.group_avatar");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->group_avatar(), output);
  }

  // uint32 group_creator_id = 5;
  if (this->group_creator_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->group_creator_id(), output);
  }

  // .IM.BaseDefine.GroupType group_type = 6;
  if (this->group_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->group_type(), output);
  }

  // uint32 shield_status = 7;
  if (this->shield_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->shield_status(), output);
  }

  // repeated uint32 group_member_list = 8;
  if (this->group_member_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _group_member_list_cached_byte_size_));
  }
  for (int i = 0, n = this->group_member_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->group_member_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IM.BaseDefine.GroupInfo)
}

::google::protobuf::uint8* GroupInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IM.BaseDefine.GroupInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->group_id(), target);
  }

  // uint32 version = 2;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->version(), target);
  }

  // string group_name = 3;
  if (this->group_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_name().data(), static_cast<int>(this->group_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.BaseDefine.GroupInfo.group_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->group_name(), target);
  }

  // string group_avatar = 4;
  if (this->group_avatar().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_avatar().data(), static_cast<int>(this->group_avatar().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.BaseDefine.GroupInfo.group_avatar");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->group_avatar(), target);
  }

  // uint32 group_creator_id = 5;
  if (this->group_creator_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->group_creator_id(), target);
  }

  // .IM.BaseDefine.GroupType group_type = 6;
  if (this->group_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->group_type(), target);
  }

  // uint32 shield_status = 7;
  if (this->shield_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->shield_status(), target);
  }

  // repeated uint32 group_member_list = 8;
  if (this->group_member_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _group_member_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->group_member_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IM.BaseDefine.GroupInfo)
  return target;
}

size_t GroupInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IM.BaseDefine.GroupInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 group_member_list = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->group_member_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _group_member_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string group_name = 3;
  if (this->group_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_name());
  }

  // string group_avatar = 4;
  if (this->group_avatar().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_avatar());
  }

  // uint32 group_id = 1;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  // uint32 version = 2;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }

  // uint32 group_creator_id = 5;
  if (this->group_creator_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_creator_id());
  }

  // .IM.BaseDefine.GroupType group_type = 6;
  if (this->group_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->group_type());
  }

  // uint32 shield_status = 7;
  if (this->shield_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->shield_status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GroupInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IM.BaseDefine.GroupInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const GroupInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GroupInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IM.BaseDefine.GroupInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IM.BaseDefine.GroupInfo)
    MergeFrom(*source);
  }
}

void GroupInfo::MergeFrom(const GroupInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.BaseDefine.GroupInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  group_member_list_.MergeFrom(from.group_member_list_);
  if (from.group_name().size() > 0) {

    group_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_name_);
  }
  if (from.group_avatar().size() > 0) {

    group_avatar_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_avatar_);
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.group_creator_id() != 0) {
    set_group_creator_id(from.group_creator_id());
  }
  if (from.group_type() != 0) {
    set_group_type(from.group_type());
  }
  if (from.shield_status() != 0) {
    set_shield_status(from.shield_status());
  }
}

void GroupInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IM.BaseDefine.GroupInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GroupInfo::CopyFrom(const GroupInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.BaseDefine.GroupInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupInfo::IsInitialized() const {
  return true;
}

void GroupInfo::Swap(GroupInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupInfo::InternalSwap(GroupInfo* other) {
  using std::swap;
  group_member_list_.InternalSwap(&other->group_member_list_);
  group_name_.Swap(&other->group_name_);
  group_avatar_.Swap(&other->group_avatar_);
  swap(group_id_, other->group_id_);
  swap(version_, other->version_);
  swap(group_creator_id_, other->group_creator_id_);
  swap(group_type_, other->group_type_);
  swap(shield_status_, other->shield_status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GroupInfo::GetMetadata() const {
  protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eBaseDefine_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserTokenInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserTokenInfo::kUserIdFieldNumber;
const int UserTokenInfo::kUserTypeFieldNumber;
const int UserTokenInfo::kTokenFieldNumber;
const int UserTokenInfo::kPushCountFieldNumber;
const int UserTokenInfo::kPushTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserTokenInfo::UserTokenInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_IM_2eBaseDefine_2eproto::InitDefaultsUserTokenInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.BaseDefine.UserTokenInfo)
}
UserTokenInfo::UserTokenInfo(const UserTokenInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&push_type_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(push_type_));
  // @@protoc_insertion_point(copy_constructor:IM.BaseDefine.UserTokenInfo)
}

void UserTokenInfo::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&push_type_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(push_type_));
  _cached_size_ = 0;
}

UserTokenInfo::~UserTokenInfo() {
  // @@protoc_insertion_point(destructor:IM.BaseDefine.UserTokenInfo)
  SharedDtor();
}

void UserTokenInfo::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserTokenInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserTokenInfo::descriptor() {
  ::protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eBaseDefine_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserTokenInfo& UserTokenInfo::default_instance() {
  ::protobuf_IM_2eBaseDefine_2eproto::InitDefaultsUserTokenInfo();
  return *internal_default_instance();
}

UserTokenInfo* UserTokenInfo::New(::google::protobuf::Arena* arena) const {
  UserTokenInfo* n = new UserTokenInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserTokenInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.BaseDefine.UserTokenInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&push_type_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(push_type_));
  _internal_metadata_.Clear();
}

bool UserTokenInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IM.BaseDefine.UserTokenInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IM.BaseDefine.ClientType user_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_user_type(static_cast< ::IM::BaseDefine::ClientType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "IM.BaseDefine.UserTokenInfo.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 push_count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &push_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 push_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &push_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IM.BaseDefine.UserTokenInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.BaseDefine.UserTokenInfo)
  return false;
#undef DO_
}

void UserTokenInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.BaseDefine.UserTokenInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // .IM.BaseDefine.ClientType user_type = 2;
  if (this->user_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->user_type(), output);
  }

  // string token = 3;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.BaseDefine.UserTokenInfo.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->token(), output);
  }

  // uint32 push_count = 4;
  if (this->push_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->push_count(), output);
  }

  // uint32 push_type = 5;
  if (this->push_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->push_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IM.BaseDefine.UserTokenInfo)
}

::google::protobuf::uint8* UserTokenInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IM.BaseDefine.UserTokenInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // .IM.BaseDefine.ClientType user_type = 2;
  if (this->user_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->user_type(), target);
  }

  // string token = 3;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.BaseDefine.UserTokenInfo.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->token(), target);
  }

  // uint32 push_count = 4;
  if (this->push_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->push_count(), target);
  }

  // uint32 push_type = 5;
  if (this->push_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->push_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IM.BaseDefine.UserTokenInfo)
  return target;
}

size_t UserTokenInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IM.BaseDefine.UserTokenInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string token = 3;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // .IM.BaseDefine.ClientType user_type = 2;
  if (this->user_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->user_type());
  }

  // uint32 push_count = 4;
  if (this->push_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->push_count());
  }

  // uint32 push_type = 5;
  if (this->push_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->push_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserTokenInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IM.BaseDefine.UserTokenInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const UserTokenInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserTokenInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IM.BaseDefine.UserTokenInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IM.BaseDefine.UserTokenInfo)
    MergeFrom(*source);
  }
}

void UserTokenInfo::MergeFrom(const UserTokenInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.BaseDefine.UserTokenInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.user_type() != 0) {
    set_user_type(from.user_type());
  }
  if (from.push_count() != 0) {
    set_push_count(from.push_count());
  }
  if (from.push_type() != 0) {
    set_push_type(from.push_type());
  }
}

void UserTokenInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IM.BaseDefine.UserTokenInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserTokenInfo::CopyFrom(const UserTokenInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.BaseDefine.UserTokenInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserTokenInfo::IsInitialized() const {
  return true;
}

void UserTokenInfo::Swap(UserTokenInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserTokenInfo::InternalSwap(UserTokenInfo* other) {
  using std::swap;
  token_.Swap(&other->token_);
  swap(user_id_, other->user_id_);
  swap(user_type_, other->user_type_);
  swap(push_count_, other->push_count_);
  swap(push_type_, other->push_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserTokenInfo::GetMetadata() const {
  protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eBaseDefine_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PushResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PushResult::kUserTokenFieldNumber;
const int PushResult::kResultCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PushResult::PushResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_IM_2eBaseDefine_2eproto::InitDefaultsPushResult();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.BaseDefine.PushResult)
}
PushResult::PushResult(const PushResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_token().size() > 0) {
    user_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_token_);
  }
  result_code_ = from.result_code_;
  // @@protoc_insertion_point(copy_constructor:IM.BaseDefine.PushResult)
}

void PushResult::SharedCtor() {
  user_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_code_ = 0u;
  _cached_size_ = 0;
}

PushResult::~PushResult() {
  // @@protoc_insertion_point(destructor:IM.BaseDefine.PushResult)
  SharedDtor();
}

void PushResult::SharedDtor() {
  user_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PushResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PushResult::descriptor() {
  ::protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eBaseDefine_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PushResult& PushResult::default_instance() {
  ::protobuf_IM_2eBaseDefine_2eproto::InitDefaultsPushResult();
  return *internal_default_instance();
}

PushResult* PushResult::New(::google::protobuf::Arena* arena) const {
  PushResult* n = new PushResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PushResult::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.BaseDefine.PushResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_code_ = 0u;
  _internal_metadata_.Clear();
}

bool PushResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IM.BaseDefine.PushResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string user_token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_token().data(), static_cast<int>(this->user_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "IM.BaseDefine.PushResult.user_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 result_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IM.BaseDefine.PushResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.BaseDefine.PushResult)
  return false;
#undef DO_
}

void PushResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.BaseDefine.PushResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_token = 1;
  if (this->user_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_token().data(), static_cast<int>(this->user_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.BaseDefine.PushResult.user_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_token(), output);
  }

  // uint32 result_code = 2;
  if (this->result_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->result_code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IM.BaseDefine.PushResult)
}

::google::protobuf::uint8* PushResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IM.BaseDefine.PushResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_token = 1;
  if (this->user_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_token().data(), static_cast<int>(this->user_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.BaseDefine.PushResult.user_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_token(), target);
  }

  // uint32 result_code = 2;
  if (this->result_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->result_code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IM.BaseDefine.PushResult)
  return target;
}

size_t PushResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IM.BaseDefine.PushResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string user_token = 1;
  if (this->user_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_token());
  }

  // uint32 result_code = 2;
  if (this->result_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PushResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IM.BaseDefine.PushResult)
  GOOGLE_DCHECK_NE(&from, this);
  const PushResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PushResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IM.BaseDefine.PushResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IM.BaseDefine.PushResult)
    MergeFrom(*source);
  }
}

void PushResult::MergeFrom(const PushResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.BaseDefine.PushResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_token().size() > 0) {

    user_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_token_);
  }
  if (from.result_code() != 0) {
    set_result_code(from.result_code());
  }
}

void PushResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IM.BaseDefine.PushResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PushResult::CopyFrom(const PushResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.BaseDefine.PushResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PushResult::IsInitialized() const {
  return true;
}

void PushResult::Swap(PushResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PushResult::InternalSwap(PushResult* other) {
  using std::swap;
  user_token_.Swap(&other->user_token_);
  swap(result_code_, other->result_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PushResult::GetMetadata() const {
  protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eBaseDefine_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShieldStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShieldStatus::kUserIdFieldNumber;
const int ShieldStatus::kGroupIdFieldNumber;
const int ShieldStatus::kShieldStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShieldStatus::ShieldStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_IM_2eBaseDefine_2eproto::InitDefaultsShieldStatus();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.BaseDefine.ShieldStatus)
}
ShieldStatus::ShieldStatus(const ShieldStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&shield_status_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(shield_status_));
  // @@protoc_insertion_point(copy_constructor:IM.BaseDefine.ShieldStatus)
}

void ShieldStatus::SharedCtor() {
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shield_status_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(shield_status_));
  _cached_size_ = 0;
}

ShieldStatus::~ShieldStatus() {
  // @@protoc_insertion_point(destructor:IM.BaseDefine.ShieldStatus)
  SharedDtor();
}

void ShieldStatus::SharedDtor() {
}

void ShieldStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShieldStatus::descriptor() {
  ::protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eBaseDefine_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShieldStatus& ShieldStatus::default_instance() {
  ::protobuf_IM_2eBaseDefine_2eproto::InitDefaultsShieldStatus();
  return *internal_default_instance();
}

ShieldStatus* ShieldStatus::New(::google::protobuf::Arena* arena) const {
  ShieldStatus* n = new ShieldStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShieldStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.BaseDefine.ShieldStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shield_status_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(shield_status_));
  _internal_metadata_.Clear();
}

bool ShieldStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IM.BaseDefine.ShieldStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 shield_status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shield_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IM.BaseDefine.ShieldStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.BaseDefine.ShieldStatus)
  return false;
#undef DO_
}

void ShieldStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.BaseDefine.ShieldStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->group_id(), output);
  }

  // uint32 shield_status = 3;
  if (this->shield_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->shield_status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IM.BaseDefine.ShieldStatus)
}

::google::protobuf::uint8* ShieldStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IM.BaseDefine.ShieldStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->group_id(), target);
  }

  // uint32 shield_status = 3;
  if (this->shield_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->shield_status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IM.BaseDefine.ShieldStatus)
  return target;
}

size_t ShieldStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IM.BaseDefine.ShieldStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  // uint32 shield_status = 3;
  if (this->shield_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->shield_status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShieldStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IM.BaseDefine.ShieldStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const ShieldStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShieldStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IM.BaseDefine.ShieldStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IM.BaseDefine.ShieldStatus)
    MergeFrom(*source);
  }
}

void ShieldStatus::MergeFrom(const ShieldStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.BaseDefine.ShieldStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
  if (from.shield_status() != 0) {
    set_shield_status(from.shield_status());
  }
}

void ShieldStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IM.BaseDefine.ShieldStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShieldStatus::CopyFrom(const ShieldStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.BaseDefine.ShieldStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShieldStatus::IsInitialized() const {
  return true;
}

void ShieldStatus::Swap(ShieldStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShieldStatus::InternalSwap(ShieldStatus* other) {
  using std::swap;
  swap(user_id_, other->user_id_);
  swap(group_id_, other->group_id_);
  swap(shield_status_, other->shield_status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShieldStatus::GetMetadata() const {
  protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eBaseDefine_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OfflineFileInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OfflineFileInfo::kFromUserIdFieldNumber;
const int OfflineFileInfo::kTaskIdFieldNumber;
const int OfflineFileInfo::kFileNameFieldNumber;
const int OfflineFileInfo::kFileSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OfflineFileInfo::OfflineFileInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_IM_2eBaseDefine_2eproto::InitDefaultsOfflineFileInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.BaseDefine.OfflineFileInfo)
}
OfflineFileInfo::OfflineFileInfo(const OfflineFileInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  task_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.task_id().size() > 0) {
    task_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_id_);
  }
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_name().size() > 0) {
    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  ::memcpy(&from_user_id_, &from.from_user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&file_size_) -
    reinterpret_cast<char*>(&from_user_id_)) + sizeof(file_size_));
  // @@protoc_insertion_point(copy_constructor:IM.BaseDefine.OfflineFileInfo)
}

void OfflineFileInfo::SharedCtor() {
  task_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&from_user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&file_size_) -
      reinterpret_cast<char*>(&from_user_id_)) + sizeof(file_size_));
  _cached_size_ = 0;
}

OfflineFileInfo::~OfflineFileInfo() {
  // @@protoc_insertion_point(destructor:IM.BaseDefine.OfflineFileInfo)
  SharedDtor();
}

void OfflineFileInfo::SharedDtor() {
  task_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OfflineFileInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OfflineFileInfo::descriptor() {
  ::protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eBaseDefine_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OfflineFileInfo& OfflineFileInfo::default_instance() {
  ::protobuf_IM_2eBaseDefine_2eproto::InitDefaultsOfflineFileInfo();
  return *internal_default_instance();
}

OfflineFileInfo* OfflineFileInfo::New(::google::protobuf::Arena* arena) const {
  OfflineFileInfo* n = new OfflineFileInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OfflineFileInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.BaseDefine.OfflineFileInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  task_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&from_user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&file_size_) -
      reinterpret_cast<char*>(&from_user_id_)) + sizeof(file_size_));
  _internal_metadata_.Clear();
}

bool OfflineFileInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IM.BaseDefine.OfflineFileInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 from_user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &from_user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string task_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_task_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->task_id().data(), static_cast<int>(this->task_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "IM.BaseDefine.OfflineFileInfo.task_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string file_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_name().data(), static_cast<int>(this->file_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "IM.BaseDefine.OfflineFileInfo.file_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 file_size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &file_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IM.BaseDefine.OfflineFileInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.BaseDefine.OfflineFileInfo)
  return false;
#undef DO_
}

void OfflineFileInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.BaseDefine.OfflineFileInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 from_user_id = 1;
  if (this->from_user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->from_user_id(), output);
  }

  // string task_id = 2;
  if (this->task_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->task_id().data(), static_cast<int>(this->task_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.BaseDefine.OfflineFileInfo.task_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->task_id(), output);
  }

  // string file_name = 3;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.BaseDefine.OfflineFileInfo.file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->file_name(), output);
  }

  // uint32 file_size = 4;
  if (this->file_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->file_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IM.BaseDefine.OfflineFileInfo)
}

::google::protobuf::uint8* OfflineFileInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IM.BaseDefine.OfflineFileInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 from_user_id = 1;
  if (this->from_user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->from_user_id(), target);
  }

  // string task_id = 2;
  if (this->task_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->task_id().data(), static_cast<int>(this->task_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.BaseDefine.OfflineFileInfo.task_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->task_id(), target);
  }

  // string file_name = 3;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), static_cast<int>(this->file_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.BaseDefine.OfflineFileInfo.file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->file_name(), target);
  }

  // uint32 file_size = 4;
  if (this->file_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->file_size(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IM.BaseDefine.OfflineFileInfo)
  return target;
}

size_t OfflineFileInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IM.BaseDefine.OfflineFileInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string task_id = 2;
  if (this->task_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->task_id());
  }

  // string file_name = 3;
  if (this->file_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_name());
  }

  // uint32 from_user_id = 1;
  if (this->from_user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->from_user_id());
  }

  // uint32 file_size = 4;
  if (this->file_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->file_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OfflineFileInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IM.BaseDefine.OfflineFileInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const OfflineFileInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OfflineFileInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IM.BaseDefine.OfflineFileInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IM.BaseDefine.OfflineFileInfo)
    MergeFrom(*source);
  }
}

void OfflineFileInfo::MergeFrom(const OfflineFileInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.BaseDefine.OfflineFileInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.task_id().size() > 0) {

    task_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.task_id_);
  }
  if (from.file_name().size() > 0) {

    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  if (from.from_user_id() != 0) {
    set_from_user_id(from.from_user_id());
  }
  if (from.file_size() != 0) {
    set_file_size(from.file_size());
  }
}

void OfflineFileInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IM.BaseDefine.OfflineFileInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OfflineFileInfo::CopyFrom(const OfflineFileInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.BaseDefine.OfflineFileInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OfflineFileInfo::IsInitialized() const {
  return true;
}

void OfflineFileInfo::Swap(OfflineFileInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OfflineFileInfo::InternalSwap(OfflineFileInfo* other) {
  using std::swap;
  task_id_.Swap(&other->task_id_);
  file_name_.Swap(&other->file_name_);
  swap(from_user_id_, other->from_user_id_);
  swap(file_size_, other->file_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OfflineFileInfo::GetMetadata() const {
  protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eBaseDefine_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DepartInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DepartInfo::kDeptIdFieldNumber;
const int DepartInfo::kPriorityFieldNumber;
const int DepartInfo::kDeptNameFieldNumber;
const int DepartInfo::kParentDeptIdFieldNumber;
const int DepartInfo::kDeptStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DepartInfo::DepartInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_IM_2eBaseDefine_2eproto::InitDefaultsDepartInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.BaseDefine.DepartInfo)
}
DepartInfo::DepartInfo(const DepartInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dept_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dept_name().size() > 0) {
    dept_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dept_name_);
  }
  ::memcpy(&dept_id_, &from.dept_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&dept_status_) -
    reinterpret_cast<char*>(&dept_id_)) + sizeof(dept_status_));
  // @@protoc_insertion_point(copy_constructor:IM.BaseDefine.DepartInfo)
}

void DepartInfo::SharedCtor() {
  dept_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&dept_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dept_status_) -
      reinterpret_cast<char*>(&dept_id_)) + sizeof(dept_status_));
  _cached_size_ = 0;
}

DepartInfo::~DepartInfo() {
  // @@protoc_insertion_point(destructor:IM.BaseDefine.DepartInfo)
  SharedDtor();
}

void DepartInfo::SharedDtor() {
  dept_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DepartInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DepartInfo::descriptor() {
  ::protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eBaseDefine_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DepartInfo& DepartInfo::default_instance() {
  ::protobuf_IM_2eBaseDefine_2eproto::InitDefaultsDepartInfo();
  return *internal_default_instance();
}

DepartInfo* DepartInfo::New(::google::protobuf::Arena* arena) const {
  DepartInfo* n = new DepartInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DepartInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.BaseDefine.DepartInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dept_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&dept_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dept_status_) -
      reinterpret_cast<char*>(&dept_id_)) + sizeof(dept_status_));
  _internal_metadata_.Clear();
}

bool DepartInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IM.BaseDefine.DepartInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 dept_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dept_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 priority = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &priority_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dept_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dept_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dept_name().data(), static_cast<int>(this->dept_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "IM.BaseDefine.DepartInfo.dept_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 parent_dept_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parent_dept_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IM.BaseDefine.DepartmentStatusType dept_status = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_dept_status(static_cast< ::IM::BaseDefine::DepartmentStatusType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IM.BaseDefine.DepartInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.BaseDefine.DepartInfo)
  return false;
#undef DO_
}

void DepartInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.BaseDefine.DepartInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 dept_id = 1;
  if (this->dept_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->dept_id(), output);
  }

  // uint32 priority = 2;
  if (this->priority() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->priority(), output);
  }

  // string dept_name = 3;
  if (this->dept_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dept_name().data(), static_cast<int>(this->dept_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.BaseDefine.DepartInfo.dept_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->dept_name(), output);
  }

  // uint32 parent_dept_id = 4;
  if (this->parent_dept_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->parent_dept_id(), output);
  }

  // .IM.BaseDefine.DepartmentStatusType dept_status = 5;
  if (this->dept_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->dept_status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IM.BaseDefine.DepartInfo)
}

::google::protobuf::uint8* DepartInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IM.BaseDefine.DepartInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 dept_id = 1;
  if (this->dept_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->dept_id(), target);
  }

  // uint32 priority = 2;
  if (this->priority() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->priority(), target);
  }

  // string dept_name = 3;
  if (this->dept_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dept_name().data(), static_cast<int>(this->dept_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.BaseDefine.DepartInfo.dept_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->dept_name(), target);
  }

  // uint32 parent_dept_id = 4;
  if (this->parent_dept_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->parent_dept_id(), target);
  }

  // .IM.BaseDefine.DepartmentStatusType dept_status = 5;
  if (this->dept_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->dept_status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IM.BaseDefine.DepartInfo)
  return target;
}

size_t DepartInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IM.BaseDefine.DepartInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string dept_name = 3;
  if (this->dept_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dept_name());
  }

  // uint32 dept_id = 1;
  if (this->dept_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dept_id());
  }

  // uint32 priority = 2;
  if (this->priority() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->priority());
  }

  // uint32 parent_dept_id = 4;
  if (this->parent_dept_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parent_dept_id());
  }

  // .IM.BaseDefine.DepartmentStatusType dept_status = 5;
  if (this->dept_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->dept_status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DepartInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IM.BaseDefine.DepartInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const DepartInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DepartInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IM.BaseDefine.DepartInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IM.BaseDefine.DepartInfo)
    MergeFrom(*source);
  }
}

void DepartInfo::MergeFrom(const DepartInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.BaseDefine.DepartInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dept_name().size() > 0) {

    dept_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dept_name_);
  }
  if (from.dept_id() != 0) {
    set_dept_id(from.dept_id());
  }
  if (from.priority() != 0) {
    set_priority(from.priority());
  }
  if (from.parent_dept_id() != 0) {
    set_parent_dept_id(from.parent_dept_id());
  }
  if (from.dept_status() != 0) {
    set_dept_status(from.dept_status());
  }
}

void DepartInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IM.BaseDefine.DepartInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DepartInfo::CopyFrom(const DepartInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.BaseDefine.DepartInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DepartInfo::IsInitialized() const {
  return true;
}

void DepartInfo::Swap(DepartInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DepartInfo::InternalSwap(DepartInfo* other) {
  using std::swap;
  dept_name_.Swap(&other->dept_name_);
  swap(dept_id_, other->dept_id_);
  swap(priority_, other->priority_);
  swap(parent_dept_id_, other->parent_dept_id_);
  swap(dept_status_, other->dept_status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DepartInfo::GetMetadata() const {
  protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eBaseDefine_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PushShieldStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PushShieldStatus::kUserIdFieldNumber;
const int PushShieldStatus::kShieldStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PushShieldStatus::PushShieldStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_IM_2eBaseDefine_2eproto::InitDefaultsPushShieldStatus();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.BaseDefine.PushShieldStatus)
}
PushShieldStatus::PushShieldStatus(const PushShieldStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&shield_status_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(shield_status_));
  // @@protoc_insertion_point(copy_constructor:IM.BaseDefine.PushShieldStatus)
}

void PushShieldStatus::SharedCtor() {
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shield_status_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(shield_status_));
  _cached_size_ = 0;
}

PushShieldStatus::~PushShieldStatus() {
  // @@protoc_insertion_point(destructor:IM.BaseDefine.PushShieldStatus)
  SharedDtor();
}

void PushShieldStatus::SharedDtor() {
}

void PushShieldStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PushShieldStatus::descriptor() {
  ::protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eBaseDefine_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PushShieldStatus& PushShieldStatus::default_instance() {
  ::protobuf_IM_2eBaseDefine_2eproto::InitDefaultsPushShieldStatus();
  return *internal_default_instance();
}

PushShieldStatus* PushShieldStatus::New(::google::protobuf::Arena* arena) const {
  PushShieldStatus* n = new PushShieldStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PushShieldStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.BaseDefine.PushShieldStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shield_status_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(shield_status_));
  _internal_metadata_.Clear();
}

bool PushShieldStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IM.BaseDefine.PushShieldStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 shield_status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shield_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IM.BaseDefine.PushShieldStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.BaseDefine.PushShieldStatus)
  return false;
#undef DO_
}

void PushShieldStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.BaseDefine.PushShieldStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // uint32 shield_status = 2;
  if (this->shield_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->shield_status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IM.BaseDefine.PushShieldStatus)
}

::google::protobuf::uint8* PushShieldStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IM.BaseDefine.PushShieldStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_id(), target);
  }

  // uint32 shield_status = 2;
  if (this->shield_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->shield_status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IM.BaseDefine.PushShieldStatus)
  return target;
}

size_t PushShieldStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IM.BaseDefine.PushShieldStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // uint32 shield_status = 2;
  if (this->shield_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->shield_status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PushShieldStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IM.BaseDefine.PushShieldStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const PushShieldStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PushShieldStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IM.BaseDefine.PushShieldStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IM.BaseDefine.PushShieldStatus)
    MergeFrom(*source);
  }
}

void PushShieldStatus::MergeFrom(const PushShieldStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.BaseDefine.PushShieldStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.shield_status() != 0) {
    set_shield_status(from.shield_status());
  }
}

void PushShieldStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IM.BaseDefine.PushShieldStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PushShieldStatus::CopyFrom(const PushShieldStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.BaseDefine.PushShieldStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PushShieldStatus::IsInitialized() const {
  return true;
}

void PushShieldStatus::Swap(PushShieldStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PushShieldStatus::InternalSwap(PushShieldStatus* other) {
  using std::swap;
  swap(user_id_, other->user_id_);
  swap(shield_status_, other->shield_status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PushShieldStatus::GetMetadata() const {
  protobuf_IM_2eBaseDefine_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IM_2eBaseDefine_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace BaseDefine
}  // namespace IM

// @@protoc_insertion_point(global_scope)
