// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IM.Message.proto

#ifndef PROTOBUF_IM_2eMessage_2eproto__INCLUDED
#define PROTOBUF_IM_2eMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include "IM.BaseDefine.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_IM_2eMessage_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[14];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void InitDefaultsIMMsgDataImpl();
void InitDefaultsIMMsgData();
void InitDefaultsIMMsgDataAckImpl();
void InitDefaultsIMMsgDataAck();
void InitDefaultsIMMsgDataReadAckImpl();
void InitDefaultsIMMsgDataReadAck();
void InitDefaultsIMMsgDataReadNotifyImpl();
void InitDefaultsIMMsgDataReadNotify();
void InitDefaultsIMClientTimeReqImpl();
void InitDefaultsIMClientTimeReq();
void InitDefaultsIMClientTimeRspImpl();
void InitDefaultsIMClientTimeRsp();
void InitDefaultsIMUnreadMsgCntReqImpl();
void InitDefaultsIMUnreadMsgCntReq();
void InitDefaultsIMUnreadMsgCntRspImpl();
void InitDefaultsIMUnreadMsgCntRsp();
void InitDefaultsIMGetMsgListReqImpl();
void InitDefaultsIMGetMsgListReq();
void InitDefaultsIMGetMsgListRspImpl();
void InitDefaultsIMGetMsgListRsp();
void InitDefaultsIMGetLatestMsgIdReqImpl();
void InitDefaultsIMGetLatestMsgIdReq();
void InitDefaultsIMGetLatestMsgIdRspImpl();
void InitDefaultsIMGetLatestMsgIdRsp();
void InitDefaultsIMGetMsgByIdReqImpl();
void InitDefaultsIMGetMsgByIdReq();
void InitDefaultsIMGetMsgByIdRspImpl();
void InitDefaultsIMGetMsgByIdRsp();
inline void InitDefaults() {
  InitDefaultsIMMsgData();
  InitDefaultsIMMsgDataAck();
  InitDefaultsIMMsgDataReadAck();
  InitDefaultsIMMsgDataReadNotify();
  InitDefaultsIMClientTimeReq();
  InitDefaultsIMClientTimeRsp();
  InitDefaultsIMUnreadMsgCntReq();
  InitDefaultsIMUnreadMsgCntRsp();
  InitDefaultsIMGetMsgListReq();
  InitDefaultsIMGetMsgListRsp();
  InitDefaultsIMGetLatestMsgIdReq();
  InitDefaultsIMGetLatestMsgIdRsp();
  InitDefaultsIMGetMsgByIdReq();
  InitDefaultsIMGetMsgByIdRsp();
}
}  // namespace protobuf_IM_2eMessage_2eproto
namespace IM {
namespace Message {
class IMClientTimeReq;
class IMClientTimeReqDefaultTypeInternal;
extern IMClientTimeReqDefaultTypeInternal _IMClientTimeReq_default_instance_;
class IMClientTimeRsp;
class IMClientTimeRspDefaultTypeInternal;
extern IMClientTimeRspDefaultTypeInternal _IMClientTimeRsp_default_instance_;
class IMGetLatestMsgIdReq;
class IMGetLatestMsgIdReqDefaultTypeInternal;
extern IMGetLatestMsgIdReqDefaultTypeInternal _IMGetLatestMsgIdReq_default_instance_;
class IMGetLatestMsgIdRsp;
class IMGetLatestMsgIdRspDefaultTypeInternal;
extern IMGetLatestMsgIdRspDefaultTypeInternal _IMGetLatestMsgIdRsp_default_instance_;
class IMGetMsgByIdReq;
class IMGetMsgByIdReqDefaultTypeInternal;
extern IMGetMsgByIdReqDefaultTypeInternal _IMGetMsgByIdReq_default_instance_;
class IMGetMsgByIdRsp;
class IMGetMsgByIdRspDefaultTypeInternal;
extern IMGetMsgByIdRspDefaultTypeInternal _IMGetMsgByIdRsp_default_instance_;
class IMGetMsgListReq;
class IMGetMsgListReqDefaultTypeInternal;
extern IMGetMsgListReqDefaultTypeInternal _IMGetMsgListReq_default_instance_;
class IMGetMsgListRsp;
class IMGetMsgListRspDefaultTypeInternal;
extern IMGetMsgListRspDefaultTypeInternal _IMGetMsgListRsp_default_instance_;
class IMMsgData;
class IMMsgDataDefaultTypeInternal;
extern IMMsgDataDefaultTypeInternal _IMMsgData_default_instance_;
class IMMsgDataAck;
class IMMsgDataAckDefaultTypeInternal;
extern IMMsgDataAckDefaultTypeInternal _IMMsgDataAck_default_instance_;
class IMMsgDataReadAck;
class IMMsgDataReadAckDefaultTypeInternal;
extern IMMsgDataReadAckDefaultTypeInternal _IMMsgDataReadAck_default_instance_;
class IMMsgDataReadNotify;
class IMMsgDataReadNotifyDefaultTypeInternal;
extern IMMsgDataReadNotifyDefaultTypeInternal _IMMsgDataReadNotify_default_instance_;
class IMUnreadMsgCntReq;
class IMUnreadMsgCntReqDefaultTypeInternal;
extern IMUnreadMsgCntReqDefaultTypeInternal _IMUnreadMsgCntReq_default_instance_;
class IMUnreadMsgCntRsp;
class IMUnreadMsgCntRspDefaultTypeInternal;
extern IMUnreadMsgCntRspDefaultTypeInternal _IMUnreadMsgCntRsp_default_instance_;
}  // namespace Message
}  // namespace IM
namespace IM {
namespace Message {

// ===================================================================

class IMMsgData : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:IM.Message.IMMsgData) */ {
 public:
  IMMsgData();
  virtual ~IMMsgData();

  IMMsgData(const IMMsgData& from);

  inline IMMsgData& operator=(const IMMsgData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IMMsgData(IMMsgData&& from) noexcept
    : IMMsgData() {
    *this = ::std::move(from);
  }

  inline IMMsgData& operator=(IMMsgData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const IMMsgData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IMMsgData* internal_default_instance() {
    return reinterpret_cast<const IMMsgData*>(
               &_IMMsgData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(IMMsgData* other);
  friend void swap(IMMsgData& a, IMMsgData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IMMsgData* New() const PROTOBUF_FINAL { return New(NULL); }

  IMMsgData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const IMMsgData& from);
  void MergeFrom(const IMMsgData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IMMsgData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes msg_data = 6;
  void clear_msg_data();
  static const int kMsgDataFieldNumber = 6;
  const ::std::string& msg_data() const;
  void set_msg_data(const ::std::string& value);
  #if LANG_CXX11
  void set_msg_data(::std::string&& value);
  #endif
  void set_msg_data(const char* value);
  void set_msg_data(const void* value, size_t size);
  ::std::string* mutable_msg_data();
  ::std::string* release_msg_data();
  void set_allocated_msg_data(::std::string* msg_data);

  // bytes attach_data = 20;
  void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  const ::std::string& attach_data() const;
  void set_attach_data(const ::std::string& value);
  #if LANG_CXX11
  void set_attach_data(::std::string&& value);
  #endif
  void set_attach_data(const char* value);
  void set_attach_data(const void* value, size_t size);
  ::std::string* mutable_attach_data();
  ::std::string* release_attach_data();
  void set_allocated_attach_data(::std::string* attach_data);

  // uint32 from_user_id = 1;
  void clear_from_user_id();
  static const int kFromUserIdFieldNumber = 1;
  ::google::protobuf::uint32 from_user_id() const;
  void set_from_user_id(::google::protobuf::uint32 value);

  // uint32 to_session_id = 2;
  void clear_to_session_id();
  static const int kToSessionIdFieldNumber = 2;
  ::google::protobuf::uint32 to_session_id() const;
  void set_to_session_id(::google::protobuf::uint32 value);

  // uint32 msg_id = 3;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 3;
  ::google::protobuf::uint32 msg_id() const;
  void set_msg_id(::google::protobuf::uint32 value);

  // uint32 create_time = 4;
  void clear_create_time();
  static const int kCreateTimeFieldNumber = 4;
  ::google::protobuf::uint32 create_time() const;
  void set_create_time(::google::protobuf::uint32 value);

  // .IM.BaseDefine.MsgType msg_type = 5;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 5;
  ::IM::BaseDefine::MsgType msg_type() const;
  void set_msg_type(::IM::BaseDefine::MsgType value);

  // @@protoc_insertion_point(class_scope:IM.Message.IMMsgData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_data_;
  ::google::protobuf::internal::ArenaStringPtr attach_data_;
  ::google::protobuf::uint32 from_user_id_;
  ::google::protobuf::uint32 to_session_id_;
  ::google::protobuf::uint32 msg_id_;
  ::google::protobuf::uint32 create_time_;
  int msg_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_IM_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_IM_2eMessage_2eproto::InitDefaultsIMMsgDataImpl();
};
// -------------------------------------------------------------------

class IMMsgDataAck : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:IM.Message.IMMsgDataAck) */ {
 public:
  IMMsgDataAck();
  virtual ~IMMsgDataAck();

  IMMsgDataAck(const IMMsgDataAck& from);

  inline IMMsgDataAck& operator=(const IMMsgDataAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IMMsgDataAck(IMMsgDataAck&& from) noexcept
    : IMMsgDataAck() {
    *this = ::std::move(from);
  }

  inline IMMsgDataAck& operator=(IMMsgDataAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const IMMsgDataAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IMMsgDataAck* internal_default_instance() {
    return reinterpret_cast<const IMMsgDataAck*>(
               &_IMMsgDataAck_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(IMMsgDataAck* other);
  friend void swap(IMMsgDataAck& a, IMMsgDataAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IMMsgDataAck* New() const PROTOBUF_FINAL { return New(NULL); }

  IMMsgDataAck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const IMMsgDataAck& from);
  void MergeFrom(const IMMsgDataAck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IMMsgDataAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // uint32 session_id = 2;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 2;
  ::google::protobuf::uint32 session_id() const;
  void set_session_id(::google::protobuf::uint32 value);

  // uint32 msg_id = 3;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 3;
  ::google::protobuf::uint32 msg_id() const;
  void set_msg_id(::google::protobuf::uint32 value);

  // .IM.BaseDefine.SessionType session_type = 4;
  void clear_session_type();
  static const int kSessionTypeFieldNumber = 4;
  ::IM::BaseDefine::SessionType session_type() const;
  void set_session_type(::IM::BaseDefine::SessionType value);

  // @@protoc_insertion_point(class_scope:IM.Message.IMMsgDataAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 msg_id_;
  int session_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_IM_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_IM_2eMessage_2eproto::InitDefaultsIMMsgDataAckImpl();
};
// -------------------------------------------------------------------

class IMMsgDataReadAck : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:IM.Message.IMMsgDataReadAck) */ {
 public:
  IMMsgDataReadAck();
  virtual ~IMMsgDataReadAck();

  IMMsgDataReadAck(const IMMsgDataReadAck& from);

  inline IMMsgDataReadAck& operator=(const IMMsgDataReadAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IMMsgDataReadAck(IMMsgDataReadAck&& from) noexcept
    : IMMsgDataReadAck() {
    *this = ::std::move(from);
  }

  inline IMMsgDataReadAck& operator=(IMMsgDataReadAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const IMMsgDataReadAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IMMsgDataReadAck* internal_default_instance() {
    return reinterpret_cast<const IMMsgDataReadAck*>(
               &_IMMsgDataReadAck_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(IMMsgDataReadAck* other);
  friend void swap(IMMsgDataReadAck& a, IMMsgDataReadAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IMMsgDataReadAck* New() const PROTOBUF_FINAL { return New(NULL); }

  IMMsgDataReadAck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const IMMsgDataReadAck& from);
  void MergeFrom(const IMMsgDataReadAck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IMMsgDataReadAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // uint32 session_id = 2;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 2;
  ::google::protobuf::uint32 session_id() const;
  void set_session_id(::google::protobuf::uint32 value);

  // uint32 msg_id = 3;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 3;
  ::google::protobuf::uint32 msg_id() const;
  void set_msg_id(::google::protobuf::uint32 value);

  // .IM.BaseDefine.SessionType session_type = 4;
  void clear_session_type();
  static const int kSessionTypeFieldNumber = 4;
  ::IM::BaseDefine::SessionType session_type() const;
  void set_session_type(::IM::BaseDefine::SessionType value);

  // @@protoc_insertion_point(class_scope:IM.Message.IMMsgDataReadAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 msg_id_;
  int session_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_IM_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_IM_2eMessage_2eproto::InitDefaultsIMMsgDataReadAckImpl();
};
// -------------------------------------------------------------------

class IMMsgDataReadNotify : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:IM.Message.IMMsgDataReadNotify) */ {
 public:
  IMMsgDataReadNotify();
  virtual ~IMMsgDataReadNotify();

  IMMsgDataReadNotify(const IMMsgDataReadNotify& from);

  inline IMMsgDataReadNotify& operator=(const IMMsgDataReadNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IMMsgDataReadNotify(IMMsgDataReadNotify&& from) noexcept
    : IMMsgDataReadNotify() {
    *this = ::std::move(from);
  }

  inline IMMsgDataReadNotify& operator=(IMMsgDataReadNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const IMMsgDataReadNotify& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IMMsgDataReadNotify* internal_default_instance() {
    return reinterpret_cast<const IMMsgDataReadNotify*>(
               &_IMMsgDataReadNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(IMMsgDataReadNotify* other);
  friend void swap(IMMsgDataReadNotify& a, IMMsgDataReadNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IMMsgDataReadNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  IMMsgDataReadNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const IMMsgDataReadNotify& from);
  void MergeFrom(const IMMsgDataReadNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IMMsgDataReadNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // uint32 session_id = 2;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 2;
  ::google::protobuf::uint32 session_id() const;
  void set_session_id(::google::protobuf::uint32 value);

  // uint32 msg_id = 3;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 3;
  ::google::protobuf::uint32 msg_id() const;
  void set_msg_id(::google::protobuf::uint32 value);

  // .IM.BaseDefine.SessionType session_type = 4;
  void clear_session_type();
  static const int kSessionTypeFieldNumber = 4;
  ::IM::BaseDefine::SessionType session_type() const;
  void set_session_type(::IM::BaseDefine::SessionType value);

  // @@protoc_insertion_point(class_scope:IM.Message.IMMsgDataReadNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 msg_id_;
  int session_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_IM_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_IM_2eMessage_2eproto::InitDefaultsIMMsgDataReadNotifyImpl();
};
// -------------------------------------------------------------------

class IMClientTimeReq : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:IM.Message.IMClientTimeReq) */ {
 public:
  IMClientTimeReq();
  virtual ~IMClientTimeReq();

  IMClientTimeReq(const IMClientTimeReq& from);

  inline IMClientTimeReq& operator=(const IMClientTimeReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IMClientTimeReq(IMClientTimeReq&& from) noexcept
    : IMClientTimeReq() {
    *this = ::std::move(from);
  }

  inline IMClientTimeReq& operator=(IMClientTimeReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const IMClientTimeReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IMClientTimeReq* internal_default_instance() {
    return reinterpret_cast<const IMClientTimeReq*>(
               &_IMClientTimeReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(IMClientTimeReq* other);
  friend void swap(IMClientTimeReq& a, IMClientTimeReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IMClientTimeReq* New() const PROTOBUF_FINAL { return New(NULL); }

  IMClientTimeReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const IMClientTimeReq& from);
  void MergeFrom(const IMClientTimeReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IMClientTimeReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IM.Message.IMClientTimeReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_IM_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_IM_2eMessage_2eproto::InitDefaultsIMClientTimeReqImpl();
};
// -------------------------------------------------------------------

class IMClientTimeRsp : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:IM.Message.IMClientTimeRsp) */ {
 public:
  IMClientTimeRsp();
  virtual ~IMClientTimeRsp();

  IMClientTimeRsp(const IMClientTimeRsp& from);

  inline IMClientTimeRsp& operator=(const IMClientTimeRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IMClientTimeRsp(IMClientTimeRsp&& from) noexcept
    : IMClientTimeRsp() {
    *this = ::std::move(from);
  }

  inline IMClientTimeRsp& operator=(IMClientTimeRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const IMClientTimeRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IMClientTimeRsp* internal_default_instance() {
    return reinterpret_cast<const IMClientTimeRsp*>(
               &_IMClientTimeRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(IMClientTimeRsp* other);
  friend void swap(IMClientTimeRsp& a, IMClientTimeRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IMClientTimeRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  IMClientTimeRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const IMClientTimeRsp& from);
  void MergeFrom(const IMClientTimeRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IMClientTimeRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 server_time = 1;
  void clear_server_time();
  static const int kServerTimeFieldNumber = 1;
  ::google::protobuf::uint32 server_time() const;
  void set_server_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:IM.Message.IMClientTimeRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::uint32 server_time_;
  mutable int _cached_size_;
  friend struct ::protobuf_IM_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_IM_2eMessage_2eproto::InitDefaultsIMClientTimeRspImpl();
};
// -------------------------------------------------------------------

class IMUnreadMsgCntReq : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:IM.Message.IMUnreadMsgCntReq) */ {
 public:
  IMUnreadMsgCntReq();
  virtual ~IMUnreadMsgCntReq();

  IMUnreadMsgCntReq(const IMUnreadMsgCntReq& from);

  inline IMUnreadMsgCntReq& operator=(const IMUnreadMsgCntReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IMUnreadMsgCntReq(IMUnreadMsgCntReq&& from) noexcept
    : IMUnreadMsgCntReq() {
    *this = ::std::move(from);
  }

  inline IMUnreadMsgCntReq& operator=(IMUnreadMsgCntReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const IMUnreadMsgCntReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IMUnreadMsgCntReq* internal_default_instance() {
    return reinterpret_cast<const IMUnreadMsgCntReq*>(
               &_IMUnreadMsgCntReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(IMUnreadMsgCntReq* other);
  friend void swap(IMUnreadMsgCntReq& a, IMUnreadMsgCntReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IMUnreadMsgCntReq* New() const PROTOBUF_FINAL { return New(NULL); }

  IMUnreadMsgCntReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const IMUnreadMsgCntReq& from);
  void MergeFrom(const IMUnreadMsgCntReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IMUnreadMsgCntReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes attach_data = 20;
  void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  const ::std::string& attach_data() const;
  void set_attach_data(const ::std::string& value);
  #if LANG_CXX11
  void set_attach_data(::std::string&& value);
  #endif
  void set_attach_data(const char* value);
  void set_attach_data(const void* value, size_t size);
  ::std::string* mutable_attach_data();
  ::std::string* release_attach_data();
  void set_allocated_attach_data(::std::string* attach_data);

  // uint32 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:IM.Message.IMUnreadMsgCntReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr attach_data_;
  ::google::protobuf::uint32 user_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_IM_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_IM_2eMessage_2eproto::InitDefaultsIMUnreadMsgCntReqImpl();
};
// -------------------------------------------------------------------

class IMUnreadMsgCntRsp : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:IM.Message.IMUnreadMsgCntRsp) */ {
 public:
  IMUnreadMsgCntRsp();
  virtual ~IMUnreadMsgCntRsp();

  IMUnreadMsgCntRsp(const IMUnreadMsgCntRsp& from);

  inline IMUnreadMsgCntRsp& operator=(const IMUnreadMsgCntRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IMUnreadMsgCntRsp(IMUnreadMsgCntRsp&& from) noexcept
    : IMUnreadMsgCntRsp() {
    *this = ::std::move(from);
  }

  inline IMUnreadMsgCntRsp& operator=(IMUnreadMsgCntRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const IMUnreadMsgCntRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IMUnreadMsgCntRsp* internal_default_instance() {
    return reinterpret_cast<const IMUnreadMsgCntRsp*>(
               &_IMUnreadMsgCntRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(IMUnreadMsgCntRsp* other);
  friend void swap(IMUnreadMsgCntRsp& a, IMUnreadMsgCntRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IMUnreadMsgCntRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  IMUnreadMsgCntRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const IMUnreadMsgCntRsp& from);
  void MergeFrom(const IMUnreadMsgCntRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IMUnreadMsgCntRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .IM.BaseDefine.UnreadInfo unreadinfo_list = 3;
  int unreadinfo_list_size() const;
  void clear_unreadinfo_list();
  static const int kUnreadinfoListFieldNumber = 3;
  const ::IM::BaseDefine::UnreadInfo& unreadinfo_list(int index) const;
  ::IM::BaseDefine::UnreadInfo* mutable_unreadinfo_list(int index);
  ::IM::BaseDefine::UnreadInfo* add_unreadinfo_list();
  ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::UnreadInfo >*
      mutable_unreadinfo_list();
  const ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::UnreadInfo >&
      unreadinfo_list() const;

  // bytes attach_data = 20;
  void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  const ::std::string& attach_data() const;
  void set_attach_data(const ::std::string& value);
  #if LANG_CXX11
  void set_attach_data(::std::string&& value);
  #endif
  void set_attach_data(const char* value);
  void set_attach_data(const void* value, size_t size);
  ::std::string* mutable_attach_data();
  ::std::string* release_attach_data();
  void set_allocated_attach_data(::std::string* attach_data);

  // uint32 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // uint32 total_cnt = 2;
  void clear_total_cnt();
  static const int kTotalCntFieldNumber = 2;
  ::google::protobuf::uint32 total_cnt() const;
  void set_total_cnt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:IM.Message.IMUnreadMsgCntRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::UnreadInfo > unreadinfo_list_;
  ::google::protobuf::internal::ArenaStringPtr attach_data_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 total_cnt_;
  mutable int _cached_size_;
  friend struct ::protobuf_IM_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_IM_2eMessage_2eproto::InitDefaultsIMUnreadMsgCntRspImpl();
};
// -------------------------------------------------------------------

class IMGetMsgListReq : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:IM.Message.IMGetMsgListReq) */ {
 public:
  IMGetMsgListReq();
  virtual ~IMGetMsgListReq();

  IMGetMsgListReq(const IMGetMsgListReq& from);

  inline IMGetMsgListReq& operator=(const IMGetMsgListReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IMGetMsgListReq(IMGetMsgListReq&& from) noexcept
    : IMGetMsgListReq() {
    *this = ::std::move(from);
  }

  inline IMGetMsgListReq& operator=(IMGetMsgListReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const IMGetMsgListReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IMGetMsgListReq* internal_default_instance() {
    return reinterpret_cast<const IMGetMsgListReq*>(
               &_IMGetMsgListReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(IMGetMsgListReq* other);
  friend void swap(IMGetMsgListReq& a, IMGetMsgListReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IMGetMsgListReq* New() const PROTOBUF_FINAL { return New(NULL); }

  IMGetMsgListReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const IMGetMsgListReq& from);
  void MergeFrom(const IMGetMsgListReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IMGetMsgListReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes attach_data = 20;
  void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  const ::std::string& attach_data() const;
  void set_attach_data(const ::std::string& value);
  #if LANG_CXX11
  void set_attach_data(::std::string&& value);
  #endif
  void set_attach_data(const char* value);
  void set_attach_data(const void* value, size_t size);
  ::std::string* mutable_attach_data();
  ::std::string* release_attach_data();
  void set_allocated_attach_data(::std::string* attach_data);

  // uint32 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // .IM.BaseDefine.SessionType session_type = 2;
  void clear_session_type();
  static const int kSessionTypeFieldNumber = 2;
  ::IM::BaseDefine::SessionType session_type() const;
  void set_session_type(::IM::BaseDefine::SessionType value);

  // uint32 session_id = 3;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 3;
  ::google::protobuf::uint32 session_id() const;
  void set_session_id(::google::protobuf::uint32 value);

  // uint32 msg_id_begin = 4;
  void clear_msg_id_begin();
  static const int kMsgIdBeginFieldNumber = 4;
  ::google::protobuf::uint32 msg_id_begin() const;
  void set_msg_id_begin(::google::protobuf::uint32 value);

  // uint32 msg_cnt = 5;
  void clear_msg_cnt();
  static const int kMsgCntFieldNumber = 5;
  ::google::protobuf::uint32 msg_cnt() const;
  void set_msg_cnt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:IM.Message.IMGetMsgListReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr attach_data_;
  ::google::protobuf::uint32 user_id_;
  int session_type_;
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 msg_id_begin_;
  ::google::protobuf::uint32 msg_cnt_;
  mutable int _cached_size_;
  friend struct ::protobuf_IM_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_IM_2eMessage_2eproto::InitDefaultsIMGetMsgListReqImpl();
};
// -------------------------------------------------------------------

class IMGetMsgListRsp : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:IM.Message.IMGetMsgListRsp) */ {
 public:
  IMGetMsgListRsp();
  virtual ~IMGetMsgListRsp();

  IMGetMsgListRsp(const IMGetMsgListRsp& from);

  inline IMGetMsgListRsp& operator=(const IMGetMsgListRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IMGetMsgListRsp(IMGetMsgListRsp&& from) noexcept
    : IMGetMsgListRsp() {
    *this = ::std::move(from);
  }

  inline IMGetMsgListRsp& operator=(IMGetMsgListRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const IMGetMsgListRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IMGetMsgListRsp* internal_default_instance() {
    return reinterpret_cast<const IMGetMsgListRsp*>(
               &_IMGetMsgListRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(IMGetMsgListRsp* other);
  friend void swap(IMGetMsgListRsp& a, IMGetMsgListRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IMGetMsgListRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  IMGetMsgListRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const IMGetMsgListRsp& from);
  void MergeFrom(const IMGetMsgListRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IMGetMsgListRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .IM.BaseDefine.MsgInfo msg_list = 5;
  int msg_list_size() const;
  void clear_msg_list();
  static const int kMsgListFieldNumber = 5;
  const ::IM::BaseDefine::MsgInfo& msg_list(int index) const;
  ::IM::BaseDefine::MsgInfo* mutable_msg_list(int index);
  ::IM::BaseDefine::MsgInfo* add_msg_list();
  ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::MsgInfo >*
      mutable_msg_list();
  const ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::MsgInfo >&
      msg_list() const;

  // bytes attach_data = 20;
  void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  const ::std::string& attach_data() const;
  void set_attach_data(const ::std::string& value);
  #if LANG_CXX11
  void set_attach_data(::std::string&& value);
  #endif
  void set_attach_data(const char* value);
  void set_attach_data(const void* value, size_t size);
  ::std::string* mutable_attach_data();
  ::std::string* release_attach_data();
  void set_allocated_attach_data(::std::string* attach_data);

  // uint32 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // .IM.BaseDefine.SessionType session_type = 2;
  void clear_session_type();
  static const int kSessionTypeFieldNumber = 2;
  ::IM::BaseDefine::SessionType session_type() const;
  void set_session_type(::IM::BaseDefine::SessionType value);

  // uint32 session_id = 3;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 3;
  ::google::protobuf::uint32 session_id() const;
  void set_session_id(::google::protobuf::uint32 value);

  // uint32 msg_id_begin = 4;
  void clear_msg_id_begin();
  static const int kMsgIdBeginFieldNumber = 4;
  ::google::protobuf::uint32 msg_id_begin() const;
  void set_msg_id_begin(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:IM.Message.IMGetMsgListRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::MsgInfo > msg_list_;
  ::google::protobuf::internal::ArenaStringPtr attach_data_;
  ::google::protobuf::uint32 user_id_;
  int session_type_;
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 msg_id_begin_;
  mutable int _cached_size_;
  friend struct ::protobuf_IM_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_IM_2eMessage_2eproto::InitDefaultsIMGetMsgListRspImpl();
};
// -------------------------------------------------------------------

class IMGetLatestMsgIdReq : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:IM.Message.IMGetLatestMsgIdReq) */ {
 public:
  IMGetLatestMsgIdReq();
  virtual ~IMGetLatestMsgIdReq();

  IMGetLatestMsgIdReq(const IMGetLatestMsgIdReq& from);

  inline IMGetLatestMsgIdReq& operator=(const IMGetLatestMsgIdReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IMGetLatestMsgIdReq(IMGetLatestMsgIdReq&& from) noexcept
    : IMGetLatestMsgIdReq() {
    *this = ::std::move(from);
  }

  inline IMGetLatestMsgIdReq& operator=(IMGetLatestMsgIdReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const IMGetLatestMsgIdReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IMGetLatestMsgIdReq* internal_default_instance() {
    return reinterpret_cast<const IMGetLatestMsgIdReq*>(
               &_IMGetLatestMsgIdReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(IMGetLatestMsgIdReq* other);
  friend void swap(IMGetLatestMsgIdReq& a, IMGetLatestMsgIdReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IMGetLatestMsgIdReq* New() const PROTOBUF_FINAL { return New(NULL); }

  IMGetLatestMsgIdReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const IMGetLatestMsgIdReq& from);
  void MergeFrom(const IMGetLatestMsgIdReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IMGetLatestMsgIdReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes attach_data = 20;
  void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  const ::std::string& attach_data() const;
  void set_attach_data(const ::std::string& value);
  #if LANG_CXX11
  void set_attach_data(::std::string&& value);
  #endif
  void set_attach_data(const char* value);
  void set_attach_data(const void* value, size_t size);
  ::std::string* mutable_attach_data();
  ::std::string* release_attach_data();
  void set_allocated_attach_data(::std::string* attach_data);

  // uint32 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // .IM.BaseDefine.SessionType session_type = 2;
  void clear_session_type();
  static const int kSessionTypeFieldNumber = 2;
  ::IM::BaseDefine::SessionType session_type() const;
  void set_session_type(::IM::BaseDefine::SessionType value);

  // uint32 session_id = 3;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 3;
  ::google::protobuf::uint32 session_id() const;
  void set_session_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:IM.Message.IMGetLatestMsgIdReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr attach_data_;
  ::google::protobuf::uint32 user_id_;
  int session_type_;
  ::google::protobuf::uint32 session_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_IM_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_IM_2eMessage_2eproto::InitDefaultsIMGetLatestMsgIdReqImpl();
};
// -------------------------------------------------------------------

class IMGetLatestMsgIdRsp : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:IM.Message.IMGetLatestMsgIdRsp) */ {
 public:
  IMGetLatestMsgIdRsp();
  virtual ~IMGetLatestMsgIdRsp();

  IMGetLatestMsgIdRsp(const IMGetLatestMsgIdRsp& from);

  inline IMGetLatestMsgIdRsp& operator=(const IMGetLatestMsgIdRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IMGetLatestMsgIdRsp(IMGetLatestMsgIdRsp&& from) noexcept
    : IMGetLatestMsgIdRsp() {
    *this = ::std::move(from);
  }

  inline IMGetLatestMsgIdRsp& operator=(IMGetLatestMsgIdRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const IMGetLatestMsgIdRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IMGetLatestMsgIdRsp* internal_default_instance() {
    return reinterpret_cast<const IMGetLatestMsgIdRsp*>(
               &_IMGetLatestMsgIdRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(IMGetLatestMsgIdRsp* other);
  friend void swap(IMGetLatestMsgIdRsp& a, IMGetLatestMsgIdRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IMGetLatestMsgIdRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  IMGetLatestMsgIdRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const IMGetLatestMsgIdRsp& from);
  void MergeFrom(const IMGetLatestMsgIdRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IMGetLatestMsgIdRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes attach_data = 20;
  void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  const ::std::string& attach_data() const;
  void set_attach_data(const ::std::string& value);
  #if LANG_CXX11
  void set_attach_data(::std::string&& value);
  #endif
  void set_attach_data(const char* value);
  void set_attach_data(const void* value, size_t size);
  ::std::string* mutable_attach_data();
  ::std::string* release_attach_data();
  void set_allocated_attach_data(::std::string* attach_data);

  // uint32 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // .IM.BaseDefine.SessionType session_type = 2;
  void clear_session_type();
  static const int kSessionTypeFieldNumber = 2;
  ::IM::BaseDefine::SessionType session_type() const;
  void set_session_type(::IM::BaseDefine::SessionType value);

  // uint32 session_id = 3;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 3;
  ::google::protobuf::uint32 session_id() const;
  void set_session_id(::google::protobuf::uint32 value);

  // uint32 latest_msg_id = 4;
  void clear_latest_msg_id();
  static const int kLatestMsgIdFieldNumber = 4;
  ::google::protobuf::uint32 latest_msg_id() const;
  void set_latest_msg_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:IM.Message.IMGetLatestMsgIdRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr attach_data_;
  ::google::protobuf::uint32 user_id_;
  int session_type_;
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 latest_msg_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_IM_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_IM_2eMessage_2eproto::InitDefaultsIMGetLatestMsgIdRspImpl();
};
// -------------------------------------------------------------------

class IMGetMsgByIdReq : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:IM.Message.IMGetMsgByIdReq) */ {
 public:
  IMGetMsgByIdReq();
  virtual ~IMGetMsgByIdReq();

  IMGetMsgByIdReq(const IMGetMsgByIdReq& from);

  inline IMGetMsgByIdReq& operator=(const IMGetMsgByIdReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IMGetMsgByIdReq(IMGetMsgByIdReq&& from) noexcept
    : IMGetMsgByIdReq() {
    *this = ::std::move(from);
  }

  inline IMGetMsgByIdReq& operator=(IMGetMsgByIdReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const IMGetMsgByIdReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IMGetMsgByIdReq* internal_default_instance() {
    return reinterpret_cast<const IMGetMsgByIdReq*>(
               &_IMGetMsgByIdReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(IMGetMsgByIdReq* other);
  friend void swap(IMGetMsgByIdReq& a, IMGetMsgByIdReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IMGetMsgByIdReq* New() const PROTOBUF_FINAL { return New(NULL); }

  IMGetMsgByIdReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const IMGetMsgByIdReq& from);
  void MergeFrom(const IMGetMsgByIdReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IMGetMsgByIdReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 msg_id_list = 4;
  int msg_id_list_size() const;
  void clear_msg_id_list();
  static const int kMsgIdListFieldNumber = 4;
  ::google::protobuf::uint32 msg_id_list(int index) const;
  void set_msg_id_list(int index, ::google::protobuf::uint32 value);
  void add_msg_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      msg_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_msg_id_list();

  // bytes attach_data = 20;
  void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  const ::std::string& attach_data() const;
  void set_attach_data(const ::std::string& value);
  #if LANG_CXX11
  void set_attach_data(::std::string&& value);
  #endif
  void set_attach_data(const char* value);
  void set_attach_data(const void* value, size_t size);
  ::std::string* mutable_attach_data();
  ::std::string* release_attach_data();
  void set_allocated_attach_data(::std::string* attach_data);

  // uint32 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // .IM.BaseDefine.SessionType session_type = 2;
  void clear_session_type();
  static const int kSessionTypeFieldNumber = 2;
  ::IM::BaseDefine::SessionType session_type() const;
  void set_session_type(::IM::BaseDefine::SessionType value);

  // uint32 session_id = 3;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 3;
  ::google::protobuf::uint32 session_id() const;
  void set_session_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:IM.Message.IMGetMsgByIdReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > msg_id_list_;
  mutable int _msg_id_list_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr attach_data_;
  ::google::protobuf::uint32 user_id_;
  int session_type_;
  ::google::protobuf::uint32 session_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_IM_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_IM_2eMessage_2eproto::InitDefaultsIMGetMsgByIdReqImpl();
};
// -------------------------------------------------------------------

class IMGetMsgByIdRsp : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:IM.Message.IMGetMsgByIdRsp) */ {
 public:
  IMGetMsgByIdRsp();
  virtual ~IMGetMsgByIdRsp();

  IMGetMsgByIdRsp(const IMGetMsgByIdRsp& from);

  inline IMGetMsgByIdRsp& operator=(const IMGetMsgByIdRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IMGetMsgByIdRsp(IMGetMsgByIdRsp&& from) noexcept
    : IMGetMsgByIdRsp() {
    *this = ::std::move(from);
  }

  inline IMGetMsgByIdRsp& operator=(IMGetMsgByIdRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const IMGetMsgByIdRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IMGetMsgByIdRsp* internal_default_instance() {
    return reinterpret_cast<const IMGetMsgByIdRsp*>(
               &_IMGetMsgByIdRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(IMGetMsgByIdRsp* other);
  friend void swap(IMGetMsgByIdRsp& a, IMGetMsgByIdRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IMGetMsgByIdRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  IMGetMsgByIdRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const IMGetMsgByIdRsp& from);
  void MergeFrom(const IMGetMsgByIdRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IMGetMsgByIdRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .IM.BaseDefine.MsgInfo msg_list = 4;
  int msg_list_size() const;
  void clear_msg_list();
  static const int kMsgListFieldNumber = 4;
  const ::IM::BaseDefine::MsgInfo& msg_list(int index) const;
  ::IM::BaseDefine::MsgInfo* mutable_msg_list(int index);
  ::IM::BaseDefine::MsgInfo* add_msg_list();
  ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::MsgInfo >*
      mutable_msg_list();
  const ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::MsgInfo >&
      msg_list() const;

  // bytes attach_data = 20;
  void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  const ::std::string& attach_data() const;
  void set_attach_data(const ::std::string& value);
  #if LANG_CXX11
  void set_attach_data(::std::string&& value);
  #endif
  void set_attach_data(const char* value);
  void set_attach_data(const void* value, size_t size);
  ::std::string* mutable_attach_data();
  ::std::string* release_attach_data();
  void set_allocated_attach_data(::std::string* attach_data);

  // uint32 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // .IM.BaseDefine.SessionType session_type = 2;
  void clear_session_type();
  static const int kSessionTypeFieldNumber = 2;
  ::IM::BaseDefine::SessionType session_type() const;
  void set_session_type(::IM::BaseDefine::SessionType value);

  // uint32 session_id = 3;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 3;
  ::google::protobuf::uint32 session_id() const;
  void set_session_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:IM.Message.IMGetMsgByIdRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::MsgInfo > msg_list_;
  ::google::protobuf::internal::ArenaStringPtr attach_data_;
  ::google::protobuf::uint32 user_id_;
  int session_type_;
  ::google::protobuf::uint32 session_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_IM_2eMessage_2eproto::TableStruct;
  friend void ::protobuf_IM_2eMessage_2eproto::InitDefaultsIMGetMsgByIdRspImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// IMMsgData

// uint32 from_user_id = 1;
inline void IMMsgData::clear_from_user_id() {
  from_user_id_ = 0u;
}
inline ::google::protobuf::uint32 IMMsgData::from_user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgData.from_user_id)
  return from_user_id_;
}
inline void IMMsgData::set_from_user_id(::google::protobuf::uint32 value) {
  
  from_user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgData.from_user_id)
}

// uint32 to_session_id = 2;
inline void IMMsgData::clear_to_session_id() {
  to_session_id_ = 0u;
}
inline ::google::protobuf::uint32 IMMsgData::to_session_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgData.to_session_id)
  return to_session_id_;
}
inline void IMMsgData::set_to_session_id(::google::protobuf::uint32 value) {
  
  to_session_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgData.to_session_id)
}

// uint32 msg_id = 3;
inline void IMMsgData::clear_msg_id() {
  msg_id_ = 0u;
}
inline ::google::protobuf::uint32 IMMsgData::msg_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgData.msg_id)
  return msg_id_;
}
inline void IMMsgData::set_msg_id(::google::protobuf::uint32 value) {
  
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgData.msg_id)
}

// uint32 create_time = 4;
inline void IMMsgData::clear_create_time() {
  create_time_ = 0u;
}
inline ::google::protobuf::uint32 IMMsgData::create_time() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgData.create_time)
  return create_time_;
}
inline void IMMsgData::set_create_time(::google::protobuf::uint32 value) {
  
  create_time_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgData.create_time)
}

// .IM.BaseDefine.MsgType msg_type = 5;
inline void IMMsgData::clear_msg_type() {
  msg_type_ = 0;
}
inline ::IM::BaseDefine::MsgType IMMsgData::msg_type() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgData.msg_type)
  return static_cast< ::IM::BaseDefine::MsgType >(msg_type_);
}
inline void IMMsgData::set_msg_type(::IM::BaseDefine::MsgType value) {
  
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgData.msg_type)
}

// bytes msg_data = 6;
inline void IMMsgData::clear_msg_data() {
  msg_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IMMsgData::msg_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgData.msg_data)
  return msg_data_.GetNoArena();
}
inline void IMMsgData::set_msg_data(const ::std::string& value) {
  
  msg_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgData.msg_data)
}
#if LANG_CXX11
inline void IMMsgData::set_msg_data(::std::string&& value) {
  
  msg_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IM.Message.IMMsgData.msg_data)
}
#endif
inline void IMMsgData::set_msg_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Message.IMMsgData.msg_data)
}
inline void IMMsgData::set_msg_data(const void* value, size_t size) {
  
  msg_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMMsgData.msg_data)
}
inline ::std::string* IMMsgData::mutable_msg_data() {
  
  // @@protoc_insertion_point(field_mutable:IM.Message.IMMsgData.msg_data)
  return msg_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IMMsgData::release_msg_data() {
  // @@protoc_insertion_point(field_release:IM.Message.IMMsgData.msg_data)
  
  return msg_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMMsgData::set_allocated_msg_data(::std::string* msg_data) {
  if (msg_data != NULL) {
    
  } else {
    
  }
  msg_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_data);
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMMsgData.msg_data)
}

// bytes attach_data = 20;
inline void IMMsgData::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IMMsgData::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgData.attach_data)
  return attach_data_.GetNoArena();
}
inline void IMMsgData::set_attach_data(const ::std::string& value) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgData.attach_data)
}
#if LANG_CXX11
inline void IMMsgData::set_attach_data(::std::string&& value) {
  
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IM.Message.IMMsgData.attach_data)
}
#endif
inline void IMMsgData::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Message.IMMsgData.attach_data)
}
inline void IMMsgData::set_attach_data(const void* value, size_t size) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMMsgData.attach_data)
}
inline ::std::string* IMMsgData::mutable_attach_data() {
  
  // @@protoc_insertion_point(field_mutable:IM.Message.IMMsgData.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IMMsgData::release_attach_data() {
  // @@protoc_insertion_point(field_release:IM.Message.IMMsgData.attach_data)
  
  return attach_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMMsgData::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    
  } else {
    
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMMsgData.attach_data)
}

// -------------------------------------------------------------------

// IMMsgDataAck

// uint32 user_id = 1;
inline void IMMsgDataAck::clear_user_id() {
  user_id_ = 0u;
}
inline ::google::protobuf::uint32 IMMsgDataAck::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataAck.user_id)
  return user_id_;
}
inline void IMMsgDataAck::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataAck.user_id)
}

// uint32 session_id = 2;
inline void IMMsgDataAck::clear_session_id() {
  session_id_ = 0u;
}
inline ::google::protobuf::uint32 IMMsgDataAck::session_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataAck.session_id)
  return session_id_;
}
inline void IMMsgDataAck::set_session_id(::google::protobuf::uint32 value) {
  
  session_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataAck.session_id)
}

// uint32 msg_id = 3;
inline void IMMsgDataAck::clear_msg_id() {
  msg_id_ = 0u;
}
inline ::google::protobuf::uint32 IMMsgDataAck::msg_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataAck.msg_id)
  return msg_id_;
}
inline void IMMsgDataAck::set_msg_id(::google::protobuf::uint32 value) {
  
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataAck.msg_id)
}

// .IM.BaseDefine.SessionType session_type = 4;
inline void IMMsgDataAck::clear_session_type() {
  session_type_ = 0;
}
inline ::IM::BaseDefine::SessionType IMMsgDataAck::session_type() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataAck.session_type)
  return static_cast< ::IM::BaseDefine::SessionType >(session_type_);
}
inline void IMMsgDataAck::set_session_type(::IM::BaseDefine::SessionType value) {
  
  session_type_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataAck.session_type)
}

// -------------------------------------------------------------------

// IMMsgDataReadAck

// uint32 user_id = 1;
inline void IMMsgDataReadAck::clear_user_id() {
  user_id_ = 0u;
}
inline ::google::protobuf::uint32 IMMsgDataReadAck::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataReadAck.user_id)
  return user_id_;
}
inline void IMMsgDataReadAck::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataReadAck.user_id)
}

// uint32 session_id = 2;
inline void IMMsgDataReadAck::clear_session_id() {
  session_id_ = 0u;
}
inline ::google::protobuf::uint32 IMMsgDataReadAck::session_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataReadAck.session_id)
  return session_id_;
}
inline void IMMsgDataReadAck::set_session_id(::google::protobuf::uint32 value) {
  
  session_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataReadAck.session_id)
}

// uint32 msg_id = 3;
inline void IMMsgDataReadAck::clear_msg_id() {
  msg_id_ = 0u;
}
inline ::google::protobuf::uint32 IMMsgDataReadAck::msg_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataReadAck.msg_id)
  return msg_id_;
}
inline void IMMsgDataReadAck::set_msg_id(::google::protobuf::uint32 value) {
  
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataReadAck.msg_id)
}

// .IM.BaseDefine.SessionType session_type = 4;
inline void IMMsgDataReadAck::clear_session_type() {
  session_type_ = 0;
}
inline ::IM::BaseDefine::SessionType IMMsgDataReadAck::session_type() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataReadAck.session_type)
  return static_cast< ::IM::BaseDefine::SessionType >(session_type_);
}
inline void IMMsgDataReadAck::set_session_type(::IM::BaseDefine::SessionType value) {
  
  session_type_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataReadAck.session_type)
}

// -------------------------------------------------------------------

// IMMsgDataReadNotify

// uint32 user_id = 1;
inline void IMMsgDataReadNotify::clear_user_id() {
  user_id_ = 0u;
}
inline ::google::protobuf::uint32 IMMsgDataReadNotify::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataReadNotify.user_id)
  return user_id_;
}
inline void IMMsgDataReadNotify::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataReadNotify.user_id)
}

// uint32 session_id = 2;
inline void IMMsgDataReadNotify::clear_session_id() {
  session_id_ = 0u;
}
inline ::google::protobuf::uint32 IMMsgDataReadNotify::session_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataReadNotify.session_id)
  return session_id_;
}
inline void IMMsgDataReadNotify::set_session_id(::google::protobuf::uint32 value) {
  
  session_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataReadNotify.session_id)
}

// uint32 msg_id = 3;
inline void IMMsgDataReadNotify::clear_msg_id() {
  msg_id_ = 0u;
}
inline ::google::protobuf::uint32 IMMsgDataReadNotify::msg_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataReadNotify.msg_id)
  return msg_id_;
}
inline void IMMsgDataReadNotify::set_msg_id(::google::protobuf::uint32 value) {
  
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataReadNotify.msg_id)
}

// .IM.BaseDefine.SessionType session_type = 4;
inline void IMMsgDataReadNotify::clear_session_type() {
  session_type_ = 0;
}
inline ::IM::BaseDefine::SessionType IMMsgDataReadNotify::session_type() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMMsgDataReadNotify.session_type)
  return static_cast< ::IM::BaseDefine::SessionType >(session_type_);
}
inline void IMMsgDataReadNotify::set_session_type(::IM::BaseDefine::SessionType value) {
  
  session_type_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMMsgDataReadNotify.session_type)
}

// -------------------------------------------------------------------

// IMClientTimeReq

// -------------------------------------------------------------------

// IMClientTimeRsp

// uint32 server_time = 1;
inline void IMClientTimeRsp::clear_server_time() {
  server_time_ = 0u;
}
inline ::google::protobuf::uint32 IMClientTimeRsp::server_time() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMClientTimeRsp.server_time)
  return server_time_;
}
inline void IMClientTimeRsp::set_server_time(::google::protobuf::uint32 value) {
  
  server_time_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMClientTimeRsp.server_time)
}

// -------------------------------------------------------------------

// IMUnreadMsgCntReq

// uint32 user_id = 1;
inline void IMUnreadMsgCntReq::clear_user_id() {
  user_id_ = 0u;
}
inline ::google::protobuf::uint32 IMUnreadMsgCntReq::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMUnreadMsgCntReq.user_id)
  return user_id_;
}
inline void IMUnreadMsgCntReq::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMUnreadMsgCntReq.user_id)
}

// bytes attach_data = 20;
inline void IMUnreadMsgCntReq::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IMUnreadMsgCntReq::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMUnreadMsgCntReq.attach_data)
  return attach_data_.GetNoArena();
}
inline void IMUnreadMsgCntReq::set_attach_data(const ::std::string& value) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Message.IMUnreadMsgCntReq.attach_data)
}
#if LANG_CXX11
inline void IMUnreadMsgCntReq::set_attach_data(::std::string&& value) {
  
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IM.Message.IMUnreadMsgCntReq.attach_data)
}
#endif
inline void IMUnreadMsgCntReq::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Message.IMUnreadMsgCntReq.attach_data)
}
inline void IMUnreadMsgCntReq::set_attach_data(const void* value, size_t size) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMUnreadMsgCntReq.attach_data)
}
inline ::std::string* IMUnreadMsgCntReq::mutable_attach_data() {
  
  // @@protoc_insertion_point(field_mutable:IM.Message.IMUnreadMsgCntReq.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IMUnreadMsgCntReq::release_attach_data() {
  // @@protoc_insertion_point(field_release:IM.Message.IMUnreadMsgCntReq.attach_data)
  
  return attach_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMUnreadMsgCntReq::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    
  } else {
    
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMUnreadMsgCntReq.attach_data)
}

// -------------------------------------------------------------------

// IMUnreadMsgCntRsp

// uint32 user_id = 1;
inline void IMUnreadMsgCntRsp::clear_user_id() {
  user_id_ = 0u;
}
inline ::google::protobuf::uint32 IMUnreadMsgCntRsp::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMUnreadMsgCntRsp.user_id)
  return user_id_;
}
inline void IMUnreadMsgCntRsp::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMUnreadMsgCntRsp.user_id)
}

// uint32 total_cnt = 2;
inline void IMUnreadMsgCntRsp::clear_total_cnt() {
  total_cnt_ = 0u;
}
inline ::google::protobuf::uint32 IMUnreadMsgCntRsp::total_cnt() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMUnreadMsgCntRsp.total_cnt)
  return total_cnt_;
}
inline void IMUnreadMsgCntRsp::set_total_cnt(::google::protobuf::uint32 value) {
  
  total_cnt_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMUnreadMsgCntRsp.total_cnt)
}

// repeated .IM.BaseDefine.UnreadInfo unreadinfo_list = 3;
inline int IMUnreadMsgCntRsp::unreadinfo_list_size() const {
  return unreadinfo_list_.size();
}
inline const ::IM::BaseDefine::UnreadInfo& IMUnreadMsgCntRsp::unreadinfo_list(int index) const {
  // @@protoc_insertion_point(field_get:IM.Message.IMUnreadMsgCntRsp.unreadinfo_list)
  return unreadinfo_list_.Get(index);
}
inline ::IM::BaseDefine::UnreadInfo* IMUnreadMsgCntRsp::mutable_unreadinfo_list(int index) {
  // @@protoc_insertion_point(field_mutable:IM.Message.IMUnreadMsgCntRsp.unreadinfo_list)
  return unreadinfo_list_.Mutable(index);
}
inline ::IM::BaseDefine::UnreadInfo* IMUnreadMsgCntRsp::add_unreadinfo_list() {
  // @@protoc_insertion_point(field_add:IM.Message.IMUnreadMsgCntRsp.unreadinfo_list)
  return unreadinfo_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::UnreadInfo >*
IMUnreadMsgCntRsp::mutable_unreadinfo_list() {
  // @@protoc_insertion_point(field_mutable_list:IM.Message.IMUnreadMsgCntRsp.unreadinfo_list)
  return &unreadinfo_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::UnreadInfo >&
IMUnreadMsgCntRsp::unreadinfo_list() const {
  // @@protoc_insertion_point(field_list:IM.Message.IMUnreadMsgCntRsp.unreadinfo_list)
  return unreadinfo_list_;
}

// bytes attach_data = 20;
inline void IMUnreadMsgCntRsp::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IMUnreadMsgCntRsp::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMUnreadMsgCntRsp.attach_data)
  return attach_data_.GetNoArena();
}
inline void IMUnreadMsgCntRsp::set_attach_data(const ::std::string& value) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Message.IMUnreadMsgCntRsp.attach_data)
}
#if LANG_CXX11
inline void IMUnreadMsgCntRsp::set_attach_data(::std::string&& value) {
  
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IM.Message.IMUnreadMsgCntRsp.attach_data)
}
#endif
inline void IMUnreadMsgCntRsp::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Message.IMUnreadMsgCntRsp.attach_data)
}
inline void IMUnreadMsgCntRsp::set_attach_data(const void* value, size_t size) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMUnreadMsgCntRsp.attach_data)
}
inline ::std::string* IMUnreadMsgCntRsp::mutable_attach_data() {
  
  // @@protoc_insertion_point(field_mutable:IM.Message.IMUnreadMsgCntRsp.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IMUnreadMsgCntRsp::release_attach_data() {
  // @@protoc_insertion_point(field_release:IM.Message.IMUnreadMsgCntRsp.attach_data)
  
  return attach_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMUnreadMsgCntRsp::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    
  } else {
    
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMUnreadMsgCntRsp.attach_data)
}

// -------------------------------------------------------------------

// IMGetMsgListReq

// uint32 user_id = 1;
inline void IMGetMsgListReq::clear_user_id() {
  user_id_ = 0u;
}
inline ::google::protobuf::uint32 IMGetMsgListReq::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgListReq.user_id)
  return user_id_;
}
inline void IMGetMsgListReq::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgListReq.user_id)
}

// .IM.BaseDefine.SessionType session_type = 2;
inline void IMGetMsgListReq::clear_session_type() {
  session_type_ = 0;
}
inline ::IM::BaseDefine::SessionType IMGetMsgListReq::session_type() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgListReq.session_type)
  return static_cast< ::IM::BaseDefine::SessionType >(session_type_);
}
inline void IMGetMsgListReq::set_session_type(::IM::BaseDefine::SessionType value) {
  
  session_type_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgListReq.session_type)
}

// uint32 session_id = 3;
inline void IMGetMsgListReq::clear_session_id() {
  session_id_ = 0u;
}
inline ::google::protobuf::uint32 IMGetMsgListReq::session_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgListReq.session_id)
  return session_id_;
}
inline void IMGetMsgListReq::set_session_id(::google::protobuf::uint32 value) {
  
  session_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgListReq.session_id)
}

// uint32 msg_id_begin = 4;
inline void IMGetMsgListReq::clear_msg_id_begin() {
  msg_id_begin_ = 0u;
}
inline ::google::protobuf::uint32 IMGetMsgListReq::msg_id_begin() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgListReq.msg_id_begin)
  return msg_id_begin_;
}
inline void IMGetMsgListReq::set_msg_id_begin(::google::protobuf::uint32 value) {
  
  msg_id_begin_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgListReq.msg_id_begin)
}

// uint32 msg_cnt = 5;
inline void IMGetMsgListReq::clear_msg_cnt() {
  msg_cnt_ = 0u;
}
inline ::google::protobuf::uint32 IMGetMsgListReq::msg_cnt() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgListReq.msg_cnt)
  return msg_cnt_;
}
inline void IMGetMsgListReq::set_msg_cnt(::google::protobuf::uint32 value) {
  
  msg_cnt_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgListReq.msg_cnt)
}

// bytes attach_data = 20;
inline void IMGetMsgListReq::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IMGetMsgListReq::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgListReq.attach_data)
  return attach_data_.GetNoArena();
}
inline void IMGetMsgListReq::set_attach_data(const ::std::string& value) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgListReq.attach_data)
}
#if LANG_CXX11
inline void IMGetMsgListReq::set_attach_data(::std::string&& value) {
  
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IM.Message.IMGetMsgListReq.attach_data)
}
#endif
inline void IMGetMsgListReq::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Message.IMGetMsgListReq.attach_data)
}
inline void IMGetMsgListReq::set_attach_data(const void* value, size_t size) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMGetMsgListReq.attach_data)
}
inline ::std::string* IMGetMsgListReq::mutable_attach_data() {
  
  // @@protoc_insertion_point(field_mutable:IM.Message.IMGetMsgListReq.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IMGetMsgListReq::release_attach_data() {
  // @@protoc_insertion_point(field_release:IM.Message.IMGetMsgListReq.attach_data)
  
  return attach_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMGetMsgListReq::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    
  } else {
    
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMGetMsgListReq.attach_data)
}

// -------------------------------------------------------------------

// IMGetMsgListRsp

// uint32 user_id = 1;
inline void IMGetMsgListRsp::clear_user_id() {
  user_id_ = 0u;
}
inline ::google::protobuf::uint32 IMGetMsgListRsp::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgListRsp.user_id)
  return user_id_;
}
inline void IMGetMsgListRsp::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgListRsp.user_id)
}

// .IM.BaseDefine.SessionType session_type = 2;
inline void IMGetMsgListRsp::clear_session_type() {
  session_type_ = 0;
}
inline ::IM::BaseDefine::SessionType IMGetMsgListRsp::session_type() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgListRsp.session_type)
  return static_cast< ::IM::BaseDefine::SessionType >(session_type_);
}
inline void IMGetMsgListRsp::set_session_type(::IM::BaseDefine::SessionType value) {
  
  session_type_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgListRsp.session_type)
}

// uint32 session_id = 3;
inline void IMGetMsgListRsp::clear_session_id() {
  session_id_ = 0u;
}
inline ::google::protobuf::uint32 IMGetMsgListRsp::session_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgListRsp.session_id)
  return session_id_;
}
inline void IMGetMsgListRsp::set_session_id(::google::protobuf::uint32 value) {
  
  session_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgListRsp.session_id)
}

// uint32 msg_id_begin = 4;
inline void IMGetMsgListRsp::clear_msg_id_begin() {
  msg_id_begin_ = 0u;
}
inline ::google::protobuf::uint32 IMGetMsgListRsp::msg_id_begin() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgListRsp.msg_id_begin)
  return msg_id_begin_;
}
inline void IMGetMsgListRsp::set_msg_id_begin(::google::protobuf::uint32 value) {
  
  msg_id_begin_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgListRsp.msg_id_begin)
}

// repeated .IM.BaseDefine.MsgInfo msg_list = 5;
inline int IMGetMsgListRsp::msg_list_size() const {
  return msg_list_.size();
}
inline const ::IM::BaseDefine::MsgInfo& IMGetMsgListRsp::msg_list(int index) const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgListRsp.msg_list)
  return msg_list_.Get(index);
}
inline ::IM::BaseDefine::MsgInfo* IMGetMsgListRsp::mutable_msg_list(int index) {
  // @@protoc_insertion_point(field_mutable:IM.Message.IMGetMsgListRsp.msg_list)
  return msg_list_.Mutable(index);
}
inline ::IM::BaseDefine::MsgInfo* IMGetMsgListRsp::add_msg_list() {
  // @@protoc_insertion_point(field_add:IM.Message.IMGetMsgListRsp.msg_list)
  return msg_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::MsgInfo >*
IMGetMsgListRsp::mutable_msg_list() {
  // @@protoc_insertion_point(field_mutable_list:IM.Message.IMGetMsgListRsp.msg_list)
  return &msg_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::MsgInfo >&
IMGetMsgListRsp::msg_list() const {
  // @@protoc_insertion_point(field_list:IM.Message.IMGetMsgListRsp.msg_list)
  return msg_list_;
}

// bytes attach_data = 20;
inline void IMGetMsgListRsp::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IMGetMsgListRsp::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgListRsp.attach_data)
  return attach_data_.GetNoArena();
}
inline void IMGetMsgListRsp::set_attach_data(const ::std::string& value) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgListRsp.attach_data)
}
#if LANG_CXX11
inline void IMGetMsgListRsp::set_attach_data(::std::string&& value) {
  
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IM.Message.IMGetMsgListRsp.attach_data)
}
#endif
inline void IMGetMsgListRsp::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Message.IMGetMsgListRsp.attach_data)
}
inline void IMGetMsgListRsp::set_attach_data(const void* value, size_t size) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMGetMsgListRsp.attach_data)
}
inline ::std::string* IMGetMsgListRsp::mutable_attach_data() {
  
  // @@protoc_insertion_point(field_mutable:IM.Message.IMGetMsgListRsp.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IMGetMsgListRsp::release_attach_data() {
  // @@protoc_insertion_point(field_release:IM.Message.IMGetMsgListRsp.attach_data)
  
  return attach_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMGetMsgListRsp::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    
  } else {
    
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMGetMsgListRsp.attach_data)
}

// -------------------------------------------------------------------

// IMGetLatestMsgIdReq

// uint32 user_id = 1;
inline void IMGetLatestMsgIdReq::clear_user_id() {
  user_id_ = 0u;
}
inline ::google::protobuf::uint32 IMGetLatestMsgIdReq::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetLatestMsgIdReq.user_id)
  return user_id_;
}
inline void IMGetLatestMsgIdReq::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetLatestMsgIdReq.user_id)
}

// .IM.BaseDefine.SessionType session_type = 2;
inline void IMGetLatestMsgIdReq::clear_session_type() {
  session_type_ = 0;
}
inline ::IM::BaseDefine::SessionType IMGetLatestMsgIdReq::session_type() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetLatestMsgIdReq.session_type)
  return static_cast< ::IM::BaseDefine::SessionType >(session_type_);
}
inline void IMGetLatestMsgIdReq::set_session_type(::IM::BaseDefine::SessionType value) {
  
  session_type_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetLatestMsgIdReq.session_type)
}

// uint32 session_id = 3;
inline void IMGetLatestMsgIdReq::clear_session_id() {
  session_id_ = 0u;
}
inline ::google::protobuf::uint32 IMGetLatestMsgIdReq::session_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetLatestMsgIdReq.session_id)
  return session_id_;
}
inline void IMGetLatestMsgIdReq::set_session_id(::google::protobuf::uint32 value) {
  
  session_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetLatestMsgIdReq.session_id)
}

// bytes attach_data = 20;
inline void IMGetLatestMsgIdReq::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IMGetLatestMsgIdReq::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetLatestMsgIdReq.attach_data)
  return attach_data_.GetNoArena();
}
inline void IMGetLatestMsgIdReq::set_attach_data(const ::std::string& value) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Message.IMGetLatestMsgIdReq.attach_data)
}
#if LANG_CXX11
inline void IMGetLatestMsgIdReq::set_attach_data(::std::string&& value) {
  
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IM.Message.IMGetLatestMsgIdReq.attach_data)
}
#endif
inline void IMGetLatestMsgIdReq::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Message.IMGetLatestMsgIdReq.attach_data)
}
inline void IMGetLatestMsgIdReq::set_attach_data(const void* value, size_t size) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMGetLatestMsgIdReq.attach_data)
}
inline ::std::string* IMGetLatestMsgIdReq::mutable_attach_data() {
  
  // @@protoc_insertion_point(field_mutable:IM.Message.IMGetLatestMsgIdReq.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IMGetLatestMsgIdReq::release_attach_data() {
  // @@protoc_insertion_point(field_release:IM.Message.IMGetLatestMsgIdReq.attach_data)
  
  return attach_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMGetLatestMsgIdReq::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    
  } else {
    
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMGetLatestMsgIdReq.attach_data)
}

// -------------------------------------------------------------------

// IMGetLatestMsgIdRsp

// uint32 user_id = 1;
inline void IMGetLatestMsgIdRsp::clear_user_id() {
  user_id_ = 0u;
}
inline ::google::protobuf::uint32 IMGetLatestMsgIdRsp::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetLatestMsgIdRsp.user_id)
  return user_id_;
}
inline void IMGetLatestMsgIdRsp::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetLatestMsgIdRsp.user_id)
}

// .IM.BaseDefine.SessionType session_type = 2;
inline void IMGetLatestMsgIdRsp::clear_session_type() {
  session_type_ = 0;
}
inline ::IM::BaseDefine::SessionType IMGetLatestMsgIdRsp::session_type() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetLatestMsgIdRsp.session_type)
  return static_cast< ::IM::BaseDefine::SessionType >(session_type_);
}
inline void IMGetLatestMsgIdRsp::set_session_type(::IM::BaseDefine::SessionType value) {
  
  session_type_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetLatestMsgIdRsp.session_type)
}

// uint32 session_id = 3;
inline void IMGetLatestMsgIdRsp::clear_session_id() {
  session_id_ = 0u;
}
inline ::google::protobuf::uint32 IMGetLatestMsgIdRsp::session_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetLatestMsgIdRsp.session_id)
  return session_id_;
}
inline void IMGetLatestMsgIdRsp::set_session_id(::google::protobuf::uint32 value) {
  
  session_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetLatestMsgIdRsp.session_id)
}

// uint32 latest_msg_id = 4;
inline void IMGetLatestMsgIdRsp::clear_latest_msg_id() {
  latest_msg_id_ = 0u;
}
inline ::google::protobuf::uint32 IMGetLatestMsgIdRsp::latest_msg_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetLatestMsgIdRsp.latest_msg_id)
  return latest_msg_id_;
}
inline void IMGetLatestMsgIdRsp::set_latest_msg_id(::google::protobuf::uint32 value) {
  
  latest_msg_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetLatestMsgIdRsp.latest_msg_id)
}

// bytes attach_data = 20;
inline void IMGetLatestMsgIdRsp::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IMGetLatestMsgIdRsp::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetLatestMsgIdRsp.attach_data)
  return attach_data_.GetNoArena();
}
inline void IMGetLatestMsgIdRsp::set_attach_data(const ::std::string& value) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Message.IMGetLatestMsgIdRsp.attach_data)
}
#if LANG_CXX11
inline void IMGetLatestMsgIdRsp::set_attach_data(::std::string&& value) {
  
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IM.Message.IMGetLatestMsgIdRsp.attach_data)
}
#endif
inline void IMGetLatestMsgIdRsp::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Message.IMGetLatestMsgIdRsp.attach_data)
}
inline void IMGetLatestMsgIdRsp::set_attach_data(const void* value, size_t size) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMGetLatestMsgIdRsp.attach_data)
}
inline ::std::string* IMGetLatestMsgIdRsp::mutable_attach_data() {
  
  // @@protoc_insertion_point(field_mutable:IM.Message.IMGetLatestMsgIdRsp.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IMGetLatestMsgIdRsp::release_attach_data() {
  // @@protoc_insertion_point(field_release:IM.Message.IMGetLatestMsgIdRsp.attach_data)
  
  return attach_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMGetLatestMsgIdRsp::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    
  } else {
    
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMGetLatestMsgIdRsp.attach_data)
}

// -------------------------------------------------------------------

// IMGetMsgByIdReq

// uint32 user_id = 1;
inline void IMGetMsgByIdReq::clear_user_id() {
  user_id_ = 0u;
}
inline ::google::protobuf::uint32 IMGetMsgByIdReq::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgByIdReq.user_id)
  return user_id_;
}
inline void IMGetMsgByIdReq::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgByIdReq.user_id)
}

// .IM.BaseDefine.SessionType session_type = 2;
inline void IMGetMsgByIdReq::clear_session_type() {
  session_type_ = 0;
}
inline ::IM::BaseDefine::SessionType IMGetMsgByIdReq::session_type() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgByIdReq.session_type)
  return static_cast< ::IM::BaseDefine::SessionType >(session_type_);
}
inline void IMGetMsgByIdReq::set_session_type(::IM::BaseDefine::SessionType value) {
  
  session_type_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgByIdReq.session_type)
}

// uint32 session_id = 3;
inline void IMGetMsgByIdReq::clear_session_id() {
  session_id_ = 0u;
}
inline ::google::protobuf::uint32 IMGetMsgByIdReq::session_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgByIdReq.session_id)
  return session_id_;
}
inline void IMGetMsgByIdReq::set_session_id(::google::protobuf::uint32 value) {
  
  session_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgByIdReq.session_id)
}

// repeated uint32 msg_id_list = 4;
inline int IMGetMsgByIdReq::msg_id_list_size() const {
  return msg_id_list_.size();
}
inline void IMGetMsgByIdReq::clear_msg_id_list() {
  msg_id_list_.Clear();
}
inline ::google::protobuf::uint32 IMGetMsgByIdReq::msg_id_list(int index) const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgByIdReq.msg_id_list)
  return msg_id_list_.Get(index);
}
inline void IMGetMsgByIdReq::set_msg_id_list(int index, ::google::protobuf::uint32 value) {
  msg_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgByIdReq.msg_id_list)
}
inline void IMGetMsgByIdReq::add_msg_id_list(::google::protobuf::uint32 value) {
  msg_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:IM.Message.IMGetMsgByIdReq.msg_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
IMGetMsgByIdReq::msg_id_list() const {
  // @@protoc_insertion_point(field_list:IM.Message.IMGetMsgByIdReq.msg_id_list)
  return msg_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
IMGetMsgByIdReq::mutable_msg_id_list() {
  // @@protoc_insertion_point(field_mutable_list:IM.Message.IMGetMsgByIdReq.msg_id_list)
  return &msg_id_list_;
}

// bytes attach_data = 20;
inline void IMGetMsgByIdReq::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IMGetMsgByIdReq::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgByIdReq.attach_data)
  return attach_data_.GetNoArena();
}
inline void IMGetMsgByIdReq::set_attach_data(const ::std::string& value) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgByIdReq.attach_data)
}
#if LANG_CXX11
inline void IMGetMsgByIdReq::set_attach_data(::std::string&& value) {
  
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IM.Message.IMGetMsgByIdReq.attach_data)
}
#endif
inline void IMGetMsgByIdReq::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Message.IMGetMsgByIdReq.attach_data)
}
inline void IMGetMsgByIdReq::set_attach_data(const void* value, size_t size) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMGetMsgByIdReq.attach_data)
}
inline ::std::string* IMGetMsgByIdReq::mutable_attach_data() {
  
  // @@protoc_insertion_point(field_mutable:IM.Message.IMGetMsgByIdReq.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IMGetMsgByIdReq::release_attach_data() {
  // @@protoc_insertion_point(field_release:IM.Message.IMGetMsgByIdReq.attach_data)
  
  return attach_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMGetMsgByIdReq::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    
  } else {
    
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMGetMsgByIdReq.attach_data)
}

// -------------------------------------------------------------------

// IMGetMsgByIdRsp

// uint32 user_id = 1;
inline void IMGetMsgByIdRsp::clear_user_id() {
  user_id_ = 0u;
}
inline ::google::protobuf::uint32 IMGetMsgByIdRsp::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgByIdRsp.user_id)
  return user_id_;
}
inline void IMGetMsgByIdRsp::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgByIdRsp.user_id)
}

// .IM.BaseDefine.SessionType session_type = 2;
inline void IMGetMsgByIdRsp::clear_session_type() {
  session_type_ = 0;
}
inline ::IM::BaseDefine::SessionType IMGetMsgByIdRsp::session_type() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgByIdRsp.session_type)
  return static_cast< ::IM::BaseDefine::SessionType >(session_type_);
}
inline void IMGetMsgByIdRsp::set_session_type(::IM::BaseDefine::SessionType value) {
  
  session_type_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgByIdRsp.session_type)
}

// uint32 session_id = 3;
inline void IMGetMsgByIdRsp::clear_session_id() {
  session_id_ = 0u;
}
inline ::google::protobuf::uint32 IMGetMsgByIdRsp::session_id() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgByIdRsp.session_id)
  return session_id_;
}
inline void IMGetMsgByIdRsp::set_session_id(::google::protobuf::uint32 value) {
  
  session_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgByIdRsp.session_id)
}

// repeated .IM.BaseDefine.MsgInfo msg_list = 4;
inline int IMGetMsgByIdRsp::msg_list_size() const {
  return msg_list_.size();
}
inline const ::IM::BaseDefine::MsgInfo& IMGetMsgByIdRsp::msg_list(int index) const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgByIdRsp.msg_list)
  return msg_list_.Get(index);
}
inline ::IM::BaseDefine::MsgInfo* IMGetMsgByIdRsp::mutable_msg_list(int index) {
  // @@protoc_insertion_point(field_mutable:IM.Message.IMGetMsgByIdRsp.msg_list)
  return msg_list_.Mutable(index);
}
inline ::IM::BaseDefine::MsgInfo* IMGetMsgByIdRsp::add_msg_list() {
  // @@protoc_insertion_point(field_add:IM.Message.IMGetMsgByIdRsp.msg_list)
  return msg_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::MsgInfo >*
IMGetMsgByIdRsp::mutable_msg_list() {
  // @@protoc_insertion_point(field_mutable_list:IM.Message.IMGetMsgByIdRsp.msg_list)
  return &msg_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::MsgInfo >&
IMGetMsgByIdRsp::msg_list() const {
  // @@protoc_insertion_point(field_list:IM.Message.IMGetMsgByIdRsp.msg_list)
  return msg_list_;
}

// bytes attach_data = 20;
inline void IMGetMsgByIdRsp::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IMGetMsgByIdRsp::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Message.IMGetMsgByIdRsp.attach_data)
  return attach_data_.GetNoArena();
}
inline void IMGetMsgByIdRsp::set_attach_data(const ::std::string& value) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Message.IMGetMsgByIdRsp.attach_data)
}
#if LANG_CXX11
inline void IMGetMsgByIdRsp::set_attach_data(::std::string&& value) {
  
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IM.Message.IMGetMsgByIdRsp.attach_data)
}
#endif
inline void IMGetMsgByIdRsp::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Message.IMGetMsgByIdRsp.attach_data)
}
inline void IMGetMsgByIdRsp::set_attach_data(const void* value, size_t size) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Message.IMGetMsgByIdRsp.attach_data)
}
inline ::std::string* IMGetMsgByIdRsp::mutable_attach_data() {
  
  // @@protoc_insertion_point(field_mutable:IM.Message.IMGetMsgByIdRsp.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IMGetMsgByIdRsp::release_attach_data() {
  // @@protoc_insertion_point(field_release:IM.Message.IMGetMsgByIdRsp.attach_data)
  
  return attach_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMGetMsgByIdRsp::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    
  } else {
    
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:IM.Message.IMGetMsgByIdRsp.attach_data)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Message
}  // namespace IM

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_IM_2eMessage_2eproto__INCLUDED
