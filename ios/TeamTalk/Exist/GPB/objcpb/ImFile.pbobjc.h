// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IM.File.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class IpAddr;
@class OfflineFileInfo;
GPB_ENUM_FWD_DECLARE(ClientFileRole);
GPB_ENUM_FWD_DECLARE(ClientFileState);
GPB_ENUM_FWD_DECLARE(TransferFileType);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - ImFileRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface ImFileRoot : GPBRootObject
@end

#pragma mark - IMFileLoginReq

typedef GPB_ENUM(IMFileLoginReq_FieldNumber) {
  IMFileLoginReq_FieldNumber_UserId = 1,
  IMFileLoginReq_FieldNumber_TaskId = 2,
  IMFileLoginReq_FieldNumber_FileRole = 3,
};

@interface IMFileLoginReq : GPBMessage

/** cmd id:	0x0501 */
@property(nonatomic, readwrite) uint32_t userId;

@property(nonatomic, readwrite) BOOL hasUserId;
@property(nonatomic, readwrite, copy, null_resettable) NSString *taskId;
/** Test to see if @c taskId has been set. */
@property(nonatomic, readwrite) BOOL hasTaskId;

@property(nonatomic, readwrite) enum ClientFileRole fileRole;

@property(nonatomic, readwrite) BOOL hasFileRole;
@end

#pragma mark - IMFileLoginRsp

typedef GPB_ENUM(IMFileLoginRsp_FieldNumber) {
  IMFileLoginRsp_FieldNumber_ResultCode = 1,
  IMFileLoginRsp_FieldNumber_TaskId = 2,
};

@interface IMFileLoginRsp : GPBMessage

/** cmd id:	0x0502 */
@property(nonatomic, readwrite) uint32_t resultCode;

@property(nonatomic, readwrite) BOOL hasResultCode;
@property(nonatomic, readwrite, copy, null_resettable) NSString *taskId;
/** Test to see if @c taskId has been set. */
@property(nonatomic, readwrite) BOOL hasTaskId;

@end

#pragma mark - IMFileState

typedef GPB_ENUM(IMFileState_FieldNumber) {
  IMFileState_FieldNumber_State = 1,
  IMFileState_FieldNumber_TaskId = 2,
  IMFileState_FieldNumber_UserId = 3,
};

@interface IMFileState : GPBMessage

/** cmd id: 	0x0503 */
@property(nonatomic, readwrite) enum ClientFileState state;

@property(nonatomic, readwrite) BOOL hasState;
@property(nonatomic, readwrite, copy, null_resettable) NSString *taskId;
/** Test to see if @c taskId has been set. */
@property(nonatomic, readwrite) BOOL hasTaskId;

@property(nonatomic, readwrite) uint32_t userId;

@property(nonatomic, readwrite) BOOL hasUserId;
@end

#pragma mark - IMFilePullDataReq

typedef GPB_ENUM(IMFilePullDataReq_FieldNumber) {
  IMFilePullDataReq_FieldNumber_TaskId = 1,
  IMFilePullDataReq_FieldNumber_UserId = 2,
  IMFilePullDataReq_FieldNumber_TransMode = 3,
  IMFilePullDataReq_FieldNumber_Offset = 4,
  IMFilePullDataReq_FieldNumber_DataSize = 5,
};

@interface IMFilePullDataReq : GPBMessage

/** cmd id:	0x0504 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *taskId;
/** Test to see if @c taskId has been set. */
@property(nonatomic, readwrite) BOOL hasTaskId;

@property(nonatomic, readwrite) uint32_t userId;

@property(nonatomic, readwrite) BOOL hasUserId;
@property(nonatomic, readwrite) enum TransferFileType transMode;

@property(nonatomic, readwrite) BOOL hasTransMode;
@property(nonatomic, readwrite) uint32_t offset;

@property(nonatomic, readwrite) BOOL hasOffset;
@property(nonatomic, readwrite) uint32_t dataSize;

@property(nonatomic, readwrite) BOOL hasDataSize;
@end

#pragma mark - IMFilePullDataRsp

typedef GPB_ENUM(IMFilePullDataRsp_FieldNumber) {
  IMFilePullDataRsp_FieldNumber_ResultCode = 1,
  IMFilePullDataRsp_FieldNumber_TaskId = 2,
  IMFilePullDataRsp_FieldNumber_UserId = 3,
  IMFilePullDataRsp_FieldNumber_Offset = 4,
  IMFilePullDataRsp_FieldNumber_FileData = 5,
};

@interface IMFilePullDataRsp : GPBMessage

/** cmd id: 	0x0505 */
@property(nonatomic, readwrite) uint32_t resultCode;

@property(nonatomic, readwrite) BOOL hasResultCode;
@property(nonatomic, readwrite, copy, null_resettable) NSString *taskId;
/** Test to see if @c taskId has been set. */
@property(nonatomic, readwrite) BOOL hasTaskId;

@property(nonatomic, readwrite) uint32_t userId;

@property(nonatomic, readwrite) BOOL hasUserId;
@property(nonatomic, readwrite) uint32_t offset;

@property(nonatomic, readwrite) BOOL hasOffset;
@property(nonatomic, readwrite, copy, null_resettable) NSData *fileData;
/** Test to see if @c fileData has been set. */
@property(nonatomic, readwrite) BOOL hasFileData;

@end

#pragma mark - IMFileReq

typedef GPB_ENUM(IMFileReq_FieldNumber) {
  IMFileReq_FieldNumber_FromUserId = 1,
  IMFileReq_FieldNumber_ToUserId = 2,
  IMFileReq_FieldNumber_FileName = 3,
  IMFileReq_FieldNumber_FileSize = 4,
  IMFileReq_FieldNumber_TransMode = 5,
};

@interface IMFileReq : GPBMessage

/** cmd id: 	0x0506 */
@property(nonatomic, readwrite) uint32_t fromUserId;

@property(nonatomic, readwrite) BOOL hasFromUserId;
@property(nonatomic, readwrite) uint32_t toUserId;

@property(nonatomic, readwrite) BOOL hasToUserId;
@property(nonatomic, readwrite, copy, null_resettable) NSString *fileName;
/** Test to see if @c fileName has been set. */
@property(nonatomic, readwrite) BOOL hasFileName;

@property(nonatomic, readwrite) uint32_t fileSize;

@property(nonatomic, readwrite) BOOL hasFileSize;
@property(nonatomic, readwrite) enum TransferFileType transMode;

@property(nonatomic, readwrite) BOOL hasTransMode;
@end

#pragma mark - IMFileRsp

typedef GPB_ENUM(IMFileRsp_FieldNumber) {
  IMFileRsp_FieldNumber_ResultCode = 1,
  IMFileRsp_FieldNumber_FromUserId = 2,
  IMFileRsp_FieldNumber_ToUserId = 3,
  IMFileRsp_FieldNumber_FileName = 4,
  IMFileRsp_FieldNumber_TaskId = 5,
  IMFileRsp_FieldNumber_IpAddrListArray = 6,
  IMFileRsp_FieldNumber_TransMode = 7,
};

@interface IMFileRsp : GPBMessage

/** cmd id: 	0x0507 */
@property(nonatomic, readwrite) uint32_t resultCode;

@property(nonatomic, readwrite) BOOL hasResultCode;
@property(nonatomic, readwrite) uint32_t fromUserId;

@property(nonatomic, readwrite) BOOL hasFromUserId;
@property(nonatomic, readwrite) uint32_t toUserId;

@property(nonatomic, readwrite) BOOL hasToUserId;
@property(nonatomic, readwrite, copy, null_resettable) NSString *fileName;
/** Test to see if @c fileName has been set. */
@property(nonatomic, readwrite) BOOL hasFileName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *taskId;
/** Test to see if @c taskId has been set. */
@property(nonatomic, readwrite) BOOL hasTaskId;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<IpAddr*> *ipAddrListArray;
/** The number of items in @c ipAddrListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger ipAddrListArray_Count;

@property(nonatomic, readwrite) enum TransferFileType transMode;

@property(nonatomic, readwrite) BOOL hasTransMode;
@end

#pragma mark - IMFileNotify

typedef GPB_ENUM(IMFileNotify_FieldNumber) {
  IMFileNotify_FieldNumber_FromUserId = 1,
  IMFileNotify_FieldNumber_ToUserId = 2,
  IMFileNotify_FieldNumber_FileName = 3,
  IMFileNotify_FieldNumber_FileSize = 4,
  IMFileNotify_FieldNumber_TaskId = 5,
  IMFileNotify_FieldNumber_IpAddrListArray = 6,
  IMFileNotify_FieldNumber_TransMode = 7,
  IMFileNotify_FieldNumber_OfflineReady = 8,
};

@interface IMFileNotify : GPBMessage

/** cmd id: 	0x0508 */
@property(nonatomic, readwrite) uint32_t fromUserId;

@property(nonatomic, readwrite) BOOL hasFromUserId;
@property(nonatomic, readwrite) uint32_t toUserId;

@property(nonatomic, readwrite) BOOL hasToUserId;
@property(nonatomic, readwrite, copy, null_resettable) NSString *fileName;
/** Test to see if @c fileName has been set. */
@property(nonatomic, readwrite) BOOL hasFileName;

@property(nonatomic, readwrite) uint32_t fileSize;

@property(nonatomic, readwrite) BOOL hasFileSize;
@property(nonatomic, readwrite, copy, null_resettable) NSString *taskId;
/** Test to see if @c taskId has been set. */
@property(nonatomic, readwrite) BOOL hasTaskId;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<IpAddr*> *ipAddrListArray;
/** The number of items in @c ipAddrListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger ipAddrListArray_Count;

@property(nonatomic, readwrite) enum TransferFileType transMode;

@property(nonatomic, readwrite) BOOL hasTransMode;
/** 1:True 0:False */
@property(nonatomic, readwrite) uint32_t offlineReady;

@property(nonatomic, readwrite) BOOL hasOfflineReady;
@end

#pragma mark - IMFileHasOfflineReq

typedef GPB_ENUM(IMFileHasOfflineReq_FieldNumber) {
  IMFileHasOfflineReq_FieldNumber_UserId = 1,
  IMFileHasOfflineReq_FieldNumber_AttachData = 20,
};

@interface IMFileHasOfflineReq : GPBMessage

/** cmd id: 	0x0509 */
@property(nonatomic, readwrite) uint32_t userId;

@property(nonatomic, readwrite) BOOL hasUserId;
@property(nonatomic, readwrite, copy, null_resettable) NSData *attachData;
/** Test to see if @c attachData has been set. */
@property(nonatomic, readwrite) BOOL hasAttachData;

@end

#pragma mark - IMFileHasOfflineRsp

typedef GPB_ENUM(IMFileHasOfflineRsp_FieldNumber) {
  IMFileHasOfflineRsp_FieldNumber_UserId = 1,
  IMFileHasOfflineRsp_FieldNumber_OfflineFileListArray = 2,
  IMFileHasOfflineRsp_FieldNumber_IpAddrListArray = 3,
  IMFileHasOfflineRsp_FieldNumber_AttachData = 20,
};

@interface IMFileHasOfflineRsp : GPBMessage

/** cmd id:	0x050a */
@property(nonatomic, readwrite) uint32_t userId;

@property(nonatomic, readwrite) BOOL hasUserId;
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<OfflineFileInfo*> *offlineFileListArray;
/** The number of items in @c offlineFileListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger offlineFileListArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<IpAddr*> *ipAddrListArray;
/** The number of items in @c ipAddrListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger ipAddrListArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSData *attachData;
/** Test to see if @c attachData has been set. */
@property(nonatomic, readwrite) BOOL hasAttachData;

@end

#pragma mark - IMFileAddOfflineReq

typedef GPB_ENUM(IMFileAddOfflineReq_FieldNumber) {
  IMFileAddOfflineReq_FieldNumber_FromUserId = 1,
  IMFileAddOfflineReq_FieldNumber_ToUserId = 2,
  IMFileAddOfflineReq_FieldNumber_TaskId = 3,
  IMFileAddOfflineReq_FieldNumber_FileName = 4,
  IMFileAddOfflineReq_FieldNumber_FileSize = 5,
};

@interface IMFileAddOfflineReq : GPBMessage

/** cmd id:	0x050b */
@property(nonatomic, readwrite) uint32_t fromUserId;

@property(nonatomic, readwrite) BOOL hasFromUserId;
@property(nonatomic, readwrite) uint32_t toUserId;

@property(nonatomic, readwrite) BOOL hasToUserId;
@property(nonatomic, readwrite, copy, null_resettable) NSString *taskId;
/** Test to see if @c taskId has been set. */
@property(nonatomic, readwrite) BOOL hasTaskId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *fileName;
/** Test to see if @c fileName has been set. */
@property(nonatomic, readwrite) BOOL hasFileName;

@property(nonatomic, readwrite) uint32_t fileSize;

@property(nonatomic, readwrite) BOOL hasFileSize;
@end

#pragma mark - IMFileDelOfflineReq

typedef GPB_ENUM(IMFileDelOfflineReq_FieldNumber) {
  IMFileDelOfflineReq_FieldNumber_FromUserId = 1,
  IMFileDelOfflineReq_FieldNumber_ToUserId = 2,
  IMFileDelOfflineReq_FieldNumber_TaskId = 3,
};

@interface IMFileDelOfflineReq : GPBMessage

/** cmd id:	0x050c */
@property(nonatomic, readwrite) uint32_t fromUserId;

@property(nonatomic, readwrite) BOOL hasFromUserId;
@property(nonatomic, readwrite) uint32_t toUserId;

@property(nonatomic, readwrite) BOOL hasToUserId;
@property(nonatomic, readwrite, copy, null_resettable) NSString *taskId;
/** Test to see if @c taskId has been set. */
@property(nonatomic, readwrite) BOOL hasTaskId;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
