// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IM.BaseDefine.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum ServiceID

/** service id */
typedef GPB_ENUM(ServiceID) {
  /** for login */
  ServiceID_SidLogin = 1,

  /** for friend list */
  ServiceID_SidBuddyList = 2,
  ServiceID_SidMsg = 3,

  /** for group message */
  ServiceID_SidGroup = 4,
  ServiceID_SidFile = 5,
  ServiceID_SidSwitchService = 6,
  ServiceID_SidOther = 7,
  ServiceID_SidInternal = 8,
};

GPBEnumDescriptor *ServiceID_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ServiceID_IsValidValue(int32_t value);

#pragma mark - Enum LoginCmdID

/** command id for login */
typedef GPB_ENUM(LoginCmdID) {
  LoginCmdID_CidLoginReqMsgserver = 257,
  LoginCmdID_CidLoginResMsgserver = 258,
  LoginCmdID_CidLoginReqUserlogin = 259,
  LoginCmdID_CidLoginResUserlogin = 260,
  LoginCmdID_CidLoginReqLoginout = 261,
  LoginCmdID_CidLoginResLoginout = 262,
  LoginCmdID_CidLoginKickUser = 263,
  LoginCmdID_CidLoginReqDevicetoken = 264,
  LoginCmdID_CidLoginResDevicetoken = 265,
  LoginCmdID_CidLoginReqKickpcclient = 266,
  LoginCmdID_CidLoginResKickpcclient = 267,

  /** 勿扰 */
  LoginCmdID_CidLoginReqPushShield = 268,
  LoginCmdID_CidLoginResPushShield = 269,
  LoginCmdID_CidLoginReqQueryPushShield = 270,
  LoginCmdID_CidLoginResQueryPushShield = 271,
};

GPBEnumDescriptor *LoginCmdID_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL LoginCmdID_IsValidValue(int32_t value);

#pragma mark - Enum BuddyListCmdID

/** command id for buddy list */
typedef GPB_ENUM(BuddyListCmdID) {
  BuddyListCmdID_CidBuddyListRecentContactSessionRequest = 513,
  BuddyListCmdID_CidBuddyListRecentContactSessionResponse = 514,
  BuddyListCmdID_CidBuddyListStatusNotify = 515,
  BuddyListCmdID_CidBuddyListUserInfoRequest = 516,
  BuddyListCmdID_CidBuddyListUserInfoResponse = 517,
  BuddyListCmdID_CidBuddyListRemoveSessionReq = 518,
  BuddyListCmdID_CidBuddyListRemoveSessionRes = 519,
  BuddyListCmdID_CidBuddyListAllUserRequest = 520,
  BuddyListCmdID_CidBuddyListAllUserResponse = 521,
  BuddyListCmdID_CidBuddyListUsersStatusRequest = 522,
  BuddyListCmdID_CidBuddyListUsersStatusResponse = 523,
  BuddyListCmdID_CidBuddyListChangeAvatarRequest = 524,
  BuddyListCmdID_CidBuddyListChangeAvatarResponse = 525,
  BuddyListCmdID_CidBuddyListPcLoginStatusNotify = 526,
  BuddyListCmdID_CidBuddyListRemoveSessionNotify = 527,
  BuddyListCmdID_CidBuddyListDepartmentRequest = 528,
  BuddyListCmdID_CidBuddyListDepartmentResponse = 529,

  /** 头像更改通知 */
  BuddyListCmdID_CidBuddyListAvatarChangedNotify = 530,

  /** 修改个性签名请求 */
  BuddyListCmdID_CidBuddyListChangeSignInfoRequest = 531,
  BuddyListCmdID_CidBuddyListChangeSignInfoResponse = 532,

  /** 签名修改通知 */
  BuddyListCmdID_CidBuddyListSignInfoChangedNotify = 533,
};

GPBEnumDescriptor *BuddyListCmdID_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL BuddyListCmdID_IsValidValue(int32_t value);

#pragma mark - Enum MessageCmdID

/** command id for msg */
typedef GPB_ENUM(MessageCmdID) {
  MessageCmdID_CidMsgData = 769,
  MessageCmdID_CidMsgDataAck = 770,
  MessageCmdID_CidMsgReadAck = 771,

  /**  已读消息通知 */
  MessageCmdID_CidMsgReadNotify = 772,
  MessageCmdID_CidMsgTimeRequest = 773,
  MessageCmdID_CidMsgTimeResponse = 774,
  MessageCmdID_CidMsgUnreadCntRequest = 775,
  MessageCmdID_CidMsgUnreadCntResponse = 776,

  /** 获取指定队列消息 */
  MessageCmdID_CidMsgListRequest = 777,
  MessageCmdID_CidMsgListResponse = 778,
  MessageCmdID_CidMsgGetLatestMsgIdReq = 779,
  MessageCmdID_CidMsgGetLatestMsgIdRsp = 780,
  MessageCmdID_CidMsgGetByMsgIdReq = 781,
  MessageCmdID_CidMsgGetByMsgIdRes = 782,
};

GPBEnumDescriptor *MessageCmdID_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL MessageCmdID_IsValidValue(int32_t value);

#pragma mark - Enum GroupCmdID

/** command id for group message */
typedef GPB_ENUM(GroupCmdID) {
  GroupCmdID_CidGroupNormalListRequest = 1025,
  GroupCmdID_CidGroupNormalListResponse = 1026,
  GroupCmdID_CidGroupInfoRequest = 1027,
  GroupCmdID_CidGroupInfoResponse = 1028,
  GroupCmdID_CidGroupCreateRequest = 1029,
  GroupCmdID_CidGroupCreateResponse = 1030,
  GroupCmdID_CidGroupChangeMemberRequest = 1031,
  GroupCmdID_CidGroupChangeMemberResponse = 1032,
  GroupCmdID_CidGroupShieldGroupRequest = 1033,
  GroupCmdID_CidGroupShieldGroupResponse = 1034,
  GroupCmdID_CidGroupChangeMemberNotify = 1035,
};

GPBEnumDescriptor *GroupCmdID_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL GroupCmdID_IsValidValue(int32_t value);

#pragma mark - Enum FileCmdID

typedef GPB_ENUM(FileCmdID) {
  /** sender/receiver need to login to */
  FileCmdID_CidFileLoginReq = 1281,

  /** login success or failure */
  FileCmdID_CidFileLoginRes = 1282,
  FileCmdID_CidFileState = 1283,
  FileCmdID_CidFilePullDataReq = 1284,
  FileCmdID_CidFilePullDataRsp = 1285,

  /** To MsgServer */
  FileCmdID_CidFileRequest = 1286,

  /** receiver -> sender */
  FileCmdID_CidFileResponse = 1287,
  FileCmdID_CidFileNotify = 1288,
  FileCmdID_CidFileHasOfflineReq = 1289,
  FileCmdID_CidFileHasOfflineRes = 1290,
  FileCmdID_CidFileAddOfflineReq = 1291,
  FileCmdID_CidFileDelOfflineReq = 1292,
};

GPBEnumDescriptor *FileCmdID_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL FileCmdID_IsValidValue(int32_t value);

#pragma mark - Enum SwitchServiceCmdID

/** command id for switch service */
typedef GPB_ENUM(SwitchServiceCmdID) {
  SwitchServiceCmdID_CidSwitchP2PCmd = 1537,
};

GPBEnumDescriptor *SwitchServiceCmdID_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL SwitchServiceCmdID_IsValidValue(int32_t value);

#pragma mark - Enum OtherCmdID

typedef GPB_ENUM(OtherCmdID) {
  OtherCmdID_CidOtherHeartbeat = 1793,
  OtherCmdID_CidOtherStopRecvPacket = 1794,
  OtherCmdID_CidOtherValidateReq = 1795,
  OtherCmdID_CidOtherValidateRsp = 1796,
  OtherCmdID_CidOtherGetDeviceTokenReq = 1797,
  OtherCmdID_CidOtherGetDeviceTokenRsp = 1798,
  OtherCmdID_CidOtherRoleSet = 1799,
  OtherCmdID_CidOtherOnlineUserInfo = 1800,
  OtherCmdID_CidOtherMsgServInfo = 1801,
  OtherCmdID_CidOtherUserStatusUpdate = 1802,
  OtherCmdID_CidOtherUserCntUpdate = 1803,
  OtherCmdID_CidOtherServerKickUser = 1805,
  OtherCmdID_CidOtherLoginStatusNotify = 1806,
  OtherCmdID_CidOtherPushToUserReq = 1807,
  OtherCmdID_CidOtherPushToUserRsp = 1808,
  OtherCmdID_CidOtherGetShieldReq = 1809,
  OtherCmdID_CidOtherGetShieldRsp = 1810,
  OtherCmdID_CidOtherFileTransferReq = 1841,
  OtherCmdID_CidOtherFileTransferRsp = 1842,
  OtherCmdID_CidOtherFileServerIpReq = 1843,
  OtherCmdID_CidOtherFileServerIpRsp = 1844,
};

GPBEnumDescriptor *OtherCmdID_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL OtherCmdID_IsValidValue(int32_t value);

#pragma mark - Enum ResultType

typedef GPB_ENUM(ResultType) {
  ResultType_RefuseReasonNone = 0,
  ResultType_RefuseReasonNoMsgServer = 1,
  ResultType_RefuseReasonMsgServerFull = 2,
  ResultType_RefuseReasonNoDbServer = 3,
  ResultType_RefuseReasonNoLoginServer = 4,
  ResultType_RefuseReasonNoRouteServer = 5,
  ResultType_RefuseReasonDbValidateFailed = 6,
  ResultType_RefuseReasonVersionTooOld = 7,
};

GPBEnumDescriptor *ResultType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ResultType_IsValidValue(int32_t value);

#pragma mark - Enum KickReasonType

typedef GPB_ENUM(KickReasonType) {
  KickReasonType_KickReasonDuplicateUser = 1,
  KickReasonType_KickReasonMobileKick = 2,
};

GPBEnumDescriptor *KickReasonType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL KickReasonType_IsValidValue(int32_t value);

#pragma mark - Enum OnlineListType

typedef GPB_ENUM(OnlineListType) {
  OnlineListType_OnlineListTypeFriendList = 1,
};

GPBEnumDescriptor *OnlineListType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL OnlineListType_IsValidValue(int32_t value);

#pragma mark - Enum UserStatType

typedef GPB_ENUM(UserStatType) {
  UserStatType_UserStatusOnline = 1,
  UserStatType_UserStatusOffline = 2,
  UserStatType_UserStatusLeave = 3,
};

GPBEnumDescriptor *UserStatType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL UserStatType_IsValidValue(int32_t value);

#pragma mark - Enum SessionType

typedef GPB_ENUM(SessionType) {
  /** 单个用户会话 */
  SessionType_SessionTypeSingle = 1,

  /** 群会话 */
  SessionType_SessionTypeGroup = 2,
};

GPBEnumDescriptor *SessionType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL SessionType_IsValidValue(int32_t value);

#pragma mark - Enum MsgType

typedef GPB_ENUM(MsgType) {
  MsgType_MsgTypeSingleText = 1,
  MsgType_MsgTypeSingleAudio = 2,
  MsgType_MsgTypeGroupText = 17,
  MsgType_MsgTypeGroupAudio = 18,
};

GPBEnumDescriptor *MsgType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL MsgType_IsValidValue(int32_t value);

#pragma mark - Enum ClientType

typedef GPB_ENUM(ClientType) {
  ClientType_ClientTypeWindows = 1,
  ClientType_ClientTypeMac = 2,
  ClientType_ClientTypeIos = 17,
  ClientType_ClientTypeAndroid = 18,
};

GPBEnumDescriptor *ClientType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ClientType_IsValidValue(int32_t value);

#pragma mark - Enum GroupType

typedef GPB_ENUM(GroupType) {
  GroupType_GroupTypeNormal = 1,
  GroupType_GroupTypeTmp = 2,
};

GPBEnumDescriptor *GroupType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL GroupType_IsValidValue(int32_t value);

#pragma mark - Enum GroupModifyType

typedef GPB_ENUM(GroupModifyType) {
  GroupModifyType_GroupModifyTypeAdd = 1,
  GroupModifyType_GroupModifyTypeDel = 2,
};

GPBEnumDescriptor *GroupModifyType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL GroupModifyType_IsValidValue(int32_t value);

#pragma mark - Enum TransferFileType

typedef GPB_ENUM(TransferFileType) {
  TransferFileType_FileTypeOnline = 1,
  TransferFileType_FileTypeOffline = 2,
};

GPBEnumDescriptor *TransferFileType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL TransferFileType_IsValidValue(int32_t value);

#pragma mark - Enum ClientFileState

typedef GPB_ENUM(ClientFileState) {
  ClientFileState_ClientFilePeerReady = 0,
  ClientFileState_ClientFileCancel = 1,
  ClientFileState_ClientFileRefuse = 2,
  ClientFileState_ClientFileDone = 3,
};

GPBEnumDescriptor *ClientFileState_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ClientFileState_IsValidValue(int32_t value);

#pragma mark - Enum ClientFileRole

typedef GPB_ENUM(ClientFileRole) {
  ClientFileRole_ClientRealtimeSender = 1,
  ClientFileRole_ClientRealtimeRecver = 2,
  ClientFileRole_ClientOfflineUpload = 3,
  ClientFileRole_ClientOfflineDownload = 4,
};

GPBEnumDescriptor *ClientFileRole_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ClientFileRole_IsValidValue(int32_t value);

#pragma mark - Enum FileServerError

typedef GPB_ENUM(FileServerError) {
  FileServerError_FileServerErrnoOk = 0,
  FileServerError_FileServerErrnoCreateTaskIdError = 1,
  FileServerError_FileServerErrnoCreateTaskError = 2,
  FileServerError_FileServerErrnoLoginInvalidToken = 3,
  FileServerError_FileServerErrnoInvalidUserForTask = 4,
  FileServerError_FileServerErrnoPullDataWithInvalidTaskId = 5,
  FileServerError_FileServerErrnoPullDataIllieageUser = 6,
  FileServerError_FileServerErrnoPullDataMkdirError = 7,
  FileServerError_FileServerErrnoPullDataOpenFileError = 8,
  FileServerError_FileServerErrnoPullDataReadFileHeaderError = 9,
  FileServerError_FileServerErrnoPullDataAllocMemError = 10,
  FileServerError_FileServerErrnoPullDataSeekOffsetError = 11,
  FileServerError_FileServerErrnoPullDataFinished = 12,
};

GPBEnumDescriptor *FileServerError_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL FileServerError_IsValidValue(int32_t value);

#pragma mark - Enum SessionStatusType

typedef GPB_ENUM(SessionStatusType) {
  SessionStatusType_SessionStatusOk = 0,
  SessionStatusType_SessionStatusDelete = 1,
};

GPBEnumDescriptor *SessionStatusType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL SessionStatusType_IsValidValue(int32_t value);

#pragma mark - Enum DepartmentStatusType

typedef GPB_ENUM(DepartmentStatusType) {
  DepartmentStatusType_DeptStatusOk = 0,
  DepartmentStatusType_DeptStatusDelete = 1,
};

GPBEnumDescriptor *DepartmentStatusType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL DepartmentStatusType_IsValidValue(int32_t value);

#pragma mark - ImBaseDefineRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface ImBaseDefineRoot : GPBRootObject
@end

#pragma mark - IpAddr

typedef GPB_ENUM(IpAddr_FieldNumber) {
  IpAddr_FieldNumber_Ip = 1,
  IpAddr_FieldNumber_Port = 2,
};

@interface IpAddr : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *ip;
/** Test to see if @c ip has been set. */
@property(nonatomic, readwrite) BOOL hasIp;

@property(nonatomic, readwrite) uint32_t port;

@property(nonatomic, readwrite) BOOL hasPort;
@end

#pragma mark - UserInfo

typedef GPB_ENUM(UserInfo_FieldNumber) {
  UserInfo_FieldNumber_UserId = 1,
  UserInfo_FieldNumber_UserGender = 2,
  UserInfo_FieldNumber_UserNickName = 3,
  UserInfo_FieldNumber_AvatarURL = 4,
  UserInfo_FieldNumber_DepartmentId = 5,
  UserInfo_FieldNumber_Email = 6,
  UserInfo_FieldNumber_UserRealName = 7,
  UserInfo_FieldNumber_UserTel = 8,
  UserInfo_FieldNumber_UserDomain = 9,
  UserInfo_FieldNumber_Status = 10,
  UserInfo_FieldNumber_SignInfo = 11,
};

@interface UserInfo : GPBMessage

@property(nonatomic, readwrite) uint32_t userId;

@property(nonatomic, readwrite) BOOL hasUserId;
/** // 用户性别,男：1 女：2 人妖/外星人：0 */
@property(nonatomic, readwrite) uint32_t userGender;

@property(nonatomic, readwrite) BOOL hasUserGender;
/** 绰号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userNickName;
/** Test to see if @c userNickName has been set. */
@property(nonatomic, readwrite) BOOL hasUserNickName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *avatarURL;
/** Test to see if @c avatarURL has been set. */
@property(nonatomic, readwrite) BOOL hasAvatarURL;

@property(nonatomic, readwrite) uint32_t departmentId;

@property(nonatomic, readwrite) BOOL hasDepartmentId;
@property(nonatomic, readwrite, copy, null_resettable) NSString *email;
/** Test to see if @c email has been set. */
@property(nonatomic, readwrite) BOOL hasEmail;

/** 真名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userRealName;
/** Test to see if @c userRealName has been set. */
@property(nonatomic, readwrite) BOOL hasUserRealName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userTel;
/** Test to see if @c userTel has been set. */
@property(nonatomic, readwrite) BOOL hasUserTel;

/** 用户名拼音 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userDomain;
/** Test to see if @c userDomain has been set. */
@property(nonatomic, readwrite) BOOL hasUserDomain;

/** 0:在职  1. 试用期 2. 正式 3. 离职 4.实习,  client端需要对“离职”进行不展示 */
@property(nonatomic, readwrite) uint32_t status;

@property(nonatomic, readwrite) BOOL hasStatus;
@property(nonatomic, readwrite, copy, null_resettable) NSString *signInfo;
/** Test to see if @c signInfo has been set. */
@property(nonatomic, readwrite) BOOL hasSignInfo;

@end

#pragma mark - ContactSessionInfo

typedef GPB_ENUM(ContactSessionInfo_FieldNumber) {
  ContactSessionInfo_FieldNumber_SessionId = 1,
  ContactSessionInfo_FieldNumber_SessionType = 2,
  ContactSessionInfo_FieldNumber_SessionStatus = 3,
  ContactSessionInfo_FieldNumber_UpdatedTime = 4,
  ContactSessionInfo_FieldNumber_LatestMsgId = 5,
  ContactSessionInfo_FieldNumber_LatestMsgData = 6,
  ContactSessionInfo_FieldNumber_LatestMsgType = 7,
  ContactSessionInfo_FieldNumber_LatestMsgFromUserId = 8,
};

@interface ContactSessionInfo : GPBMessage

@property(nonatomic, readwrite) uint32_t sessionId;

@property(nonatomic, readwrite) BOOL hasSessionId;
@property(nonatomic, readwrite) SessionType sessionType;

@property(nonatomic, readwrite) BOOL hasSessionType;
@property(nonatomic, readwrite) SessionStatusType sessionStatus;

@property(nonatomic, readwrite) BOOL hasSessionStatus;
@property(nonatomic, readwrite) uint32_t updatedTime;

@property(nonatomic, readwrite) BOOL hasUpdatedTime;
@property(nonatomic, readwrite) uint32_t latestMsgId;

@property(nonatomic, readwrite) BOOL hasLatestMsgId;
@property(nonatomic, readwrite, copy, null_resettable) NSData *latestMsgData;
/** Test to see if @c latestMsgData has been set. */
@property(nonatomic, readwrite) BOOL hasLatestMsgData;

@property(nonatomic, readwrite) MsgType latestMsgType;

@property(nonatomic, readwrite) BOOL hasLatestMsgType;
@property(nonatomic, readwrite) uint32_t latestMsgFromUserId;

@property(nonatomic, readwrite) BOOL hasLatestMsgFromUserId;
@end

#pragma mark - UserStat

typedef GPB_ENUM(UserStat_FieldNumber) {
  UserStat_FieldNumber_UserId = 1,
  UserStat_FieldNumber_Status = 2,
};

@interface UserStat : GPBMessage

@property(nonatomic, readwrite) uint32_t userId;

@property(nonatomic, readwrite) BOOL hasUserId;
@property(nonatomic, readwrite) UserStatType status;

@property(nonatomic, readwrite) BOOL hasStatus;
@end

#pragma mark - ServerUserStat

typedef GPB_ENUM(ServerUserStat_FieldNumber) {
  ServerUserStat_FieldNumber_UserId = 1,
  ServerUserStat_FieldNumber_Status = 2,
  ServerUserStat_FieldNumber_ClientType = 3,
};

@interface ServerUserStat : GPBMessage

@property(nonatomic, readwrite) uint32_t userId;

@property(nonatomic, readwrite) BOOL hasUserId;
@property(nonatomic, readwrite) UserStatType status;

@property(nonatomic, readwrite) BOOL hasStatus;
@property(nonatomic, readwrite) ClientType clientType;

@property(nonatomic, readwrite) BOOL hasClientType;
@end

#pragma mark - UnreadInfo

typedef GPB_ENUM(UnreadInfo_FieldNumber) {
  UnreadInfo_FieldNumber_SessionId = 1,
  UnreadInfo_FieldNumber_SessionType = 2,
  UnreadInfo_FieldNumber_UnreadCnt = 3,
  UnreadInfo_FieldNumber_LatestMsgId = 4,
  UnreadInfo_FieldNumber_LatestMsgData = 5,
  UnreadInfo_FieldNumber_LatestMsgType = 6,
  UnreadInfo_FieldNumber_LatestMsgFromUserId = 7,
};

@interface UnreadInfo : GPBMessage

@property(nonatomic, readwrite) uint32_t sessionId;

@property(nonatomic, readwrite) BOOL hasSessionId;
@property(nonatomic, readwrite) SessionType sessionType;

@property(nonatomic, readwrite) BOOL hasSessionType;
@property(nonatomic, readwrite) uint32_t unreadCnt;

@property(nonatomic, readwrite) BOOL hasUnreadCnt;
@property(nonatomic, readwrite) uint32_t latestMsgId;

@property(nonatomic, readwrite) BOOL hasLatestMsgId;
@property(nonatomic, readwrite, copy, null_resettable) NSData *latestMsgData;
/** Test to see if @c latestMsgData has been set. */
@property(nonatomic, readwrite) BOOL hasLatestMsgData;

@property(nonatomic, readwrite) MsgType latestMsgType;

@property(nonatomic, readwrite) BOOL hasLatestMsgType;
/** 发送得用户id */
@property(nonatomic, readwrite) uint32_t latestMsgFromUserId;

@property(nonatomic, readwrite) BOOL hasLatestMsgFromUserId;
@end

#pragma mark - MsgInfo

typedef GPB_ENUM(MsgInfo_FieldNumber) {
  MsgInfo_FieldNumber_MsgId = 1,
  MsgInfo_FieldNumber_FromSessionId = 2,
  MsgInfo_FieldNumber_CreateTime = 3,
  MsgInfo_FieldNumber_MsgType = 4,
  MsgInfo_FieldNumber_MsgData = 5,
};

@interface MsgInfo : GPBMessage

@property(nonatomic, readwrite) uint32_t msgId;

@property(nonatomic, readwrite) BOOL hasMsgId;
/** 发送的用户id */
@property(nonatomic, readwrite) uint32_t fromSessionId;

@property(nonatomic, readwrite) BOOL hasFromSessionId;
@property(nonatomic, readwrite) uint32_t createTime;

@property(nonatomic, readwrite) BOOL hasCreateTime;
@property(nonatomic, readwrite) MsgType msgType;

@property(nonatomic, readwrite) BOOL hasMsgType;
@property(nonatomic, readwrite, copy, null_resettable) NSData *msgData;
/** Test to see if @c msgData has been set. */
@property(nonatomic, readwrite) BOOL hasMsgData;

@end

#pragma mark - GroupVersionInfo

typedef GPB_ENUM(GroupVersionInfo_FieldNumber) {
  GroupVersionInfo_FieldNumber_GroupId = 1,
  GroupVersionInfo_FieldNumber_Version = 2,
};

@interface GroupVersionInfo : GPBMessage

@property(nonatomic, readwrite) uint32_t groupId;

@property(nonatomic, readwrite) BOOL hasGroupId;
@property(nonatomic, readwrite) uint32_t version;

@property(nonatomic, readwrite) BOOL hasVersion;
@end

#pragma mark - GroupInfo

typedef GPB_ENUM(GroupInfo_FieldNumber) {
  GroupInfo_FieldNumber_GroupId = 1,
  GroupInfo_FieldNumber_Version = 2,
  GroupInfo_FieldNumber_GroupName = 3,
  GroupInfo_FieldNumber_GroupAvatar = 4,
  GroupInfo_FieldNumber_GroupCreatorId = 5,
  GroupInfo_FieldNumber_GroupType = 6,
  GroupInfo_FieldNumber_ShieldStatus = 7,
  GroupInfo_FieldNumber_GroupMemberListArray = 8,
};

@interface GroupInfo : GPBMessage

@property(nonatomic, readwrite) uint32_t groupId;

@property(nonatomic, readwrite) BOOL hasGroupId;
@property(nonatomic, readwrite) uint32_t version;

@property(nonatomic, readwrite) BOOL hasVersion;
@property(nonatomic, readwrite, copy, null_resettable) NSString *groupName;
/** Test to see if @c groupName has been set. */
@property(nonatomic, readwrite) BOOL hasGroupName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *groupAvatar;
/** Test to see if @c groupAvatar has been set. */
@property(nonatomic, readwrite) BOOL hasGroupAvatar;

@property(nonatomic, readwrite) uint32_t groupCreatorId;

@property(nonatomic, readwrite) BOOL hasGroupCreatorId;
@property(nonatomic, readwrite) GroupType groupType;

@property(nonatomic, readwrite) BOOL hasGroupType;
/** 1: shield  0: not shield */
@property(nonatomic, readwrite) uint32_t shieldStatus;

@property(nonatomic, readwrite) BOOL hasShieldStatus;
@property(nonatomic, readwrite, strong, null_resettable) GPBUInt32Array *groupMemberListArray;
/** The number of items in @c groupMemberListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger groupMemberListArray_Count;

@end

#pragma mark - UserTokenInfo

typedef GPB_ENUM(UserTokenInfo_FieldNumber) {
  UserTokenInfo_FieldNumber_UserId = 1,
  UserTokenInfo_FieldNumber_UserType = 2,
  UserTokenInfo_FieldNumber_Token = 3,
  UserTokenInfo_FieldNumber_PushCount = 4,
  UserTokenInfo_FieldNumber_PushType = 5,
};

@interface UserTokenInfo : GPBMessage

@property(nonatomic, readwrite) uint32_t userId;

@property(nonatomic, readwrite) BOOL hasUserId;
@property(nonatomic, readwrite) ClientType userType;

@property(nonatomic, readwrite) BOOL hasUserType;
@property(nonatomic, readwrite, copy, null_resettable) NSString *token;
/** Test to see if @c token has been set. */
@property(nonatomic, readwrite) BOOL hasToken;

@property(nonatomic, readwrite) uint32_t pushCount;

@property(nonatomic, readwrite) BOOL hasPushCount;
/** 1: 正常推送  	2:无打扰式推送 */
@property(nonatomic, readwrite) uint32_t pushType;

@property(nonatomic, readwrite) BOOL hasPushType;
@end

#pragma mark - PushResult

typedef GPB_ENUM(PushResult_FieldNumber) {
  PushResult_FieldNumber_UserToken = 1,
  PushResult_FieldNumber_ResultCode = 2,
};

@interface PushResult : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *userToken;
/** Test to see if @c userToken has been set. */
@property(nonatomic, readwrite) BOOL hasUserToken;

@property(nonatomic, readwrite) uint32_t resultCode;

@property(nonatomic, readwrite) BOOL hasResultCode;
@end

#pragma mark - ShieldStatus

typedef GPB_ENUM(ShieldStatus_FieldNumber) {
  ShieldStatus_FieldNumber_UserId = 1,
  ShieldStatus_FieldNumber_GroupId = 2,
  ShieldStatus_FieldNumber_ShieldStatus = 3,
};

@interface ShieldStatus : GPBMessage

@property(nonatomic, readwrite) uint32_t userId;

@property(nonatomic, readwrite) BOOL hasUserId;
@property(nonatomic, readwrite) uint32_t groupId;

@property(nonatomic, readwrite) BOOL hasGroupId;
/** 1: shield  0: not shield */
@property(nonatomic, readwrite) uint32_t shieldStatus;

@property(nonatomic, readwrite) BOOL hasShieldStatus;
@end

#pragma mark - OfflineFileInfo

typedef GPB_ENUM(OfflineFileInfo_FieldNumber) {
  OfflineFileInfo_FieldNumber_FromUserId = 1,
  OfflineFileInfo_FieldNumber_TaskId = 2,
  OfflineFileInfo_FieldNumber_FileName = 3,
  OfflineFileInfo_FieldNumber_FileSize = 4,
};

@interface OfflineFileInfo : GPBMessage

@property(nonatomic, readwrite) uint32_t fromUserId;

@property(nonatomic, readwrite) BOOL hasFromUserId;
@property(nonatomic, readwrite, copy, null_resettable) NSString *taskId;
/** Test to see if @c taskId has been set. */
@property(nonatomic, readwrite) BOOL hasTaskId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *fileName;
/** Test to see if @c fileName has been set. */
@property(nonatomic, readwrite) BOOL hasFileName;

@property(nonatomic, readwrite) uint32_t fileSize;

@property(nonatomic, readwrite) BOOL hasFileSize;
@end

#pragma mark - DepartInfo

typedef GPB_ENUM(DepartInfo_FieldNumber) {
  DepartInfo_FieldNumber_DeptId = 1,
  DepartInfo_FieldNumber_Priority = 2,
  DepartInfo_FieldNumber_DeptName = 3,
  DepartInfo_FieldNumber_ParentDeptId = 4,
  DepartInfo_FieldNumber_DeptStatus = 5,
};

@interface DepartInfo : GPBMessage

@property(nonatomic, readwrite) uint32_t deptId;

@property(nonatomic, readwrite) BOOL hasDeptId;
@property(nonatomic, readwrite) uint32_t priority;

@property(nonatomic, readwrite) BOOL hasPriority;
@property(nonatomic, readwrite, copy, null_resettable) NSString *deptName;
/** Test to see if @c deptName has been set. */
@property(nonatomic, readwrite) BOOL hasDeptName;

@property(nonatomic, readwrite) uint32_t parentDeptId;

@property(nonatomic, readwrite) BOOL hasParentDeptId;
@property(nonatomic, readwrite) DepartmentStatusType deptStatus;

@property(nonatomic, readwrite) BOOL hasDeptStatus;
@end

#pragma mark - PushShieldStatus

typedef GPB_ENUM(PushShieldStatus_FieldNumber) {
  PushShieldStatus_FieldNumber_UserId = 1,
  PushShieldStatus_FieldNumber_ShieldStatus = 2,
};

@interface PushShieldStatus : GPBMessage

@property(nonatomic, readwrite) uint32_t userId;

@property(nonatomic, readwrite) BOOL hasUserId;
/** 1: shield  0: not shield */
@property(nonatomic, readwrite) uint32_t shieldStatus;

@property(nonatomic, readwrite) BOOL hasShieldStatus;
@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
